"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[737],{9477:function(a,b,c){c.d(b,{"$V":function(){return hQ},CP7:function(){return ew},D1R:function(){return q},EJi:function(){return gL},F5T:function(){return bv},FM8:function(){return Q},IOt:function(){return w},Ilk:function(){return ae},Kj0:function(){return b0},M8C:function(){return P},Mig:function(){return hs},"N$j":function(){return e$},NMF:function(){return s},OdW:function(){return e2},OoA:function(){return k},Ox3:function(){return hr},PMe:function(){return hk},Pa4:function(){return aq},QRU:function(){return hx},QmN:function(){return e},RsA:function(){return d},Syv:function(){return r},TUv:function(){return eZ},TlE:function(){return bz},Tme:function(){return bi},TyD:function(){return l},UY4:function(){return fj},UlW:function(){return t},Wid:function(){return gK},Wl3:function(){return f},YLQ:function(){return m},ZAu:function(){return eq},Zp0:function(){return hv},ZzF:function(){return at},"_C8":function(){return gU},"_fP":function(){return ap},aH4:function(){return n},aLr:function(){return aM},aNw:function(){return g8},blk:function(){return fi},cPb:function(){return b8},cek:function(){return hp},dUE:function(){return g_},dpR:function(){return hd},ehD:function(){return h},ejS:function(){return fh},hH6:function(){return ha},iKG:function(){return cv},iLg:function(){return g1},iUV:function(){return hM},kB5:function(){return eC},knz:function(){return v},m7l:function(){return g4},nls:function(){return e8},pBf:function(){return A},qyh:function(){return p},rpg:function(){return i},u9r:function(){return bK},uWy:function(){return j},vBJ:function(){return bw},vpT:function(){return eA},wem:function(){return o},woe:function(){return fo},x12:function(){return fe},xEZ:function(){return ak},xsS:function(){return ez},yC1:function(){return g3},yGw:function(){return aV},"z$h":function(){return u}});let d={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},e={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},f=0,g=1,h=2,i=1e3,j=1001,k=1002,l=1003,m=1004,n=1005,o=1006,p=1007,q=1008,r=2300,s=2301,t=1,u=2,v=3001,w=0,x="srgb",y="srgb-linear",z="300 es";class A{addEventListener(a,b){void 0===this._listeners&&(this._listeners={});let c=this._listeners;void 0===c[a]&&(c[a]=[]),-1===c[a].indexOf(b)&&c[a].push(b)}hasEventListener(a,b){if(void 0===this._listeners)return!1;let c=this._listeners;return void 0!==c[a]&& -1!==c[a].indexOf(b)}removeEventListener(a,b){if(void 0===this._listeners)return;let c=this._listeners,d=c[a];if(void 0!==d){let e=d.indexOf(b);-1!==e&&d.splice(e,1)}}dispatchEvent(a){if(void 0===this._listeners)return;let b=this._listeners,c=b[a.type];if(void 0!==c){a.target=this;let d=c.slice(0);for(let e=0,f=d.length;e<f;e++)d[e].call(this,a);a.target=null}}}let B=[];for(let C=0;C<256;C++)B[C]=(C<16?"0":"")+C.toString(16);let D=1234567,E=Math.PI/180,F=180/Math.PI;function G(){let a=4294967295*Math.random()|0,b=4294967295*Math.random()|0,c=4294967295*Math.random()|0,d=4294967295*Math.random()|0,e=B[255&a]+B[a>>8&255]+B[a>>16&255]+B[a>>24&255]+"-"+B[255&b]+B[b>>8&255]+"-"+B[b>>16&15|64]+B[b>>24&255]+"-"+B[63&c|128]+B[c>>8&255]+"-"+B[c>>16&255]+B[c>>24&255]+B[255&d]+B[d>>8&255]+B[d>>16&255]+B[d>>24&255];return e.toLowerCase()}function H(a,b,c){return Math.max(b,Math.min(c,a))}function I(a,b){return(a%b+b)%b}function J(a,b,c){return(1-c)*a+c*b}function K(a){return a*E}function L(a){return a*F}function M(a){return(a&a-1)==0&&0!==a}function N(a){return Math.pow(2,Math.ceil(Math.log(a)/Math.LN2))}function O(a){return Math.pow(2,Math.floor(Math.log(a)/Math.LN2))}var P=Object.freeze({__proto__:null,DEG2RAD:E,RAD2DEG:F,generateUUID:G,clamp:H,euclideanModulo:I,mapLinear:function(a,b,c,d,e){return d+(a-b)*(e-d)/(c-b)},inverseLerp:function(a,b,c){return a!==b?(c-a)/(b-a):0},lerp:J,damp:function(a,b,c,d){return J(a,b,1-Math.exp(-c*d))},pingpong:function(a,b=1){return b-Math.abs(I(a,2*b)-b)},smoothstep:function(a,b,c){return a<=b?0:a>=c?1:(a=(a-b)/(c-b))*a*(3-2*a)},smootherstep:function(a,b,c){return a<=b?0:a>=c?1:(a=(a-b)/(c-b))*a*a*(a*(6*a-15)+10)},randInt:function(a,b){return a+Math.floor(Math.random()*(b-a+1))},randFloat:function(a,b){return a+Math.random()*(b-a)},randFloatSpread:function(a){return a*(.5-Math.random())},seededRandom:function(a){void 0!==a&&(D=a);let b=D+=1831565813;return b=Math.imul(b^b>>>15,1|b),(((b^=b+Math.imul(b^b>>>7,61|b))^b>>>14)>>>0)/4294967296},degToRad:K,radToDeg:L,isPowerOfTwo:M,ceilPowerOfTwo:N,floorPowerOfTwo:O,setQuaternionFromProperEuler:function(a,b,c,d,e){let f=Math.cos,g=Math.sin,h=f(c/2),i=g(c/2),j=f((b+d)/2),k=g((b+d)/2),l=f((b-d)/2),m=g((b-d)/2),n=f((d-b)/2),o=g((d-b)/2);switch(e){case"XYX":a.set(h*k,i*l,i*m,h*j);break;case"YZY":a.set(i*m,h*k,i*l,h*j);break;case"ZXZ":a.set(i*l,i*m,h*k,h*j);break;case"XZX":a.set(h*k,i*o,i*n,h*j);break;case"YXY":a.set(i*n,h*k,i*o,h*j);break;case"ZYZ":a.set(i*o,i*n,h*k,h*j);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+e)}},normalize:function(a,b){switch(b.constructor){case Float32Array:return a;case Uint16Array:return Math.round(65535*a);case Uint8Array:return Math.round(255*a);case Int16Array:return Math.round(32767*a);case Int8Array:return Math.round(127*a);default:throw Error("Invalid component type.")}},denormalize:function(a,b){switch(b.constructor){case Float32Array:return a;case Uint16Array:return a/65535;case Uint8Array:return a/255;case Int16Array:return Math.max(a/32767,-1);case Int8Array:return Math.max(a/127,-1);default:throw Error("Invalid component type.")}}});class Q{constructor(a=0,b=0){this.x=a,this.y=b}get width(){return this.x}set width(a){this.x=a}get height(){return this.y}set height(a){this.y=a}set(a,b){return this.x=a,this.y=b,this}setScalar(a){return this.x=a,this.y=a,this}setX(a){return this.x=a,this}setY(a){return this.y=a,this}setComponent(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;default:throw Error("index is out of range: "+a)}return this}getComponent(a){switch(a){case 0:return this.x;case 1:return this.y;default:throw Error("index is out of range: "+a)}}clone(){return new this.constructor(this.x,this.y)}copy(a){return this.x=a.x,this.y=a.y,this}add(a,b){return void 0!==b?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(a,b)):(this.x+=a.x,this.y+=a.y,this)}addScalar(a){return this.x+=a,this.y+=a,this}addVectors(a,b){return this.x=a.x+b.x,this.y=a.y+b.y,this}addScaledVector(a,b){return this.x+=a.x*b,this.y+=a.y*b,this}sub(a,b){return void 0!==b?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(a,b)):(this.x-=a.x,this.y-=a.y,this)}subScalar(a){return this.x-=a,this.y-=a,this}subVectors(a,b){return this.x=a.x-b.x,this.y=a.y-b.y,this}multiply(a){return this.x*=a.x,this.y*=a.y,this}multiplyScalar(a){return this.x*=a,this.y*=a,this}divide(a){return this.x/=a.x,this.y/=a.y,this}divideScalar(a){return this.multiplyScalar(1/a)}applyMatrix3(a){let b=this.x,c=this.y,d=a.elements;return this.x=d[0]*b+d[3]*c+d[6],this.y=d[1]*b+d[4]*c+d[7],this}min(a){return this.x=Math.min(this.x,a.x),this.y=Math.min(this.y,a.y),this}max(a){return this.x=Math.max(this.x,a.x),this.y=Math.max(this.y,a.y),this}clamp(a,b){return this.x=Math.max(a.x,Math.min(b.x,this.x)),this.y=Math.max(a.y,Math.min(b.y,this.y)),this}clampScalar(a,b){return this.x=Math.max(a,Math.min(b,this.x)),this.y=Math.max(a,Math.min(b,this.y)),this}clampLength(a,b){let c=this.length();return this.divideScalar(c||1).multiplyScalar(Math.max(a,Math.min(b,c)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(a){return this.x*a.x+this.y*a.y}cross(a){return this.x*a.y-this.y*a.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){let a=Math.atan2(-this.y,-this.x)+Math.PI;return a}distanceTo(a){return Math.sqrt(this.distanceToSquared(a))}distanceToSquared(a){let b=this.x-a.x,c=this.y-a.y;return b*b+c*c}manhattanDistanceTo(a){return Math.abs(this.x-a.x)+Math.abs(this.y-a.y)}setLength(a){return this.normalize().multiplyScalar(a)}lerp(a,b){return this.x+=(a.x-this.x)*b,this.y+=(a.y-this.y)*b,this}lerpVectors(a,b,c){return this.x=a.x+(b.x-a.x)*c,this.y=a.y+(b.y-a.y)*c,this}equals(a){return a.x===this.x&&a.y===this.y}fromArray(a,b=0){return this.x=a[b],this.y=a[b+1],this}toArray(a=[],b=0){return a[b]=this.x,a[b+1]=this.y,a}fromBufferAttribute(a,b,c){return void 0!==c&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=a.getX(b),this.y=a.getY(b),this}rotateAround(a,b){let c=Math.cos(b),d=Math.sin(b),e=this.x-a.x,f=this.y-a.y;return this.x=e*c-f*d+a.x,this.y=e*d+f*c+a.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}Q.prototype.isVector2=!0;class R{constructor(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(a,b,c,d,e,f,g,h,i){let j=this.elements;return j[0]=a,j[1]=d,j[2]=g,j[3]=b,j[4]=e,j[5]=h,j[6]=c,j[7]=f,j[8]=i,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(a){let b=this.elements,c=a.elements;return b[0]=c[0],b[1]=c[1],b[2]=c[2],b[3]=c[3],b[4]=c[4],b[5]=c[5],b[6]=c[6],b[7]=c[7],b[8]=c[8],this}extractBasis(a,b,c){return a.setFromMatrix3Column(this,0),b.setFromMatrix3Column(this,1),c.setFromMatrix3Column(this,2),this}setFromMatrix4(a){let b=a.elements;return this.set(b[0],b[4],b[8],b[1],b[5],b[9],b[2],b[6],b[10]),this}multiply(a){return this.multiplyMatrices(this,a)}premultiply(a){return this.multiplyMatrices(a,this)}multiplyMatrices(a,b){let c=a.elements,d=b.elements,e=this.elements,f=c[0],g=c[3],h=c[6],i=c[1],j=c[4],k=c[7],l=c[2],m=c[5],n=c[8],o=d[0],p=d[3],q=d[6],r=d[1],s=d[4],t=d[7],u=d[2],v=d[5],w=d[8];return e[0]=f*o+g*r+h*u,e[3]=f*p+g*s+h*v,e[6]=f*q+g*t+h*w,e[1]=i*o+j*r+k*u,e[4]=i*p+j*s+k*v,e[7]=i*q+j*t+k*w,e[2]=l*o+m*r+n*u,e[5]=l*p+m*s+n*v,e[8]=l*q+m*t+n*w,this}multiplyScalar(a){let b=this.elements;return b[0]*=a,b[3]*=a,b[6]*=a,b[1]*=a,b[4]*=a,b[7]*=a,b[2]*=a,b[5]*=a,b[8]*=a,this}determinant(){let a=this.elements,b=a[0],c=a[1],d=a[2],e=a[3],f=a[4],g=a[5],h=a[6],i=a[7],j=a[8];return b*f*j-b*g*i-c*e*j+c*g*h+d*e*i-d*f*h}invert(){let a=this.elements,b=a[0],c=a[1],d=a[2],e=a[3],f=a[4],g=a[5],h=a[6],i=a[7],j=a[8],k=j*f-g*i,l=g*h-j*e,m=i*e-f*h,n=b*k+c*l+d*m;if(0===n)return this.set(0,0,0,0,0,0,0,0,0);let o=1/n;return a[0]=k*o,a[1]=(d*i-j*c)*o,a[2]=(g*c-d*f)*o,a[3]=l*o,a[4]=(j*b-d*h)*o,a[5]=(d*e-g*b)*o,a[6]=m*o,a[7]=(c*h-i*b)*o,a[8]=(f*b-c*e)*o,this}transpose(){let a,b=this.elements;return a=b[1],b[1]=b[3],b[3]=a,a=b[2],b[2]=b[6],b[6]=a,a=b[5],b[5]=b[7],b[7]=a,this}getNormalMatrix(a){return this.setFromMatrix4(a).invert().transpose()}transposeIntoArray(a){let b=this.elements;return a[0]=b[0],a[1]=b[3],a[2]=b[6],a[3]=b[1],a[4]=b[4],a[5]=b[7],a[6]=b[2],a[7]=b[5],a[8]=b[8],this}setUvTransform(a,b,c,d,e,f,g){let h=Math.cos(e),i=Math.sin(e);return this.set(c*h,c*i,-c*(h*f+i*g)+f+a,-d*i,d*h,-d*(-i*f+h*g)+g+b,0,0,1),this}scale(a,b){let c=this.elements;return c[0]*=a,c[3]*=a,c[6]*=a,c[1]*=b,c[4]*=b,c[7]*=b,this}rotate(a){let b=Math.cos(a),c=Math.sin(a),d=this.elements,e=d[0],f=d[3],g=d[6],h=d[1],i=d[4],j=d[7];return d[0]=b*e+c*h,d[3]=b*f+c*i,d[6]=b*g+c*j,d[1]=-c*e+b*h,d[4]=-c*f+b*i,d[7]=-c*g+b*j,this}translate(a,b){let c=this.elements;return c[0]+=a*c[2],c[3]+=a*c[5],c[6]+=a*c[8],c[1]+=b*c[2],c[4]+=b*c[5],c[7]+=b*c[8],this}equals(a){let b=this.elements,c=a.elements;for(let d=0;d<9;d++)if(b[d]!==c[d])return!1;return!0}fromArray(a,b=0){for(let c=0;c<9;c++)this.elements[c]=a[c+b];return this}toArray(a=[],b=0){let c=this.elements;return a[b]=c[0],a[b+1]=c[1],a[b+2]=c[2],a[b+3]=c[3],a[b+4]=c[4],a[b+5]=c[5],a[b+6]=c[6],a[b+7]=c[7],a[b+8]=c[8],a}clone(){return new this.constructor().fromArray(this.elements)}}function S(a){for(let b=a.length-1;b>=0;--b)if(a[b]>65535)return!0;return!1}R.prototype.isMatrix3=!0;let T={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:Uint8ClampedArray,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};function U(a,b){return new T[a](b)}function V(a){return document.createElementNS("http://www.w3.org/1999/xhtml",a)}function W(a){return a<.04045?.0773993808*a:Math.pow(.9478672986*a+.0521327014,2.4)}function X(a){return a<.0031308?12.92*a:1.055*Math.pow(a,.41666)-.055}let Y={[x]:{[y]:W},[y]:{[x]:X}},Z={legacyMode:!0,get workingColorSpace(){return y},set workingColorSpace(colorSpace){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(a,b,c){if(this.legacyMode||b===c||!b||!c)return a;if(Y[b]&& void 0!==Y[b][c]){let d=Y[b][c];return a.r=d(a.r),a.g=d(a.g),a.b=d(a.b),a}throw Error("Unsupported color space conversion.")},fromWorkingColorSpace:function(a,b){return this.convert(a,this.workingColorSpace,b)},toWorkingColorSpace:function(a,b){return this.convert(a,b,this.workingColorSpace)}},$={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},_={r:0,g:0,b:0},aa={h:0,s:0,l:0},ab={h:0,s:0,l:0};function ac(a,b,c){return(c<0&&(c+=1),c>1&&(c-=1),c<1/6)?a+(b-a)*6*c:c<.5?b:c<2/3?a+(b-a)*6*(2/3-c):a}function ad(a,b){return b.r=a.r,b.g=a.g,b.b=a.b,b}class ae{constructor(a,b,c){if(void 0===b&& void 0===c)return this.set(a);return this.setRGB(a,b,c)}set(a){return a&&a.isColor?this.copy(a):"number"==typeof a?this.setHex(a):"string"==typeof a&&this.setStyle(a),this}setScalar(a){return this.r=a,this.g=a,this.b=a,this}setHex(a,b=x){return a=Math.floor(a),this.r=(a>>16&255)/255,this.g=(a>>8&255)/255,this.b=(255&a)/255,Z.toWorkingColorSpace(this,b),this}setRGB(a,b,c,d=y){return this.r=a,this.g=b,this.b=c,Z.toWorkingColorSpace(this,d),this}setHSL(a,b,c,d=y){if(a=I(a,1),b=H(b,0,1),c=H(c,0,1),0===b)this.r=this.g=this.b=c;else{let e=c<=.5?c*(1+b):c+b-c*b,f=2*c-e;this.r=ac(f,e,a+1/3),this.g=ac(f,e,a),this.b=ac(f,e,a-1/3)}return Z.toWorkingColorSpace(this,d),this}setStyle(a,b=x){function c(b){void 0!==b&&1>parseFloat(b)&&console.warn("THREE.Color: Alpha component of "+a+" will be ignored.")}let d;if(d=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(a)){let e,f=d[1],g=d[2];switch(f){case"rgb":case"rgba":if(e=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(g))return this.r=Math.min(255,parseInt(e[1],10))/255,this.g=Math.min(255,parseInt(e[2],10))/255,this.b=Math.min(255,parseInt(e[3],10))/255,Z.toWorkingColorSpace(this,b),c(e[4]),this;if(e=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(g))return this.r=Math.min(100,parseInt(e[1],10))/100,this.g=Math.min(100,parseInt(e[2],10))/100,this.b=Math.min(100,parseInt(e[3],10))/100,Z.toWorkingColorSpace(this,b),c(e[4]),this;break;case"hsl":case"hsla":if(e=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(g)){let h=parseFloat(e[1])/360,i=parseInt(e[2],10)/100,j=parseInt(e[3],10)/100;return c(e[4]),this.setHSL(h,i,j,b)}}}else if(d=/^\#([A-Fa-f\d]+)$/.exec(a)){let k=d[1],l=k.length;if(3===l)return this.r=parseInt(k.charAt(0)+k.charAt(0),16)/255,this.g=parseInt(k.charAt(1)+k.charAt(1),16)/255,this.b=parseInt(k.charAt(2)+k.charAt(2),16)/255,Z.toWorkingColorSpace(this,b),this;if(6===l)return this.r=parseInt(k.charAt(0)+k.charAt(1),16)/255,this.g=parseInt(k.charAt(2)+k.charAt(3),16)/255,this.b=parseInt(k.charAt(4)+k.charAt(5),16)/255,Z.toWorkingColorSpace(this,b),this}return a&&a.length>0?this.setColorName(a,b):this}setColorName(a,b=x){let c=$[a.toLowerCase()];return void 0!==c?this.setHex(c,b):console.warn("THREE.Color: Unknown color "+a),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(a){return this.r=a.r,this.g=a.g,this.b=a.b,this}copySRGBToLinear(a){return this.r=W(a.r),this.g=W(a.g),this.b=W(a.b),this}copyLinearToSRGB(a){return this.r=X(a.r),this.g=X(a.g),this.b=X(a.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(a=x){return Z.fromWorkingColorSpace(ad(this,_),a),H(255*_.r,0,255)<<16^H(255*_.g,0,255)<<8^H(255*_.b,0,255)<<0}getHexString(a=x){return("000000"+this.getHex(a).toString(16)).slice(-6)}getHSL(a,b=y){Z.fromWorkingColorSpace(ad(this,_),b);let c=_.r,d=_.g,e=_.b,f=Math.max(c,d,e),g=Math.min(c,d,e),h,i,j=(g+f)/2;if(g===f)h=0,i=0;else{let k=f-g;switch(i=j<=.5?k/(f+g):k/(2-f-g),f){case c:h=(d-e)/k+(d<e?6:0);break;case d:h=(e-c)/k+2;break;case e:h=(c-d)/k+4}h/=6}return a.h=h,a.s=i,a.l=j,a}getRGB(a,b=y){return Z.fromWorkingColorSpace(ad(this,_),b),a.r=_.r,a.g=_.g,a.b=_.b,a}getStyle(a=x){return(Z.fromWorkingColorSpace(ad(this,_),a),a!==x)?`color(${a} ${_.r} ${_.g} ${_.b})`:`rgb(${255*_.r|0},${255*_.g|0},${255*_.b|0})`}offsetHSL(a,b,c){return this.getHSL(aa),aa.h+=a,aa.s+=b,aa.l+=c,this.setHSL(aa.h,aa.s,aa.l),this}add(a){return this.r+=a.r,this.g+=a.g,this.b+=a.b,this}addColors(a,b){return this.r=a.r+b.r,this.g=a.g+b.g,this.b=a.b+b.b,this}addScalar(a){return this.r+=a,this.g+=a,this.b+=a,this}sub(a){return this.r=Math.max(0,this.r-a.r),this.g=Math.max(0,this.g-a.g),this.b=Math.max(0,this.b-a.b),this}multiply(a){return this.r*=a.r,this.g*=a.g,this.b*=a.b,this}multiplyScalar(a){return this.r*=a,this.g*=a,this.b*=a,this}lerp(a,b){return this.r+=(a.r-this.r)*b,this.g+=(a.g-this.g)*b,this.b+=(a.b-this.b)*b,this}lerpColors(a,b,c){return this.r=a.r+(b.r-a.r)*c,this.g=a.g+(b.g-a.g)*c,this.b=a.b+(b.b-a.b)*c,this}lerpHSL(a,b){this.getHSL(aa),a.getHSL(ab);let c=J(aa.h,ab.h,b),d=J(aa.s,ab.s,b),e=J(aa.l,ab.l,b);return this.setHSL(c,d,e),this}equals(a){return a.r===this.r&&a.g===this.g&&a.b===this.b}fromArray(a,b=0){return this.r=a[b],this.g=a[b+1],this.b=a[b+2],this}toArray(a=[],b=0){return a[b]=this.r,a[b+1]=this.g,a[b+2]=this.b,a}fromBufferAttribute(a,b){return this.r=a.getX(b),this.g=a.getY(b),this.b=a.getZ(b),!0===a.normalized&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}}ae.NAMES=$,ae.prototype.isColor=!0,ae.prototype.r=1,ae.prototype.g=1,ae.prototype.b=1;let af;class ag{static getDataURL(a){if(/^data:/i.test(a.src)||"undefined"==typeof HTMLCanvasElement)return a.src;let b;if(a instanceof HTMLCanvasElement)b=a;else{void 0===af&&(af=V("canvas")),af.width=a.width,af.height=a.height;let c=af.getContext("2d");a instanceof ImageData?c.putImageData(a,0,0):c.drawImage(a,0,0,a.width,a.height),b=af}return b.width>2048||b.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",a),b.toDataURL("image/jpeg",.6)):b.toDataURL("image/png")}static sRGBToLinear(a){if("undefined"!=typeof HTMLImageElement&&a instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&a instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&a instanceof ImageBitmap){let b=V("canvas");b.width=a.width,b.height=a.height;let c=b.getContext("2d");c.drawImage(a,0,0,a.width,a.height);let d=c.getImageData(0,0,a.width,a.height),e=d.data;for(let f=0;f<e.length;f++)e[f]=255*W(e[f]/255);return c.putImageData(d,0,0),b}if(!a.data)return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),a;{let g=a.data.slice(0);for(let h=0;h<g.length;h++)g instanceof Uint8Array||g instanceof Uint8ClampedArray?g[h]=Math.floor(255*W(g[h]/255)):g[h]=W(g[h]);return{data:g,width:a.width,height:a.height}}}}class ah{constructor(a=null){this.uuid=G(),this.data=a,this.version=0}set needsUpdate(a){!0===a&&this.version++}toJSON(a){let b=void 0===a||"string"==typeof a;if(!b&& void 0!==a.images[this.uuid])return a.images[this.uuid];let c={uuid:this.uuid,url:""},d=this.data;if(null!==d){let e;if(Array.isArray(d)){e=[];for(let f=0,g=d.length;f<g;f++)d[f].isDataTexture?e.push(ai(d[f].image)):e.push(ai(d[f]))}else e=ai(d);c.url=e}return b||(a.images[this.uuid]=c),c}}function ai(a){return"undefined"!=typeof HTMLImageElement&&a instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&a instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&a instanceof ImageBitmap?ag.getDataURL(a):a.data?{data:Array.prototype.slice.call(a.data),width:a.width,height:a.height,type:a.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}ah.prototype.isSource=!0;let aj=0;class ak extends A{constructor(a=ak.DEFAULT_IMAGE,b=ak.DEFAULT_MAPPING,c=j,d=j,e=o,f=q,g=1023,h=1009,i=1,k=3e3){super(),Object.defineProperty(this,"id",{value:aj++}),this.uuid=G(),this.name="",this.source=new ah(a),this.mipmaps=[],this.mapping=b,this.wrapS=c,this.wrapT=d,this.magFilter=e,this.minFilter=f,this.anisotropy=i,this.format=g,this.internalFormat=null,this.type=h,this.offset=new Q(0,0),this.repeat=new Q(1,1),this.center=new Q(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new R,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=k,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(a){this.source.data=a}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(a){return this.name=a.name,this.source=a.source,this.mipmaps=a.mipmaps.slice(0),this.mapping=a.mapping,this.wrapS=a.wrapS,this.wrapT=a.wrapT,this.magFilter=a.magFilter,this.minFilter=a.minFilter,this.anisotropy=a.anisotropy,this.format=a.format,this.internalFormat=a.internalFormat,this.type=a.type,this.offset.copy(a.offset),this.repeat.copy(a.repeat),this.center.copy(a.center),this.rotation=a.rotation,this.matrixAutoUpdate=a.matrixAutoUpdate,this.matrix.copy(a.matrix),this.generateMipmaps=a.generateMipmaps,this.premultiplyAlpha=a.premultiplyAlpha,this.flipY=a.flipY,this.unpackAlignment=a.unpackAlignment,this.encoding=a.encoding,this.userData=JSON.parse(JSON.stringify(a.userData)),this.needsUpdate=!0,this}toJSON(a){let b=void 0===a||"string"==typeof a;if(!b&& void 0!==a.textures[this.uuid])return a.textures[this.uuid];let c={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(a).uuid,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return"{}"!==JSON.stringify(this.userData)&&(c.userData=this.userData),b||(a.textures[this.uuid]=c),c}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(a){if(300!==this.mapping)return a;if(a.applyMatrix3(this.matrix),a.x<0||a.x>1)switch(this.wrapS){case i:a.x=a.x-Math.floor(a.x);break;case j:a.x=a.x<0?0:1;break;case k:1===Math.abs(Math.floor(a.x)%2)?a.x=Math.ceil(a.x)-a.x:a.x=a.x-Math.floor(a.x)}if(a.y<0||a.y>1)switch(this.wrapT){case i:a.y=a.y-Math.floor(a.y);break;case j:a.y=a.y<0?0:1;break;case k:1===Math.abs(Math.floor(a.y)%2)?a.y=Math.ceil(a.y)-a.y:a.y=a.y-Math.floor(a.y)}return this.flipY&&(a.y=1-a.y),a}set needsUpdate(a){!0===a&&(this.version++,this.source.needsUpdate=!0)}}ak.DEFAULT_IMAGE=null,ak.DEFAULT_MAPPING=300,ak.prototype.isTexture=!0;class al{constructor(a=0,b=0,c=0,d=1){this.x=a,this.y=b,this.z=c,this.w=d}get width(){return this.z}set width(a){this.z=a}get height(){return this.w}set height(a){this.w=a}set(a,b,c,d){return this.x=a,this.y=b,this.z=c,this.w=d,this}setScalar(a){return this.x=a,this.y=a,this.z=a,this.w=a,this}setX(a){return this.x=a,this}setY(a){return this.y=a,this}setZ(a){return this.z=a,this}setW(a){return this.w=a,this}setComponent(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;case 2:this.z=b;break;case 3:this.w=b;break;default:throw Error("index is out of range: "+a)}return this}getComponent(a){switch(a){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw Error("index is out of range: "+a)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(a){return this.x=a.x,this.y=a.y,this.z=a.z,this.w=void 0!==a.w?a.w:1,this}add(a,b){return void 0!==b?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(a,b)):(this.x+=a.x,this.y+=a.y,this.z+=a.z,this.w+=a.w,this)}addScalar(a){return this.x+=a,this.y+=a,this.z+=a,this.w+=a,this}addVectors(a,b){return this.x=a.x+b.x,this.y=a.y+b.y,this.z=a.z+b.z,this.w=a.w+b.w,this}addScaledVector(a,b){return this.x+=a.x*b,this.y+=a.y*b,this.z+=a.z*b,this.w+=a.w*b,this}sub(a,b){return void 0!==b?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(a,b)):(this.x-=a.x,this.y-=a.y,this.z-=a.z,this.w-=a.w,this)}subScalar(a){return this.x-=a,this.y-=a,this.z-=a,this.w-=a,this}subVectors(a,b){return this.x=a.x-b.x,this.y=a.y-b.y,this.z=a.z-b.z,this.w=a.w-b.w,this}multiply(a){return this.x*=a.x,this.y*=a.y,this.z*=a.z,this.w*=a.w,this}multiplyScalar(a){return this.x*=a,this.y*=a,this.z*=a,this.w*=a,this}applyMatrix4(a){let b=this.x,c=this.y,d=this.z,e=this.w,f=a.elements;return this.x=f[0]*b+f[4]*c+f[8]*d+f[12]*e,this.y=f[1]*b+f[5]*c+f[9]*d+f[13]*e,this.z=f[2]*b+f[6]*c+f[10]*d+f[14]*e,this.w=f[3]*b+f[7]*c+f[11]*d+f[15]*e,this}divideScalar(a){return this.multiplyScalar(1/a)}setAxisAngleFromQuaternion(a){this.w=2*Math.acos(a.w);let b=Math.sqrt(1-a.w*a.w);return b<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=a.x/b,this.y=a.y/b,this.z=a.z/b),this}setAxisAngleFromRotationMatrix(a){let b,c,d,e,f=a.elements,g=f[0],h=f[4],i=f[8],j=f[1],k=f[5],l=f[9],m=f[2],n=f[6],o=f[10];if(.01>Math.abs(h-j)&&.01>Math.abs(i-m)&&.01>Math.abs(l-n)){if(.1>Math.abs(h+j)&&.1>Math.abs(i+m)&&.1>Math.abs(l+n)&&.1>Math.abs(g+k+o-3))return this.set(1,0,0,0),this;b=Math.PI;let p=(g+1)/2,q=(k+1)/2,r=(o+1)/2,s=(h+j)/4,t=(i+m)/4,u=(l+n)/4;return p>q&&p>r?p<.01?(c=0,d=.707106781,e=.707106781):(c=Math.sqrt(p),d=s/c,e=t/c):q>r?q<.01?(c=.707106781,d=0,e=.707106781):(d=Math.sqrt(q),c=s/d,e=u/d):r<.01?(c=.707106781,d=.707106781,e=0):(e=Math.sqrt(r),c=t/e,d=u/e),this.set(c,d,e,b),this}let v=Math.sqrt((n-l)*(n-l)+(i-m)*(i-m)+(j-h)*(j-h));return .001>Math.abs(v)&&(v=1),this.x=(n-l)/v,this.y=(i-m)/v,this.z=(j-h)/v,this.w=Math.acos((g+k+o-1)/2),this}min(a){return this.x=Math.min(this.x,a.x),this.y=Math.min(this.y,a.y),this.z=Math.min(this.z,a.z),this.w=Math.min(this.w,a.w),this}max(a){return this.x=Math.max(this.x,a.x),this.y=Math.max(this.y,a.y),this.z=Math.max(this.z,a.z),this.w=Math.max(this.w,a.w),this}clamp(a,b){return this.x=Math.max(a.x,Math.min(b.x,this.x)),this.y=Math.max(a.y,Math.min(b.y,this.y)),this.z=Math.max(a.z,Math.min(b.z,this.z)),this.w=Math.max(a.w,Math.min(b.w,this.w)),this}clampScalar(a,b){return this.x=Math.max(a,Math.min(b,this.x)),this.y=Math.max(a,Math.min(b,this.y)),this.z=Math.max(a,Math.min(b,this.z)),this.w=Math.max(a,Math.min(b,this.w)),this}clampLength(a,b){let c=this.length();return this.divideScalar(c||1).multiplyScalar(Math.max(a,Math.min(b,c)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(a){return this.x*a.x+this.y*a.y+this.z*a.z+this.w*a.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(a){return this.normalize().multiplyScalar(a)}lerp(a,b){return this.x+=(a.x-this.x)*b,this.y+=(a.y-this.y)*b,this.z+=(a.z-this.z)*b,this.w+=(a.w-this.w)*b,this}lerpVectors(a,b,c){return this.x=a.x+(b.x-a.x)*c,this.y=a.y+(b.y-a.y)*c,this.z=a.z+(b.z-a.z)*c,this.w=a.w+(b.w-a.w)*c,this}equals(a){return a.x===this.x&&a.y===this.y&&a.z===this.z&&a.w===this.w}fromArray(a,b=0){return this.x=a[b],this.y=a[b+1],this.z=a[b+2],this.w=a[b+3],this}toArray(a=[],b=0){return a[b]=this.x,a[b+1]=this.y,a[b+2]=this.z,a[b+3]=this.w,a}fromBufferAttribute(a,b,c){return void 0!==c&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=a.getX(b),this.y=a.getY(b),this.z=a.getZ(b),this.w=a.getW(b),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}al.prototype.isVector4=!0;class am extends A{constructor(a,b,c={}){super(),this.width=a,this.height=b,this.depth=1,this.scissor=new al(0,0,a,b),this.scissorTest=!1,this.viewport=new al(0,0,a,b),this.texture=new ak({width:a,height:b,depth:1},c.mapping,c.wrapS,c.wrapT,c.magFilter,c.minFilter,c.format,c.type,c.anisotropy,c.encoding),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=void 0!==c.generateMipmaps&&c.generateMipmaps,this.texture.internalFormat=void 0!==c.internalFormat?c.internalFormat:null,this.texture.minFilter=void 0!==c.minFilter?c.minFilter:o,this.depthBuffer=void 0===c.depthBuffer||c.depthBuffer,this.stencilBuffer=void 0!==c.stencilBuffer&&c.stencilBuffer,this.depthTexture=void 0!==c.depthTexture?c.depthTexture:null,this.samples=void 0!==c.samples?c.samples:0}setSize(a,b,c=1){(this.width!==a||this.height!==b||this.depth!==c)&&(this.width=a,this.height=b,this.depth=c,this.texture.image.width=a,this.texture.image.height=b,this.texture.image.depth=c,this.dispose()),this.viewport.set(0,0,a,b),this.scissor.set(0,0,a,b)}clone(){return new this.constructor().copy(this)}copy(a){return this.width=a.width,this.height=a.height,this.depth=a.depth,this.viewport.copy(a.viewport),this.texture=a.texture.clone(),this.texture.isRenderTargetTexture=!0,this.texture.image=Object.assign({},a.texture.image),this.depthBuffer=a.depthBuffer,this.stencilBuffer=a.stencilBuffer,null!==a.depthTexture&&(this.depthTexture=a.depthTexture.clone()),this.samples=a.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}am.prototype.isWebGLRenderTarget=!0;class an extends ak{constructor(a=null,b=1,c=1,d=1){super(null),this.image={data:a,width:b,height:c,depth:d},this.magFilter=l,this.minFilter=l,this.wrapR=j,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}an.prototype.isDataArrayTexture=!0,(class extends am{constructor(a,b,c){super(a,b),this.depth=c,this.texture=new an(null,a,b,c),this.texture.isRenderTargetTexture=!0}}).prototype.isWebGLArrayRenderTarget=!0;class ao extends ak{constructor(a=null,b=1,c=1,d=1){super(null),this.image={data:a,width:b,height:c,depth:d},this.magFilter=l,this.minFilter=l,this.wrapR=j,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}ao.prototype.isData3DTexture=!0,(class extends am{constructor(a,b,c){super(a,b),this.depth=c,this.texture=new ao(null,a,b,c),this.texture.isRenderTargetTexture=!0}}).prototype.isWebGL3DRenderTarget=!0,(class extends am{constructor(a,b,c,d={}){super(a,b,d);let e=this.texture;this.texture=[];for(let f=0;f<c;f++)this.texture[f]=e.clone(),this.texture[f].isRenderTargetTexture=!0}setSize(a,b,c=1){if(this.width!==a||this.height!==b||this.depth!==c){this.width=a,this.height=b,this.depth=c;for(let d=0,e=this.texture.length;d<e;d++)this.texture[d].image.width=a,this.texture[d].image.height=b,this.texture[d].image.depth=c;this.dispose()}return this.viewport.set(0,0,a,b),this.scissor.set(0,0,a,b),this}copy(a){this.dispose(),this.width=a.width,this.height=a.height,this.depth=a.depth,this.viewport.set(0,0,this.width,this.height),this.scissor.set(0,0,this.width,this.height),this.depthBuffer=a.depthBuffer,this.stencilBuffer=a.stencilBuffer,this.depthTexture=a.depthTexture,this.texture.length=0;for(let b=0,c=a.texture.length;b<c;b++)this.texture[b]=a.texture[b].clone();return this}}).prototype.isWebGLMultipleRenderTargets=!0;class ap{constructor(a=0,b=0,c=0,d=1){this._x=a,this._y=b,this._z=c,this._w=d}static slerp(a,b,c,d){return console.warn("THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."),c.slerpQuaternions(a,b,d)}static slerpFlat(a,b,c,d,e,f,g){let h=c[d+0],i=c[d+1],j=c[d+2],k=c[d+3],l=e[f+0],m=e[f+1],n=e[f+2],o=e[f+3];if(0===g){a[b+0]=h,a[b+1]=i,a[b+2]=j,a[b+3]=k;return}if(1===g){a[b+0]=l,a[b+1]=m,a[b+2]=n,a[b+3]=o;return}if(k!==o||h!==l||i!==m||j!==n){let p=1-g,q=h*l+i*m+j*n+k*o,r=q>=0?1:-1,s=1-q*q;if(s>Number.EPSILON){let t=Math.sqrt(s),u=Math.atan2(t,q*r);p=Math.sin(p*u)/t,g=Math.sin(g*u)/t}let v=g*r;if(h=h*p+l*v,i=i*p+m*v,j=j*p+n*v,k=k*p+o*v,p===1-g){let w=1/Math.sqrt(h*h+i*i+j*j+k*k);h*=w,i*=w,j*=w,k*=w}}a[b]=h,a[b+1]=i,a[b+2]=j,a[b+3]=k}static multiplyQuaternionsFlat(a,b,c,d,e,f){let g=c[d],h=c[d+1],i=c[d+2],j=c[d+3],k=e[f],l=e[f+1],m=e[f+2],n=e[f+3];return a[b]=g*n+j*k+h*m-i*l,a[b+1]=h*n+j*l+i*k-g*m,a[b+2]=i*n+j*m+g*l-h*k,a[b+3]=j*n-g*k-h*l-i*m,a}get x(){return this._x}set x(a){this._x=a,this._onChangeCallback()}get y(){return this._y}set y(a){this._y=a,this._onChangeCallback()}get z(){return this._z}set z(a){this._z=a,this._onChangeCallback()}get w(){return this._w}set w(a){this._w=a,this._onChangeCallback()}set(a,b,c,d){return this._x=a,this._y=b,this._z=c,this._w=d,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(a){return this._x=a.x,this._y=a.y,this._z=a.z,this._w=a.w,this._onChangeCallback(),this}setFromEuler(a,b){if(!(a&&a.isEuler))throw Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");let c=a._x,d=a._y,e=a._z,f=a._order,g=Math.cos,h=Math.sin,i=g(c/2),j=g(d/2),k=g(e/2),l=h(c/2),m=h(d/2),n=h(e/2);switch(f){case"XYZ":this._x=l*j*k+i*m*n,this._y=i*m*k-l*j*n,this._z=i*j*n+l*m*k,this._w=i*j*k-l*m*n;break;case"YXZ":this._x=l*j*k+i*m*n,this._y=i*m*k-l*j*n,this._z=i*j*n-l*m*k,this._w=i*j*k+l*m*n;break;case"ZXY":this._x=l*j*k-i*m*n,this._y=i*m*k+l*j*n,this._z=i*j*n+l*m*k,this._w=i*j*k-l*m*n;break;case"ZYX":this._x=l*j*k-i*m*n,this._y=i*m*k+l*j*n,this._z=i*j*n-l*m*k,this._w=i*j*k+l*m*n;break;case"YZX":this._x=l*j*k+i*m*n,this._y=i*m*k+l*j*n,this._z=i*j*n-l*m*k,this._w=i*j*k-l*m*n;break;case"XZY":this._x=l*j*k-i*m*n,this._y=i*m*k-l*j*n,this._z=i*j*n+l*m*k,this._w=i*j*k+l*m*n;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+f)}return!1!==b&&this._onChangeCallback(),this}setFromAxisAngle(a,b){let c=b/2,d=Math.sin(c);return this._x=a.x*d,this._y=a.y*d,this._z=a.z*d,this._w=Math.cos(c),this._onChangeCallback(),this}setFromRotationMatrix(a){let b=a.elements,c=b[0],d=b[4],e=b[8],f=b[1],g=b[5],h=b[9],i=b[2],j=b[6],k=b[10],l=c+g+k;if(l>0){let m=.5/Math.sqrt(l+1);this._w=.25/m,this._x=(j-h)*m,this._y=(e-i)*m,this._z=(f-d)*m}else if(c>g&&c>k){let n=2*Math.sqrt(1+c-g-k);this._w=(j-h)/n,this._x=.25*n,this._y=(d+f)/n,this._z=(e+i)/n}else if(g>k){let o=2*Math.sqrt(1+g-c-k);this._w=(e-i)/o,this._x=(d+f)/o,this._y=.25*o,this._z=(h+j)/o}else{let p=2*Math.sqrt(1+k-c-g);this._w=(f-d)/p,this._x=(e+i)/p,this._y=(h+j)/p,this._z=.25*p}return this._onChangeCallback(),this}setFromUnitVectors(a,b){let c=a.dot(b)+1;return c<Number.EPSILON?(c=0,Math.abs(a.x)>Math.abs(a.z)?(this._x=-a.y,this._y=a.x,this._z=0,this._w=c):(this._x=0,this._y=-a.z,this._z=a.y,this._w=c)):(this._x=a.y*b.z-a.z*b.y,this._y=a.z*b.x-a.x*b.z,this._z=a.x*b.y-a.y*b.x,this._w=c),this.normalize()}angleTo(a){return 2*Math.acos(Math.abs(H(this.dot(a),-1,1)))}rotateTowards(a,b){let c=this.angleTo(a);if(0===c)return this;let d=Math.min(1,b/c);return this.slerp(a,d),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(a){return this._x*a._x+this._y*a._y+this._z*a._z+this._w*a._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let a=this.length();return 0===a?(this._x=0,this._y=0,this._z=0,this._w=1):(a=1/a,this._x=this._x*a,this._y=this._y*a,this._z=this._z*a,this._w=this._w*a),this._onChangeCallback(),this}multiply(a,b){return void 0!==b?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(a,b)):this.multiplyQuaternions(this,a)}premultiply(a){return this.multiplyQuaternions(a,this)}multiplyQuaternions(a,b){let c=a._x,d=a._y,e=a._z,f=a._w,g=b._x,h=b._y,i=b._z,j=b._w;return this._x=c*j+f*g+d*i-e*h,this._y=d*j+f*h+e*g-c*i,this._z=e*j+f*i+c*h-d*g,this._w=f*j-c*g-d*h-e*i,this._onChangeCallback(),this}slerp(a,b){if(0===b)return this;if(1===b)return this.copy(a);let c=this._x,d=this._y,e=this._z,f=this._w,g=f*a._w+c*a._x+d*a._y+e*a._z;if(g<0?(this._w=-a._w,this._x=-a._x,this._y=-a._y,this._z=-a._z,g=-g):this.copy(a),g>=1)return this._w=f,this._x=c,this._y=d,this._z=e,this;let h=1-g*g;if(h<=Number.EPSILON){let i=1-b;return this._w=i*f+b*this._w,this._x=i*c+b*this._x,this._y=i*d+b*this._y,this._z=i*e+b*this._z,this.normalize(),this._onChangeCallback(),this}let j=Math.sqrt(h),k=Math.atan2(j,g),l=Math.sin((1-b)*k)/j,m=Math.sin(b*k)/j;return this._w=f*l+this._w*m,this._x=c*l+this._x*m,this._y=d*l+this._y*m,this._z=e*l+this._z*m,this._onChangeCallback(),this}slerpQuaternions(a,b,c){return this.copy(a).slerp(b,c)}random(){let a=Math.random(),b=Math.sqrt(1-a),c=Math.sqrt(a),d=2*Math.PI*Math.random(),e=2*Math.PI*Math.random();return this.set(b*Math.cos(d),c*Math.sin(e),c*Math.cos(e),b*Math.sin(d))}equals(a){return a._x===this._x&&a._y===this._y&&a._z===this._z&&a._w===this._w}fromArray(a,b=0){return this._x=a[b],this._y=a[b+1],this._z=a[b+2],this._w=a[b+3],this._onChangeCallback(),this}toArray(a=[],b=0){return a[b]=this._x,a[b+1]=this._y,a[b+2]=this._z,a[b+3]=this._w,a}fromBufferAttribute(a,b){return this._x=a.getX(b),this._y=a.getY(b),this._z=a.getZ(b),this._w=a.getW(b),this}_onChange(a){return this._onChangeCallback=a,this}_onChangeCallback(){}}ap.prototype.isQuaternion=!0;class aq{constructor(a=0,b=0,c=0){this.x=a,this.y=b,this.z=c}set(a,b,c){return void 0===c&&(c=this.z),this.x=a,this.y=b,this.z=c,this}setScalar(a){return this.x=a,this.y=a,this.z=a,this}setX(a){return this.x=a,this}setY(a){return this.y=a,this}setZ(a){return this.z=a,this}setComponent(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;case 2:this.z=b;break;default:throw Error("index is out of range: "+a)}return this}getComponent(a){switch(a){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw Error("index is out of range: "+a)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(a){return this.x=a.x,this.y=a.y,this.z=a.z,this}add(a,b){return void 0!==b?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(a,b)):(this.x+=a.x,this.y+=a.y,this.z+=a.z,this)}addScalar(a){return this.x+=a,this.y+=a,this.z+=a,this}addVectors(a,b){return this.x=a.x+b.x,this.y=a.y+b.y,this.z=a.z+b.z,this}addScaledVector(a,b){return this.x+=a.x*b,this.y+=a.y*b,this.z+=a.z*b,this}sub(a,b){return void 0!==b?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(a,b)):(this.x-=a.x,this.y-=a.y,this.z-=a.z,this)}subScalar(a){return this.x-=a,this.y-=a,this.z-=a,this}subVectors(a,b){return this.x=a.x-b.x,this.y=a.y-b.y,this.z=a.z-b.z,this}multiply(a,b){return void 0!==b?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(a,b)):(this.x*=a.x,this.y*=a.y,this.z*=a.z,this)}multiplyScalar(a){return this.x*=a,this.y*=a,this.z*=a,this}multiplyVectors(a,b){return this.x=a.x*b.x,this.y=a.y*b.y,this.z=a.z*b.z,this}applyEuler(a){return a&&a.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(as.setFromEuler(a))}applyAxisAngle(a,b){return this.applyQuaternion(as.setFromAxisAngle(a,b))}applyMatrix3(a){let b=this.x,c=this.y,d=this.z,e=a.elements;return this.x=e[0]*b+e[3]*c+e[6]*d,this.y=e[1]*b+e[4]*c+e[7]*d,this.z=e[2]*b+e[5]*c+e[8]*d,this}applyNormalMatrix(a){return this.applyMatrix3(a).normalize()}applyMatrix4(a){let b=this.x,c=this.y,d=this.z,e=a.elements,f=1/(e[3]*b+e[7]*c+e[11]*d+e[15]);return this.x=(e[0]*b+e[4]*c+e[8]*d+e[12])*f,this.y=(e[1]*b+e[5]*c+e[9]*d+e[13])*f,this.z=(e[2]*b+e[6]*c+e[10]*d+e[14])*f,this}applyQuaternion(a){let b=this.x,c=this.y,d=this.z,e=a.x,f=a.y,g=a.z,h=a.w,i=h*b+f*d-g*c,j=h*c+g*b-e*d,k=h*d+e*c-f*b,l=-e*b-f*c-g*d;return this.x=i*h+ -(l*e)+ -(j*g)- -(k*f),this.y=j*h+ -(l*f)+ -(k*e)- -(i*g),this.z=k*h+ -(l*g)+ -(i*f)- -(j*e),this}project(a){return this.applyMatrix4(a.matrixWorldInverse).applyMatrix4(a.projectionMatrix)}unproject(a){return this.applyMatrix4(a.projectionMatrixInverse).applyMatrix4(a.matrixWorld)}transformDirection(a){let b=this.x,c=this.y,d=this.z,e=a.elements;return this.x=e[0]*b+e[4]*c+e[8]*d,this.y=e[1]*b+e[5]*c+e[9]*d,this.z=e[2]*b+e[6]*c+e[10]*d,this.normalize()}divide(a){return this.x/=a.x,this.y/=a.y,this.z/=a.z,this}divideScalar(a){return this.multiplyScalar(1/a)}min(a){return this.x=Math.min(this.x,a.x),this.y=Math.min(this.y,a.y),this.z=Math.min(this.z,a.z),this}max(a){return this.x=Math.max(this.x,a.x),this.y=Math.max(this.y,a.y),this.z=Math.max(this.z,a.z),this}clamp(a,b){return this.x=Math.max(a.x,Math.min(b.x,this.x)),this.y=Math.max(a.y,Math.min(b.y,this.y)),this.z=Math.max(a.z,Math.min(b.z,this.z)),this}clampScalar(a,b){return this.x=Math.max(a,Math.min(b,this.x)),this.y=Math.max(a,Math.min(b,this.y)),this.z=Math.max(a,Math.min(b,this.z)),this}clampLength(a,b){let c=this.length();return this.divideScalar(c||1).multiplyScalar(Math.max(a,Math.min(b,c)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(a){return this.x*a.x+this.y*a.y+this.z*a.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(a){return this.normalize().multiplyScalar(a)}lerp(a,b){return this.x+=(a.x-this.x)*b,this.y+=(a.y-this.y)*b,this.z+=(a.z-this.z)*b,this}lerpVectors(a,b,c){return this.x=a.x+(b.x-a.x)*c,this.y=a.y+(b.y-a.y)*c,this.z=a.z+(b.z-a.z)*c,this}cross(a,b){return void 0!==b?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(a,b)):this.crossVectors(this,a)}crossVectors(a,b){let c=a.x,d=a.y,e=a.z,f=b.x,g=b.y,h=b.z;return this.x=d*h-e*g,this.y=e*f-c*h,this.z=c*g-d*f,this}projectOnVector(a){let b=a.lengthSq();if(0===b)return this.set(0,0,0);let c=a.dot(this)/b;return this.copy(a).multiplyScalar(c)}projectOnPlane(a){return ar.copy(this).projectOnVector(a),this.sub(ar)}reflect(a){return this.sub(ar.copy(a).multiplyScalar(2*this.dot(a)))}angleTo(a){let b=Math.sqrt(this.lengthSq()*a.lengthSq());if(0===b)return Math.PI/2;let c=this.dot(a)/b;return Math.acos(H(c,-1,1))}distanceTo(a){return Math.sqrt(this.distanceToSquared(a))}distanceToSquared(a){let b=this.x-a.x,c=this.y-a.y,d=this.z-a.z;return b*b+c*c+d*d}manhattanDistanceTo(a){return Math.abs(this.x-a.x)+Math.abs(this.y-a.y)+Math.abs(this.z-a.z)}setFromSpherical(a){return this.setFromSphericalCoords(a.radius,a.phi,a.theta)}setFromSphericalCoords(a,b,c){let d=Math.sin(b)*a;return this.x=d*Math.sin(c),this.y=Math.cos(b)*a,this.z=d*Math.cos(c),this}setFromCylindrical(a){return this.setFromCylindricalCoords(a.radius,a.theta,a.y)}setFromCylindricalCoords(a,b,c){return this.x=a*Math.sin(b),this.y=c,this.z=a*Math.cos(b),this}setFromMatrixPosition(a){let b=a.elements;return this.x=b[12],this.y=b[13],this.z=b[14],this}setFromMatrixScale(a){let b=this.setFromMatrixColumn(a,0).length(),c=this.setFromMatrixColumn(a,1).length(),d=this.setFromMatrixColumn(a,2).length();return this.x=b,this.y=c,this.z=d,this}setFromMatrixColumn(a,b){return this.fromArray(a.elements,4*b)}setFromMatrix3Column(a,b){return this.fromArray(a.elements,3*b)}setFromEuler(a){return this.x=a._x,this.y=a._y,this.z=a._z,this}equals(a){return a.x===this.x&&a.y===this.y&&a.z===this.z}fromArray(a,b=0){return this.x=a[b],this.y=a[b+1],this.z=a[b+2],this}toArray(a=[],b=0){return a[b]=this.x,a[b+1]=this.y,a[b+2]=this.z,a}fromBufferAttribute(a,b,c){return void 0!==c&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=a.getX(b),this.y=a.getY(b),this.z=a.getZ(b),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){let a=(Math.random()-.5)*2,b=Math.random()*Math.PI*2,c=Math.sqrt(1-a**2);return this.x=c*Math.cos(b),this.y=c*Math.sin(b),this.z=a,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}aq.prototype.isVector3=!0;let ar=new aq,as=new ap;class at{constructor(a=new aq(Infinity,Infinity,Infinity),b=new aq(-1/0,-1/0,-1/0)){this.min=a,this.max=b}set(a,b){return this.min.copy(a),this.max.copy(b),this}setFromArray(a){let b=Infinity,c=Infinity,d=Infinity,e=-1/0,f=-1/0,g=-1/0;for(let h=0,i=a.length;h<i;h+=3){let j=a[h],k=a[h+1],l=a[h+2];j<b&&(b=j),k<c&&(c=k),l<d&&(d=l),j>e&&(e=j),k>f&&(f=k),l>g&&(g=l)}return this.min.set(b,c,d),this.max.set(e,f,g),this}setFromBufferAttribute(a){let b=Infinity,c=Infinity,d=Infinity,e=-1/0,f=-1/0,g=-1/0;for(let h=0,i=a.count;h<i;h++){let j=a.getX(h),k=a.getY(h),l=a.getZ(h);j<b&&(b=j),k<c&&(c=k),l<d&&(d=l),j>e&&(e=j),k>f&&(f=k),l>g&&(g=l)}return this.min.set(b,c,d),this.max.set(e,f,g),this}setFromPoints(a){this.makeEmpty();for(let b=0,c=a.length;b<c;b++)this.expandByPoint(a[b]);return this}setFromCenterAndSize(a,b){let c=av.copy(b).multiplyScalar(.5);return this.min.copy(a).sub(c),this.max.copy(a).add(c),this}setFromObject(a,b=!1){return this.makeEmpty(),this.expandByObject(a,b)}clone(){return new this.constructor().copy(this)}copy(a){return this.min.copy(a.min),this.max.copy(a.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=Infinity,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(a){return this.isEmpty()?a.set(0,0,0):a.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(a){return this.isEmpty()?a.set(0,0,0):a.subVectors(this.max,this.min)}expandByPoint(a){return this.min.min(a),this.max.max(a),this}expandByVector(a){return this.min.sub(a),this.max.add(a),this}expandByScalar(a){return this.min.addScalar(-a),this.max.addScalar(a),this}expandByObject(a,b=!1){a.updateWorldMatrix(!1,!1);let c=a.geometry;if(void 0!==c){if(b&& void 0!=c.attributes&& void 0!==c.attributes.position){let d=c.attributes.position;for(let e=0,f=d.count;e<f;e++)av.fromBufferAttribute(d,e).applyMatrix4(a.matrixWorld),this.expandByPoint(av)}else null===c.boundingBox&&c.computeBoundingBox(),aw.copy(c.boundingBox),aw.applyMatrix4(a.matrixWorld),this.union(aw)}let g=a.children;for(let h=0,i=g.length;h<i;h++)this.expandByObject(g[h],b);return this}containsPoint(a){return!(a.x<this.min.x)&&!(a.x>this.max.x)&&!(a.y<this.min.y)&&!(a.y>this.max.y)&&!(a.z<this.min.z)&&!(a.z>this.max.z)}containsBox(a){return this.min.x<=a.min.x&&a.max.x<=this.max.x&&this.min.y<=a.min.y&&a.max.y<=this.max.y&&this.min.z<=a.min.z&&a.max.z<=this.max.z}getParameter(a,b){return b.set((a.x-this.min.x)/(this.max.x-this.min.x),(a.y-this.min.y)/(this.max.y-this.min.y),(a.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(a){return!(a.max.x<this.min.x)&&!(a.min.x>this.max.x)&&!(a.max.y<this.min.y)&&!(a.min.y>this.max.y)&&!(a.max.z<this.min.z)&&!(a.min.z>this.max.z)}intersectsSphere(a){return this.clampPoint(a.center,av),av.distanceToSquared(a.center)<=a.radius*a.radius}intersectsPlane(a){let b,c;return a.normal.x>0?(b=a.normal.x*this.min.x,c=a.normal.x*this.max.x):(b=a.normal.x*this.max.x,c=a.normal.x*this.min.x),a.normal.y>0?(b+=a.normal.y*this.min.y,c+=a.normal.y*this.max.y):(b+=a.normal.y*this.max.y,c+=a.normal.y*this.min.y),a.normal.z>0?(b+=a.normal.z*this.min.z,c+=a.normal.z*this.max.z):(b+=a.normal.z*this.max.z,c+=a.normal.z*this.min.z),b<= -a.constant&&c>= -a.constant}intersectsTriangle(a){if(this.isEmpty())return!1;this.getCenter(aD),aE.subVectors(this.max,aD),ax.subVectors(a.a,aD),ay.subVectors(a.b,aD),az.subVectors(a.c,aD),aA.subVectors(ay,ax),aB.subVectors(az,ay),aC.subVectors(ax,az);let b=[0,-aA.z,aA.y,0,-aB.z,aB.y,0,-aC.z,aC.y,aA.z,0,-aA.x,aB.z,0,-aB.x,aC.z,0,-aC.x,-aA.y,aA.x,0,-aB.y,aB.x,0,-aC.y,aC.x,0];return!!(aH(b,ax,ay,az,aE)&&aH(b=[1,0,0,0,1,0,0,0,1],ax,ay,az,aE))&&(aF.crossVectors(aA,aB),aH(b=[aF.x,aF.y,aF.z],ax,ay,az,aE))}clampPoint(a,b){return b.copy(a).clamp(this.min,this.max)}distanceToPoint(a){let b=av.copy(a).clamp(this.min,this.max);return b.sub(a).length()}getBoundingSphere(a){return this.getCenter(a.center),a.radius=.5*this.getSize(av).length(),a}intersect(a){return this.min.max(a.min),this.max.min(a.max),this.isEmpty()&&this.makeEmpty(),this}union(a){return this.min.min(a.min),this.max.max(a.max),this}applyMatrix4(a){return this.isEmpty()||(au[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(a),au[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(a),au[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(a),au[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(a),au[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(a),au[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(a),au[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(a),au[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(a),this.setFromPoints(au)),this}translate(a){return this.min.add(a),this.max.add(a),this}equals(a){return a.min.equals(this.min)&&a.max.equals(this.max)}}at.prototype.isBox3=!0;let au=[new aq,new aq,new aq,new aq,new aq,new aq,new aq,new aq],av=new aq,aw=new at,ax=new aq,ay=new aq,az=new aq,aA=new aq,aB=new aq,aC=new aq,aD=new aq,aE=new aq,aF=new aq,aG=new aq;function aH(a,b,c,d,e){for(let f=0,g=a.length-3;f<=g;f+=3){aG.fromArray(a,f);let h=e.x*Math.abs(aG.x)+e.y*Math.abs(aG.y)+e.z*Math.abs(aG.z),i=b.dot(aG),j=c.dot(aG),k=d.dot(aG);if(Math.max(-Math.max(i,j,k),Math.min(i,j,k))>h)return!1}return!0}let aI=new at,aJ=new aq,aK=new aq,aL=new aq;class aM{constructor(a=new aq,b=-1){this.center=a,this.radius=b}set(a,b){return this.center.copy(a),this.radius=b,this}setFromPoints(a,b){let c=this.center;void 0!==b?c.copy(b):aI.setFromPoints(a).getCenter(c);let d=0;for(let e=0,f=a.length;e<f;e++)d=Math.max(d,c.distanceToSquared(a[e]));return this.radius=Math.sqrt(d),this}copy(a){return this.center.copy(a.center),this.radius=a.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(a){return a.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(a){return a.distanceTo(this.center)-this.radius}intersectsSphere(a){let b=this.radius+a.radius;return a.center.distanceToSquared(this.center)<=b*b}intersectsBox(a){return a.intersectsSphere(this)}intersectsPlane(a){return Math.abs(a.distanceToPoint(this.center))<=this.radius}clampPoint(a,b){let c=this.center.distanceToSquared(a);return b.copy(a),c>this.radius*this.radius&&(b.sub(this.center).normalize(),b.multiplyScalar(this.radius).add(this.center)),b}getBoundingBox(a){return this.isEmpty()?(a.makeEmpty(),a):(a.set(this.center,this.center),a.expandByScalar(this.radius),a)}applyMatrix4(a){return this.center.applyMatrix4(a),this.radius=this.radius*a.getMaxScaleOnAxis(),this}translate(a){return this.center.add(a),this}expandByPoint(a){aL.subVectors(a,this.center);let b=aL.lengthSq();if(b>this.radius*this.radius){let c=Math.sqrt(b),d=(c-this.radius)*.5;this.center.add(aL.multiplyScalar(d/c)),this.radius+=d}return this}union(a){return!0===this.center.equals(a.center)?aK.set(0,0,1).multiplyScalar(a.radius):aK.subVectors(a.center,this.center).normalize().multiplyScalar(a.radius),this.expandByPoint(aJ.copy(a.center).add(aK)),this.expandByPoint(aJ.copy(a.center).sub(aK)),this}equals(a){return a.center.equals(this.center)&&a.radius===this.radius}clone(){return new this.constructor().copy(this)}}let aN=new aq,aO=new aq,aP=new aq,aQ=new aq,aR=new aq,aS=new aq,aT=new aq;class aU{constructor(a=new aq,b=new aq(0,0,-1)){this.origin=a,this.direction=b}set(a,b){return this.origin.copy(a),this.direction.copy(b),this}copy(a){return this.origin.copy(a.origin),this.direction.copy(a.direction),this}at(a,b){return b.copy(this.direction).multiplyScalar(a).add(this.origin)}lookAt(a){return this.direction.copy(a).sub(this.origin).normalize(),this}recast(a){return this.origin.copy(this.at(a,aN)),this}closestPointToPoint(a,b){b.subVectors(a,this.origin);let c=b.dot(this.direction);return c<0?b.copy(this.origin):b.copy(this.direction).multiplyScalar(c).add(this.origin)}distanceToPoint(a){return Math.sqrt(this.distanceSqToPoint(a))}distanceSqToPoint(a){let b=aN.subVectors(a,this.origin).dot(this.direction);return b<0?this.origin.distanceToSquared(a):(aN.copy(this.direction).multiplyScalar(b).add(this.origin),aN.distanceToSquared(a))}distanceSqToSegment(a,b,c,d){aO.copy(a).add(b).multiplyScalar(.5),aP.copy(b).sub(a).normalize(),aQ.copy(this.origin).sub(aO);let e=.5*a.distanceTo(b),f=-this.direction.dot(aP),g=aQ.dot(this.direction),h=-aQ.dot(aP),i=aQ.lengthSq(),j=Math.abs(1-f*f),k,l,m,n;if(j>0){if(k=f*h-g,l=f*g-h,n=e*j,k>=0){if(l>= -n){if(l<=n){let o=1/j;k*=o,l*=o,m=k*(k+f*l+2*g)+l*(f*k+l+2*h)+i}else m=-(k=Math.max(0,-(f*(l=e)+g)))*k+l*(l+2*h)+i}else m=-(k=Math.max(0,-(f*(l=-e)+g)))*k+l*(l+2*h)+i}else l<= -n?(l=(k=Math.max(0,-(-f*e+g)))>0?-e:Math.min(Math.max(-e,-h),e),m=-k*k+l*(l+2*h)+i):l<=n?(k=0,m=(l=Math.min(Math.max(-e,-h),e))*(l+2*h)+i):(l=(k=Math.max(0,-(f*e+g)))>0?e:Math.min(Math.max(-e,-h),e),m=-k*k+l*(l+2*h)+i)}else l=f>0?-e:e,k=Math.max(0,-(f*l+g)),m=-k*k+l*(l+2*h)+i;return c&&c.copy(this.direction).multiplyScalar(k).add(this.origin),d&&d.copy(aP).multiplyScalar(l).add(aO),m}intersectSphere(a,b){aN.subVectors(a.center,this.origin);let c=aN.dot(this.direction),d=aN.dot(aN)-c*c,e=a.radius*a.radius;if(d>e)return null;let f=Math.sqrt(e-d),g=c-f,h=c+f;return g<0&&h<0?null:g<0?this.at(h,b):this.at(g,b)}intersectsSphere(a){return this.distanceSqToPoint(a.center)<=a.radius*a.radius}distanceToPlane(a){let b=a.normal.dot(this.direction);if(0===b)return 0===a.distanceToPoint(this.origin)?0:null;let c=-(this.origin.dot(a.normal)+a.constant)/b;return c>=0?c:null}intersectPlane(a,b){let c=this.distanceToPlane(a);return null===c?null:this.at(c,b)}intersectsPlane(a){let b=a.distanceToPoint(this.origin);if(0===b)return!0;let c=a.normal.dot(this.direction);return c*b<0}intersectBox(a,b){let c,d,e,f,g,h,i=1/this.direction.x,j=1/this.direction.y,k=1/this.direction.z,l=this.origin;return(i>=0?(c=(a.min.x-l.x)*i,d=(a.max.x-l.x)*i):(c=(a.max.x-l.x)*i,d=(a.min.x-l.x)*i),j>=0?(e=(a.min.y-l.y)*j,f=(a.max.y-l.y)*j):(e=(a.max.y-l.y)*j,f=(a.min.y-l.y)*j),c>f||e>d)?null:((e>c||c!=c)&&(c=e),(f<d||d!=d)&&(d=f),k>=0?(g=(a.min.z-l.z)*k,h=(a.max.z-l.z)*k):(g=(a.max.z-l.z)*k,h=(a.min.z-l.z)*k),c>h||g>d)?null:((g>c||c!=c)&&(c=g),(h<d||d!=d)&&(d=h),d<0)?null:this.at(c>=0?c:d,b)}intersectsBox(a){return null!==this.intersectBox(a,aN)}intersectTriangle(a,b,c,d,e){aR.subVectors(b,a),aS.subVectors(c,a),aT.crossVectors(aR,aS);let f=this.direction.dot(aT),g;if(f>0){if(d)return null;g=1}else{if(!(f<0))return null;g=-1,f=-f}aQ.subVectors(this.origin,a);let h=g*this.direction.dot(aS.crossVectors(aQ,aS));if(h<0)return null;let i=g*this.direction.dot(aR.cross(aQ));if(i<0||h+i>f)return null;let j=-g*aQ.dot(aT);return j<0?null:this.at(j/f,e)}applyMatrix4(a){return this.origin.applyMatrix4(a),this.direction.transformDirection(a),this}equals(a){return a.origin.equals(this.origin)&&a.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class aV{constructor(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){let q=this.elements;return q[0]=a,q[4]=b,q[8]=c,q[12]=d,q[1]=e,q[5]=f,q[9]=g,q[13]=h,q[2]=i,q[6]=j,q[10]=k,q[14]=l,q[3]=m,q[7]=n,q[11]=o,q[15]=p,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new aV().fromArray(this.elements)}copy(a){let b=this.elements,c=a.elements;return b[0]=c[0],b[1]=c[1],b[2]=c[2],b[3]=c[3],b[4]=c[4],b[5]=c[5],b[6]=c[6],b[7]=c[7],b[8]=c[8],b[9]=c[9],b[10]=c[10],b[11]=c[11],b[12]=c[12],b[13]=c[13],b[14]=c[14],b[15]=c[15],this}copyPosition(a){let b=this.elements,c=a.elements;return b[12]=c[12],b[13]=c[13],b[14]=c[14],this}setFromMatrix3(a){let b=a.elements;return this.set(b[0],b[3],b[6],0,b[1],b[4],b[7],0,b[2],b[5],b[8],0,0,0,0,1),this}extractBasis(a,b,c){return a.setFromMatrixColumn(this,0),b.setFromMatrixColumn(this,1),c.setFromMatrixColumn(this,2),this}makeBasis(a,b,c){return this.set(a.x,b.x,c.x,0,a.y,b.y,c.y,0,a.z,b.z,c.z,0,0,0,0,1),this}extractRotation(a){let b=this.elements,c=a.elements,d=1/aW.setFromMatrixColumn(a,0).length(),e=1/aW.setFromMatrixColumn(a,1).length(),f=1/aW.setFromMatrixColumn(a,2).length();return b[0]=c[0]*d,b[1]=c[1]*d,b[2]=c[2]*d,b[3]=0,b[4]=c[4]*e,b[5]=c[5]*e,b[6]=c[6]*e,b[7]=0,b[8]=c[8]*f,b[9]=c[9]*f,b[10]=c[10]*f,b[11]=0,b[12]=0,b[13]=0,b[14]=0,b[15]=1,this}makeRotationFromEuler(a){a&&a.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");let b=this.elements,c=a.x,d=a.y,e=a.z,f=Math.cos(c),g=Math.sin(c),h=Math.cos(d),i=Math.sin(d),j=Math.cos(e),k=Math.sin(e);if("XYZ"===a.order){let l=f*j,m=f*k,n=g*j,o=g*k;b[0]=h*j,b[4]=-h*k,b[8]=i,b[1]=m+n*i,b[5]=l-o*i,b[9]=-g*h,b[2]=o-l*i,b[6]=n+m*i,b[10]=f*h}else if("YXZ"===a.order){let p=h*j,q=h*k,r=i*j,s=i*k;b[0]=p+s*g,b[4]=r*g-q,b[8]=f*i,b[1]=f*k,b[5]=f*j,b[9]=-g,b[2]=q*g-r,b[6]=s+p*g,b[10]=f*h}else if("ZXY"===a.order){let t=h*j,u=h*k,v=i*j,w=i*k;b[0]=t-w*g,b[4]=-f*k,b[8]=v+u*g,b[1]=u+v*g,b[5]=f*j,b[9]=w-t*g,b[2]=-f*i,b[6]=g,b[10]=f*h}else if("ZYX"===a.order){let x=f*j,y=f*k,z=g*j,A=g*k;b[0]=h*j,b[4]=z*i-y,b[8]=x*i+A,b[1]=h*k,b[5]=A*i+x,b[9]=y*i-z,b[2]=-i,b[6]=g*h,b[10]=f*h}else if("YZX"===a.order){let B=f*h,C=f*i,D=g*h,E=g*i;b[0]=h*j,b[4]=E-B*k,b[8]=D*k+C,b[1]=k,b[5]=f*j,b[9]=-g*j,b[2]=-i*j,b[6]=C*k+D,b[10]=B-E*k}else if("XZY"===a.order){let F=f*h,G=f*i,H=g*h,I=g*i;b[0]=h*j,b[4]=-k,b[8]=i*j,b[1]=F*k+I,b[5]=f*j,b[9]=G*k-H,b[2]=H*k-G,b[6]=g*j,b[10]=I*k+F}return b[3]=0,b[7]=0,b[11]=0,b[12]=0,b[13]=0,b[14]=0,b[15]=1,this}makeRotationFromQuaternion(a){return this.compose(aY,a,aZ)}lookAt(a,b,c){let d=this.elements;return a0.subVectors(a,b),0===a0.lengthSq()&&(a0.z=1),a0.normalize(),a$.crossVectors(c,a0),0===a$.lengthSq()&&(1===Math.abs(c.z)?a0.x+=1e-4:a0.z+=1e-4,a0.normalize(),a$.crossVectors(c,a0)),a$.normalize(),a_.crossVectors(a0,a$),d[0]=a$.x,d[4]=a_.x,d[8]=a0.x,d[1]=a$.y,d[5]=a_.y,d[9]=a0.y,d[2]=a$.z,d[6]=a_.z,d[10]=a0.z,this}multiply(a,b){return void 0!==b?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(a,b)):this.multiplyMatrices(this,a)}premultiply(a){return this.multiplyMatrices(a,this)}multiplyMatrices(a,b){let c=a.elements,d=b.elements,e=this.elements,f=c[0],g=c[4],h=c[8],i=c[12],j=c[1],k=c[5],l=c[9],m=c[13],n=c[2],o=c[6],p=c[10],q=c[14],r=c[3],s=c[7],t=c[11],u=c[15],v=d[0],w=d[4],x=d[8],y=d[12],z=d[1],A=d[5],B=d[9],C=d[13],D=d[2],E=d[6],F=d[10],G=d[14],H=d[3],I=d[7],J=d[11],K=d[15];return e[0]=f*v+g*z+h*D+i*H,e[4]=f*w+g*A+h*E+i*I,e[8]=f*x+g*B+h*F+i*J,e[12]=f*y+g*C+h*G+i*K,e[1]=j*v+k*z+l*D+m*H,e[5]=j*w+k*A+l*E+m*I,e[9]=j*x+k*B+l*F+m*J,e[13]=j*y+k*C+l*G+m*K,e[2]=n*v+o*z+p*D+q*H,e[6]=n*w+o*A+p*E+q*I,e[10]=n*x+o*B+p*F+q*J,e[14]=n*y+o*C+p*G+q*K,e[3]=r*v+s*z+t*D+u*H,e[7]=r*w+s*A+t*E+u*I,e[11]=r*x+s*B+t*F+u*J,e[15]=r*y+s*C+t*G+u*K,this}multiplyScalar(a){let b=this.elements;return b[0]*=a,b[4]*=a,b[8]*=a,b[12]*=a,b[1]*=a,b[5]*=a,b[9]*=a,b[13]*=a,b[2]*=a,b[6]*=a,b[10]*=a,b[14]*=a,b[3]*=a,b[7]*=a,b[11]*=a,b[15]*=a,this}determinant(){let a=this.elements,b=a[0],c=a[4],d=a[8],e=a[12],f=a[1],g=a[5],h=a[9],i=a[13],j=a[2],k=a[6],l=a[10],m=a[14],n=a[3],o=a[7],p=a[11],q=a[15];return n*(+e*h*k-d*i*k-e*g*l+c*i*l+d*g*m-c*h*m)+o*(+b*h*m-b*i*l+e*f*l-d*f*m+d*i*j-e*h*j)+p*(+b*i*k-b*g*m-e*f*k+c*f*m+e*g*j-c*i*j)+q*(-d*g*j-b*h*k+b*g*l+d*f*k-c*f*l+c*h*j)}transpose(){let a=this.elements,b;return b=a[1],a[1]=a[4],a[4]=b,b=a[2],a[2]=a[8],a[8]=b,b=a[6],a[6]=a[9],a[9]=b,b=a[3],a[3]=a[12],a[12]=b,b=a[7],a[7]=a[13],a[13]=b,b=a[11],a[11]=a[14],a[14]=b,this}setPosition(a,b,c){let d=this.elements;return a.isVector3?(d[12]=a.x,d[13]=a.y,d[14]=a.z):(d[12]=a,d[13]=b,d[14]=c),this}invert(){let a=this.elements,b=a[0],c=a[1],d=a[2],e=a[3],f=a[4],g=a[5],h=a[6],i=a[7],j=a[8],k=a[9],l=a[10],m=a[11],n=a[12],o=a[13],p=a[14],q=a[15],r=k*p*i-o*l*i+o*h*m-g*p*m-k*h*q+g*l*q,s=n*l*i-j*p*i-n*h*m+f*p*m+j*h*q-f*l*q,t=j*o*i-n*k*i+n*g*m-f*o*m-j*g*q+f*k*q,u=n*k*h-j*o*h-n*g*l+f*o*l+j*g*p-f*k*p,v=b*r+c*s+d*t+e*u;if(0===v)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);let w=1/v;return a[0]=r*w,a[1]=(o*l*e-k*p*e-o*d*m+c*p*m+k*d*q-c*l*q)*w,a[2]=(g*p*e-o*h*e+o*d*i-c*p*i-g*d*q+c*h*q)*w,a[3]=(k*h*e-g*l*e-k*d*i+c*l*i+g*d*m-c*h*m)*w,a[4]=s*w,a[5]=(j*p*e-n*l*e+n*d*m-b*p*m-j*d*q+b*l*q)*w,a[6]=(n*h*e-f*p*e-n*d*i+b*p*i+f*d*q-b*h*q)*w,a[7]=(f*l*e-j*h*e+j*d*i-b*l*i-f*d*m+b*h*m)*w,a[8]=t*w,a[9]=(n*k*e-j*o*e-n*c*m+b*o*m+j*c*q-b*k*q)*w,a[10]=(f*o*e-n*g*e+n*c*i-b*o*i-f*c*q+b*g*q)*w,a[11]=(j*g*e-f*k*e-j*c*i+b*k*i+f*c*m-b*g*m)*w,a[12]=u*w,a[13]=(j*o*d-n*k*d+n*c*l-b*o*l-j*c*p+b*k*p)*w,a[14]=(n*g*d-f*o*d-n*c*h+b*o*h+f*c*p-b*g*p)*w,a[15]=(f*k*d-j*g*d+j*c*h-b*k*h-f*c*l+b*g*l)*w,this}scale(a){let b=this.elements,c=a.x,d=a.y,e=a.z;return b[0]*=c,b[4]*=d,b[8]*=e,b[1]*=c,b[5]*=d,b[9]*=e,b[2]*=c,b[6]*=d,b[10]*=e,b[3]*=c,b[7]*=d,b[11]*=e,this}getMaxScaleOnAxis(){let a=this.elements,b=a[0]*a[0]+a[1]*a[1]+a[2]*a[2],c=a[4]*a[4]+a[5]*a[5]+a[6]*a[6],d=a[8]*a[8]+a[9]*a[9]+a[10]*a[10];return Math.sqrt(Math.max(b,c,d))}makeTranslation(a,b,c){return this.set(1,0,0,a,0,1,0,b,0,0,1,c,0,0,0,1),this}makeRotationX(a){let b=Math.cos(a),c=Math.sin(a);return this.set(1,0,0,0,0,b,-c,0,0,c,b,0,0,0,0,1),this}makeRotationY(a){let b=Math.cos(a),c=Math.sin(a);return this.set(b,0,c,0,0,1,0,0,-c,0,b,0,0,0,0,1),this}makeRotationZ(a){let b=Math.cos(a),c=Math.sin(a);return this.set(b,-c,0,0,c,b,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(a,b){let c=Math.cos(b),d=Math.sin(b),e=1-c,f=a.x,g=a.y,h=a.z,i=e*f,j=e*g;return this.set(i*f+c,i*g-d*h,i*h+d*g,0,i*g+d*h,j*g+c,j*h-d*f,0,i*h-d*g,j*h+d*f,e*h*h+c,0,0,0,0,1),this}makeScale(a,b,c){return this.set(a,0,0,0,0,b,0,0,0,0,c,0,0,0,0,1),this}makeShear(a,b,c,d,e,f){return this.set(1,c,e,0,a,1,f,0,b,d,1,0,0,0,0,1),this}compose(a,b,c){let d=this.elements,e=b._x,f=b._y,g=b._z,h=b._w,i=e+e,j=f+f,k=g+g,l=e*i,m=e*j,n=e*k,o=f*j,p=f*k,q=g*k,r=h*i,s=h*j,t=h*k,u=c.x,v=c.y,w=c.z;return d[0]=(1-(o+q))*u,d[1]=(m+t)*u,d[2]=(n-s)*u,d[3]=0,d[4]=(m-t)*v,d[5]=(1-(l+q))*v,d[6]=(p+r)*v,d[7]=0,d[8]=(n+s)*w,d[9]=(p-r)*w,d[10]=(1-(l+o))*w,d[11]=0,d[12]=a.x,d[13]=a.y,d[14]=a.z,d[15]=1,this}decompose(a,b,c){let d=this.elements,e=aW.set(d[0],d[1],d[2]).length(),f=aW.set(d[4],d[5],d[6]).length(),g=aW.set(d[8],d[9],d[10]).length(),h=this.determinant();h<0&&(e=-e),a.x=d[12],a.y=d[13],a.z=d[14],aX.copy(this);let i=1/e,j=1/f,k=1/g;return aX.elements[0]*=i,aX.elements[1]*=i,aX.elements[2]*=i,aX.elements[4]*=j,aX.elements[5]*=j,aX.elements[6]*=j,aX.elements[8]*=k,aX.elements[9]*=k,aX.elements[10]*=k,b.setFromRotationMatrix(aX),c.x=e,c.y=f,c.z=g,this}makePerspective(a,b,c,d,e,f){void 0===f&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");let g=this.elements;return g[0]=2*e/(b-a),g[4]=0,g[8]=(b+a)/(b-a),g[12]=0,g[1]=0,g[5]=2*e/(c-d),g[9]=(c+d)/(c-d),g[13]=0,g[2]=0,g[6]=0,g[10]=-(f+e)/(f-e),g[14]=-2*f*e/(f-e),g[3]=0,g[7]=0,g[11]=-1,g[15]=0,this}makeOrthographic(a,b,c,d,e,f){let g=this.elements,h=1/(b-a),i=1/(c-d),j=1/(f-e);return g[0]=2*h,g[4]=0,g[8]=0,g[12]=-((b+a)*h),g[1]=0,g[5]=2*i,g[9]=0,g[13]=-((c+d)*i),g[2]=0,g[6]=0,g[10]=-2*j,g[14]=-((f+e)*j),g[3]=0,g[7]=0,g[11]=0,g[15]=1,this}equals(a){let b=this.elements,c=a.elements;for(let d=0;d<16;d++)if(b[d]!==c[d])return!1;return!0}fromArray(a,b=0){for(let c=0;c<16;c++)this.elements[c]=a[c+b];return this}toArray(a=[],b=0){let c=this.elements;return a[b]=c[0],a[b+1]=c[1],a[b+2]=c[2],a[b+3]=c[3],a[b+4]=c[4],a[b+5]=c[5],a[b+6]=c[6],a[b+7]=c[7],a[b+8]=c[8],a[b+9]=c[9],a[b+10]=c[10],a[b+11]=c[11],a[b+12]=c[12],a[b+13]=c[13],a[b+14]=c[14],a[b+15]=c[15],a}}aV.prototype.isMatrix4=!0;let aW=new aq,aX=new aV,aY=new aq(0,0,0),aZ=new aq(1,1,1),a$=new aq,a_=new aq,a0=new aq,a1=new aV,a2=new ap;class a3{constructor(a=0,b=0,c=0,d=a3.DefaultOrder){this._x=a,this._y=b,this._z=c,this._order=d}get x(){return this._x}set x(a){this._x=a,this._onChangeCallback()}get y(){return this._y}set y(a){this._y=a,this._onChangeCallback()}get z(){return this._z}set z(a){this._z=a,this._onChangeCallback()}get order(){return this._order}set order(a){this._order=a,this._onChangeCallback()}set(a,b,c,d=this._order){return this._x=a,this._y=b,this._z=c,this._order=d,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(a){return this._x=a._x,this._y=a._y,this._z=a._z,this._order=a._order,this._onChangeCallback(),this}setFromRotationMatrix(a,b=this._order,c=!0){let d=a.elements,e=d[0],f=d[4],g=d[8],h=d[1],i=d[5],j=d[9],k=d[2],l=d[6],m=d[10];switch(b){case"XYZ":this._y=Math.asin(H(g,-1,1)),.9999999>Math.abs(g)?(this._x=Math.atan2(-j,m),this._z=Math.atan2(-f,e)):(this._x=Math.atan2(l,i),this._z=0);break;case"YXZ":this._x=Math.asin(-H(j,-1,1)),.9999999>Math.abs(j)?(this._y=Math.atan2(g,m),this._z=Math.atan2(h,i)):(this._y=Math.atan2(-k,e),this._z=0);break;case"ZXY":this._x=Math.asin(H(l,-1,1)),.9999999>Math.abs(l)?(this._y=Math.atan2(-k,m),this._z=Math.atan2(-f,i)):(this._y=0,this._z=Math.atan2(h,e));break;case"ZYX":this._y=Math.asin(-H(k,-1,1)),.9999999>Math.abs(k)?(this._x=Math.atan2(l,m),this._z=Math.atan2(h,e)):(this._x=0,this._z=Math.atan2(-f,i));break;case"YZX":this._z=Math.asin(H(h,-1,1)),.9999999>Math.abs(h)?(this._x=Math.atan2(-j,i),this._y=Math.atan2(-k,e)):(this._x=0,this._y=Math.atan2(g,m));break;case"XZY":this._z=Math.asin(-H(f,-1,1)),.9999999>Math.abs(f)?(this._x=Math.atan2(l,i),this._y=Math.atan2(g,e)):(this._x=Math.atan2(-j,m),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+b)}return this._order=b,!0===c&&this._onChangeCallback(),this}setFromQuaternion(a,b,c){return a1.makeRotationFromQuaternion(a),this.setFromRotationMatrix(a1,b,c)}setFromVector3(a,b=this._order){return this.set(a.x,a.y,a.z,b)}reorder(a){return a2.setFromEuler(this),this.setFromQuaternion(a2,a)}equals(a){return a._x===this._x&&a._y===this._y&&a._z===this._z&&a._order===this._order}fromArray(a){return this._x=a[0],this._y=a[1],this._z=a[2],void 0!==a[3]&&(this._order=a[3]),this._onChangeCallback(),this}toArray(a=[],b=0){return a[b]=this._x,a[b+1]=this._y,a[b+2]=this._z,a[b+3]=this._order,a}_onChange(a){return this._onChangeCallback=a,this}_onChangeCallback(){}}a3.prototype.isEuler=!0,a3.DefaultOrder="XYZ",a3.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class a4{constructor(){this.mask=1}set(a){this.mask=(1<<a|0)>>>0}enable(a){this.mask|=1<<a|0}enableAll(){this.mask=-1}toggle(a){this.mask^=1<<a|0}disable(a){this.mask&=~(1<<a|0)}disableAll(){this.mask=0}test(a){return(this.mask&a.mask)!=0}isEnabled(a){return(this.mask&(1<<a|0))!=0}}let a5=0,a6=new aq,a7=new ap,a8=new aV,a9=new aq,ba=new aq,bb=new aq,bc=new ap,bd=new aq(1,0,0),be=new aq(0,1,0),bf=new aq(0,0,1),bg={type:"added"},bh={type:"removed"};class bi extends A{constructor(){super(),Object.defineProperty(this,"id",{value:a5++}),this.uuid=G(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=bi.DefaultUp.clone();let a=new aq,b=new a3,c=new ap,d=new aq(1,1,1);b._onChange(function(){c.setFromEuler(b,!1)}),c._onChange(function(){b.setFromQuaternion(c,void 0,!1)}),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:a},rotation:{configurable:!0,enumerable:!0,value:b},quaternion:{configurable:!0,enumerable:!0,value:c},scale:{configurable:!0,enumerable:!0,value:d},modelViewMatrix:{value:new aV},normalMatrix:{value:new R}}),this.matrix=new aV,this.matrixWorld=new aV,this.matrixAutoUpdate=bi.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new a4,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(a){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(a),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(a){return this.quaternion.premultiply(a),this}setRotationFromAxisAngle(a,b){this.quaternion.setFromAxisAngle(a,b)}setRotationFromEuler(a){this.quaternion.setFromEuler(a,!0)}setRotationFromMatrix(a){this.quaternion.setFromRotationMatrix(a)}setRotationFromQuaternion(a){this.quaternion.copy(a)}rotateOnAxis(a,b){return a7.setFromAxisAngle(a,b),this.quaternion.multiply(a7),this}rotateOnWorldAxis(a,b){return a7.setFromAxisAngle(a,b),this.quaternion.premultiply(a7),this}rotateX(a){return this.rotateOnAxis(bd,a)}rotateY(a){return this.rotateOnAxis(be,a)}rotateZ(a){return this.rotateOnAxis(bf,a)}translateOnAxis(a,b){return a6.copy(a).applyQuaternion(this.quaternion),this.position.add(a6.multiplyScalar(b)),this}translateX(a){return this.translateOnAxis(bd,a)}translateY(a){return this.translateOnAxis(be,a)}translateZ(a){return this.translateOnAxis(bf,a)}localToWorld(a){return a.applyMatrix4(this.matrixWorld)}worldToLocal(a){return a.applyMatrix4(a8.copy(this.matrixWorld).invert())}lookAt(a,b,c){a.isVector3?a9.copy(a):a9.set(a,b,c);let d=this.parent;this.updateWorldMatrix(!0,!1),ba.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?a8.lookAt(ba,a9,this.up):a8.lookAt(a9,ba,this.up),this.quaternion.setFromRotationMatrix(a8),d&&(a8.extractRotation(d.matrixWorld),a7.setFromRotationMatrix(a8),this.quaternion.premultiply(a7.invert()))}add(a){if(arguments.length>1){for(let b=0;b<arguments.length;b++)this.add(arguments[b]);return this}return a===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",a),this):(a&&a.isObject3D?(null!==a.parent&&a.parent.remove(a),a.parent=this,this.children.push(a),a.dispatchEvent(bg)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",a),this)}remove(a){if(arguments.length>1){for(let b=0;b<arguments.length;b++)this.remove(arguments[b]);return this}let c=this.children.indexOf(a);return -1!==c&&(a.parent=null,this.children.splice(c,1),a.dispatchEvent(bh)),this}removeFromParent(){let a=this.parent;return null!==a&&a.remove(this),this}clear(){for(let a=0;a<this.children.length;a++){let b=this.children[a];b.parent=null,b.dispatchEvent(bh)}return this.children.length=0,this}attach(a){return this.updateWorldMatrix(!0,!1),a8.copy(this.matrixWorld).invert(),null!==a.parent&&(a.parent.updateWorldMatrix(!0,!1),a8.multiply(a.parent.matrixWorld)),a.applyMatrix4(a8),this.add(a),a.updateWorldMatrix(!1,!0),this}getObjectById(a){return this.getObjectByProperty("id",a)}getObjectByName(a){return this.getObjectByProperty("name",a)}getObjectByProperty(a,b){if(this[a]===b)return this;for(let c=0,d=this.children.length;c<d;c++){let e=this.children[c],f=e.getObjectByProperty(a,b);if(void 0!==f)return f}}getWorldPosition(a){return this.updateWorldMatrix(!0,!1),a.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(a){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(ba,a,bb),a}getWorldScale(a){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(ba,bc,a),a}getWorldDirection(a){this.updateWorldMatrix(!0,!1);let b=this.matrixWorld.elements;return a.set(b[8],b[9],b[10]).normalize()}raycast(){}traverse(a){a(this);let b=this.children;for(let c=0,d=b.length;c<d;c++)b[c].traverse(a)}traverseVisible(a){if(!1===this.visible)return;a(this);let b=this.children;for(let c=0,d=b.length;c<d;c++)b[c].traverseVisible(a)}traverseAncestors(a){let b=this.parent;null!==b&&(a(b),b.traverseAncestors(a))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(a){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||a)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,a=!0);let b=this.children;for(let c=0,d=b.length;c<d;c++)b[c].updateMatrixWorld(a)}updateWorldMatrix(a,b){let c=this.parent;if(!0===a&&null!==c&&c.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===b){let d=this.children;for(let e=0,f=d.length;e<f;e++)d[e].updateWorldMatrix(!1,!0)}}toJSON(a){let b=void 0===a||"string"==typeof a,c={};b&&(a={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},c.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});let d={};function e(b,c){return void 0===b[c.uuid]&&(b[c.uuid]=c.toJSON(a)),c.uuid}if(d.uuid=this.uuid,d.type=this.type,""!==this.name&&(d.name=this.name),!0===this.castShadow&&(d.castShadow=!0),!0===this.receiveShadow&&(d.receiveShadow=!0),!1===this.visible&&(d.visible=!1),!1===this.frustumCulled&&(d.frustumCulled=!1),0!==this.renderOrder&&(d.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(d.userData=this.userData),d.layers=this.layers.mask,d.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(d.matrixAutoUpdate=!1),this.isInstancedMesh&&(d.type="InstancedMesh",d.count=this.count,d.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(d.instanceColor=this.instanceColor.toJSON())),this.isScene)this.background&&(this.background.isColor?d.background=this.background.toJSON():this.background.isTexture&&(d.background=this.background.toJSON(a).uuid)),this.environment&&this.environment.isTexture&&(d.environment=this.environment.toJSON(a).uuid);else if(this.isMesh||this.isLine||this.isPoints){d.geometry=e(a.geometries,this.geometry);let f=this.geometry.parameters;if(void 0!==f&& void 0!==f.shapes){let g=f.shapes;if(Array.isArray(g))for(let h=0,i=g.length;h<i;h++){let j=g[h];e(a.shapes,j)}else e(a.shapes,g)}}if(this.isSkinnedMesh&&(d.bindMode=this.bindMode,d.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(e(a.skeletons,this.skeleton),d.skeleton=this.skeleton.uuid)),void 0!==this.material){if(Array.isArray(this.material)){let k=[];for(let l=0,m=this.material.length;l<m;l++)k.push(e(a.materials,this.material[l]));d.material=k}else d.material=e(a.materials,this.material)}if(this.children.length>0){d.children=[];for(let n=0;n<this.children.length;n++)d.children.push(this.children[n].toJSON(a).object)}if(this.animations.length>0){d.animations=[];for(let o=0;o<this.animations.length;o++){let p=this.animations[o];d.animations.push(e(a.animations,p))}}if(b){let q=y(a.geometries),r=y(a.materials),s=y(a.textures),t=y(a.images),u=y(a.shapes),v=y(a.skeletons),w=y(a.animations),x=y(a.nodes);q.length>0&&(c.geometries=q),r.length>0&&(c.materials=r),s.length>0&&(c.textures=s),t.length>0&&(c.images=t),u.length>0&&(c.shapes=u),v.length>0&&(c.skeletons=v),w.length>0&&(c.animations=w),x.length>0&&(c.nodes=x)}return c.object=d,c;function y(a){let b=[];for(let c in a){let d=a[c];delete d.metadata,b.push(d)}return b}}clone(a){return new this.constructor().copy(this,a)}copy(a,b=!0){if(this.name=a.name,this.up.copy(a.up),this.position.copy(a.position),this.rotation.order=a.rotation.order,this.quaternion.copy(a.quaternion),this.scale.copy(a.scale),this.matrix.copy(a.matrix),this.matrixWorld.copy(a.matrixWorld),this.matrixAutoUpdate=a.matrixAutoUpdate,this.matrixWorldNeedsUpdate=a.matrixWorldNeedsUpdate,this.layers.mask=a.layers.mask,this.visible=a.visible,this.castShadow=a.castShadow,this.receiveShadow=a.receiveShadow,this.frustumCulled=a.frustumCulled,this.renderOrder=a.renderOrder,this.userData=JSON.parse(JSON.stringify(a.userData)),!0===b)for(let c=0;c<a.children.length;c++){let d=a.children[c];this.add(d.clone())}return this}}bi.DefaultUp=new aq(0,1,0),bi.DefaultMatrixAutoUpdate=!0,bi.prototype.isObject3D=!0;let bj=new aq,bk=new aq,bl=new aq,bm=new aq,bn=new aq,bo=new aq,bp=new aq,bq=new aq,br=new aq,bs=new aq;class bt{constructor(a=new aq,b=new aq,c=new aq){this.a=a,this.b=b,this.c=c}static getNormal(a,b,c,d){d.subVectors(c,b),bj.subVectors(a,b),d.cross(bj);let e=d.lengthSq();return e>0?d.multiplyScalar(1/Math.sqrt(e)):d.set(0,0,0)}static getBarycoord(a,b,c,d,e){bj.subVectors(d,b),bk.subVectors(c,b),bl.subVectors(a,b);let f=bj.dot(bj),g=bj.dot(bk),h=bj.dot(bl),i=bk.dot(bk),j=bk.dot(bl),k=f*i-g*g;if(0===k)return e.set(-2,-1,-1);let l=1/k,m=(i*h-g*j)*l,n=(f*j-g*h)*l;return e.set(1-m-n,n,m)}static containsPoint(a,b,c,d){return this.getBarycoord(a,b,c,d,bm),bm.x>=0&&bm.y>=0&&bm.x+bm.y<=1}static getUV(a,b,c,d,e,f,g,h){return this.getBarycoord(a,b,c,d,bm),h.set(0,0),h.addScaledVector(e,bm.x),h.addScaledVector(f,bm.y),h.addScaledVector(g,bm.z),h}static isFrontFacing(a,b,c,d){return bj.subVectors(c,b),bk.subVectors(a,b),0>bj.cross(bk).dot(d)}set(a,b,c){return this.a.copy(a),this.b.copy(b),this.c.copy(c),this}setFromPointsAndIndices(a,b,c,d){return this.a.copy(a[b]),this.b.copy(a[c]),this.c.copy(a[d]),this}setFromAttributeAndIndices(a,b,c,d){return this.a.fromBufferAttribute(a,b),this.b.fromBufferAttribute(a,c),this.c.fromBufferAttribute(a,d),this}clone(){return new this.constructor().copy(this)}copy(a){return this.a.copy(a.a),this.b.copy(a.b),this.c.copy(a.c),this}getArea(){return bj.subVectors(this.c,this.b),bk.subVectors(this.a,this.b),.5*bj.cross(bk).length()}getMidpoint(a){return a.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(a){return bt.getNormal(this.a,this.b,this.c,a)}getPlane(a){return a.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(a,b){return bt.getBarycoord(a,this.a,this.b,this.c,b)}getUV(a,b,c,d,e){return bt.getUV(a,this.a,this.b,this.c,b,c,d,e)}containsPoint(a){return bt.containsPoint(a,this.a,this.b,this.c)}isFrontFacing(a){return bt.isFrontFacing(this.a,this.b,this.c,a)}intersectsBox(a){return a.intersectsTriangle(this)}closestPointToPoint(a,b){let c=this.a,d=this.b,e=this.c,f,g;bn.subVectors(d,c),bo.subVectors(e,c),bq.subVectors(a,c);let h=bn.dot(bq),i=bo.dot(bq);if(h<=0&&i<=0)return b.copy(c);br.subVectors(a,d);let j=bn.dot(br),k=bo.dot(br);if(j>=0&&k<=j)return b.copy(d);let l=h*k-j*i;if(l<=0&&h>=0&&j<=0)return f=h/(h-j),b.copy(c).addScaledVector(bn,f);bs.subVectors(a,e);let m=bn.dot(bs),n=bo.dot(bs);if(n>=0&&m<=n)return b.copy(e);let o=m*i-h*n;if(o<=0&&i>=0&&n<=0)return g=i/(i-n),b.copy(c).addScaledVector(bo,g);let p=j*n-m*k;if(p<=0&&k-j>=0&&m-n>=0)return bp.subVectors(e,d),g=(k-j)/(k-j+(m-n)),b.copy(d).addScaledVector(bp,g);let q=1/(p+o+l);return f=o*q,g=l*q,b.copy(c).addScaledVector(bn,f).addScaledVector(bo,g)}equals(a){return a.a.equals(this.a)&&a.b.equals(this.b)&&a.c.equals(this.c)}}let bu=0;class bv extends A{constructor(){super(),Object.defineProperty(this,"id",{value:bu++}),this.uuid=G(),this.name="",this.type="Material",this.fog=!0,this.blending=1,this.side=f,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=204,this.blendDst=205,this.blendEquation=100,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=3,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=519,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=7680,this.stencilZFail=7680,this.stencilZPass=7680,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(a){this._alphaTest>0!=a>0&&this.version++,this._alphaTest=a}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(a){if(void 0!==a)for(let b in a){let c=a[b];if(void 0===c){console.warn("THREE.Material: '"+b+"' parameter is undefined.");continue}if("shading"===b){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===c;continue}let d=this[b];if(void 0===d){console.warn("THREE."+this.type+": '"+b+"' is not a property of this material.");continue}d&&d.isColor?d.set(c):d&&d.isVector3&&c&&c.isVector3?d.copy(c):this[b]=c}}toJSON(a){let b=void 0===a||"string"==typeof a;b&&(a={textures:{},images:{}});let c={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function d(a){let b=[];for(let c in a){let d=a[c];delete d.metadata,b.push(d)}return b}if(c.uuid=this.uuid,c.type=this.type,""!==this.name&&(c.name=this.name),this.color&&this.color.isColor&&(c.color=this.color.getHex()),void 0!==this.roughness&&(c.roughness=this.roughness),void 0!==this.metalness&&(c.metalness=this.metalness),void 0!==this.sheen&&(c.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(c.sheenColor=this.sheenColor.getHex()),void 0!==this.sheenRoughness&&(c.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(c.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(c.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(c.specular=this.specular.getHex()),void 0!==this.specularIntensity&&(c.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(c.specularColor=this.specularColor.getHex()),void 0!==this.shininess&&(c.shininess=this.shininess),void 0!==this.clearcoat&&(c.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(c.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(c.clearcoatMap=this.clearcoatMap.toJSON(a).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(c.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(a).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(c.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(a).uuid,c.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(c.map=this.map.toJSON(a).uuid),this.matcap&&this.matcap.isTexture&&(c.matcap=this.matcap.toJSON(a).uuid),this.alphaMap&&this.alphaMap.isTexture&&(c.alphaMap=this.alphaMap.toJSON(a).uuid),this.lightMap&&this.lightMap.isTexture&&(c.lightMap=this.lightMap.toJSON(a).uuid,c.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(c.aoMap=this.aoMap.toJSON(a).uuid,c.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(c.bumpMap=this.bumpMap.toJSON(a).uuid,c.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(c.normalMap=this.normalMap.toJSON(a).uuid,c.normalMapType=this.normalMapType,c.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(c.displacementMap=this.displacementMap.toJSON(a).uuid,c.displacementScale=this.displacementScale,c.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(c.roughnessMap=this.roughnessMap.toJSON(a).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(c.metalnessMap=this.metalnessMap.toJSON(a).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(c.emissiveMap=this.emissiveMap.toJSON(a).uuid),this.specularMap&&this.specularMap.isTexture&&(c.specularMap=this.specularMap.toJSON(a).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(c.specularIntensityMap=this.specularIntensityMap.toJSON(a).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(c.specularColorMap=this.specularColorMap.toJSON(a).uuid),this.envMap&&this.envMap.isTexture&&(c.envMap=this.envMap.toJSON(a).uuid,void 0!==this.combine&&(c.combine=this.combine)),void 0!==this.envMapIntensity&&(c.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(c.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(c.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(c.gradientMap=this.gradientMap.toJSON(a).uuid),void 0!==this.transmission&&(c.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(c.transmissionMap=this.transmissionMap.toJSON(a).uuid),void 0!==this.thickness&&(c.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(c.thicknessMap=this.thicknessMap.toJSON(a).uuid),void 0!==this.attenuationDistance&&(c.attenuationDistance=this.attenuationDistance),void 0!==this.attenuationColor&&(c.attenuationColor=this.attenuationColor.getHex()),void 0!==this.size&&(c.size=this.size),null!==this.shadowSide&&(c.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(c.sizeAttenuation=this.sizeAttenuation),1!==this.blending&&(c.blending=this.blending),this.side!==f&&(c.side=this.side),this.vertexColors&&(c.vertexColors=!0),this.opacity<1&&(c.opacity=this.opacity),!0===this.transparent&&(c.transparent=this.transparent),c.depthFunc=this.depthFunc,c.depthTest=this.depthTest,c.depthWrite=this.depthWrite,c.colorWrite=this.colorWrite,c.stencilWrite=this.stencilWrite,c.stencilWriteMask=this.stencilWriteMask,c.stencilFunc=this.stencilFunc,c.stencilRef=this.stencilRef,c.stencilFuncMask=this.stencilFuncMask,c.stencilFail=this.stencilFail,c.stencilZFail=this.stencilZFail,c.stencilZPass=this.stencilZPass,void 0!==this.rotation&&0!==this.rotation&&(c.rotation=this.rotation),!0===this.polygonOffset&&(c.polygonOffset=!0),0!==this.polygonOffsetFactor&&(c.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(c.polygonOffsetUnits=this.polygonOffsetUnits),void 0!==this.linewidth&&1!==this.linewidth&&(c.linewidth=this.linewidth),void 0!==this.dashSize&&(c.dashSize=this.dashSize),void 0!==this.gapSize&&(c.gapSize=this.gapSize),void 0!==this.scale&&(c.scale=this.scale),!0===this.dithering&&(c.dithering=!0),this.alphaTest>0&&(c.alphaTest=this.alphaTest),!0===this.alphaToCoverage&&(c.alphaToCoverage=this.alphaToCoverage),!0===this.premultipliedAlpha&&(c.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(c.wireframe=this.wireframe),this.wireframeLinewidth>1&&(c.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(c.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(c.wireframeLinejoin=this.wireframeLinejoin),!0===this.flatShading&&(c.flatShading=this.flatShading),!1===this.visible&&(c.visible=!1),!1===this.toneMapped&&(c.toneMapped=!1),"{}"!==JSON.stringify(this.userData)&&(c.userData=this.userData),b){let e=d(a.textures),g=d(a.images);e.length>0&&(c.textures=e),g.length>0&&(c.images=g)}return c}clone(){return new this.constructor().copy(this)}copy(a){this.name=a.name,this.fog=a.fog,this.blending=a.blending,this.side=a.side,this.vertexColors=a.vertexColors,this.opacity=a.opacity,this.transparent=a.transparent,this.blendSrc=a.blendSrc,this.blendDst=a.blendDst,this.blendEquation=a.blendEquation,this.blendSrcAlpha=a.blendSrcAlpha,this.blendDstAlpha=a.blendDstAlpha,this.blendEquationAlpha=a.blendEquationAlpha,this.depthFunc=a.depthFunc,this.depthTest=a.depthTest,this.depthWrite=a.depthWrite,this.stencilWriteMask=a.stencilWriteMask,this.stencilFunc=a.stencilFunc,this.stencilRef=a.stencilRef,this.stencilFuncMask=a.stencilFuncMask,this.stencilFail=a.stencilFail,this.stencilZFail=a.stencilZFail,this.stencilZPass=a.stencilZPass,this.stencilWrite=a.stencilWrite;let b=a.clippingPlanes,c=null;if(null!==b){let d=b.length;c=Array(d);for(let e=0;e!==d;++e)c[e]=b[e].clone()}return this.clippingPlanes=c,this.clipIntersection=a.clipIntersection,this.clipShadows=a.clipShadows,this.shadowSide=a.shadowSide,this.colorWrite=a.colorWrite,this.precision=a.precision,this.polygonOffset=a.polygonOffset,this.polygonOffsetFactor=a.polygonOffsetFactor,this.polygonOffsetUnits=a.polygonOffsetUnits,this.dithering=a.dithering,this.alphaTest=a.alphaTest,this.alphaToCoverage=a.alphaToCoverage,this.premultipliedAlpha=a.premultipliedAlpha,this.visible=a.visible,this.toneMapped=a.toneMapped,this.userData=JSON.parse(JSON.stringify(a.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(a){!0===a&&this.version++}}bv.prototype.isMaterial=!0,bv.fromType=function(){return null};class bw extends bv{constructor(a){super(),this.type="MeshBasicMaterial",this.color=new ae(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(a)}copy(a){return super.copy(a),this.color.copy(a.color),this.map=a.map,this.lightMap=a.lightMap,this.lightMapIntensity=a.lightMapIntensity,this.aoMap=a.aoMap,this.aoMapIntensity=a.aoMapIntensity,this.specularMap=a.specularMap,this.alphaMap=a.alphaMap,this.envMap=a.envMap,this.combine=a.combine,this.reflectivity=a.reflectivity,this.refractionRatio=a.refractionRatio,this.wireframe=a.wireframe,this.wireframeLinewidth=a.wireframeLinewidth,this.wireframeLinecap=a.wireframeLinecap,this.wireframeLinejoin=a.wireframeLinejoin,this}}bw.prototype.isMeshBasicMaterial=!0;let bx=new aq,by=new Q;class bz{constructor(a,b,c){if(Array.isArray(a))throw TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=a,this.itemSize=b,this.count=void 0!==a?a.length/b:0,this.normalized=!0===c,this.usage=35044,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(a){!0===a&&this.version++}setUsage(a){return this.usage=a,this}copy(a){return this.name=a.name,this.array=new a.array.constructor(a.array),this.itemSize=a.itemSize,this.count=a.count,this.normalized=a.normalized,this.usage=a.usage,this}copyAt(a,b,c){a*=this.itemSize,c*=b.itemSize;for(let d=0,e=this.itemSize;d<e;d++)this.array[a+d]=b.array[c+d];return this}copyArray(a){return this.array.set(a),this}copyColorsArray(a){let b=this.array,c=0;for(let d=0,e=a.length;d<e;d++){let f=a[d];void 0===f&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",d),f=new ae),b[c++]=f.r,b[c++]=f.g,b[c++]=f.b}return this}copyVector2sArray(a){let b=this.array,c=0;for(let d=0,e=a.length;d<e;d++){let f=a[d];void 0===f&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",d),f=new Q),b[c++]=f.x,b[c++]=f.y}return this}copyVector3sArray(a){let b=this.array,c=0;for(let d=0,e=a.length;d<e;d++){let f=a[d];void 0===f&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",d),f=new aq),b[c++]=f.x,b[c++]=f.y,b[c++]=f.z}return this}copyVector4sArray(a){let b=this.array,c=0;for(let d=0,e=a.length;d<e;d++){let f=a[d];void 0===f&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",d),f=new al),b[c++]=f.x,b[c++]=f.y,b[c++]=f.z,b[c++]=f.w}return this}applyMatrix3(a){if(2===this.itemSize)for(let b=0,c=this.count;b<c;b++)by.fromBufferAttribute(this,b),by.applyMatrix3(a),this.setXY(b,by.x,by.y);else if(3===this.itemSize)for(let d=0,e=this.count;d<e;d++)bx.fromBufferAttribute(this,d),bx.applyMatrix3(a),this.setXYZ(d,bx.x,bx.y,bx.z);return this}applyMatrix4(a){for(let b=0,c=this.count;b<c;b++)bx.fromBufferAttribute(this,b),bx.applyMatrix4(a),this.setXYZ(b,bx.x,bx.y,bx.z);return this}applyNormalMatrix(a){for(let b=0,c=this.count;b<c;b++)bx.fromBufferAttribute(this,b),bx.applyNormalMatrix(a),this.setXYZ(b,bx.x,bx.y,bx.z);return this}transformDirection(a){for(let b=0,c=this.count;b<c;b++)bx.fromBufferAttribute(this,b),bx.transformDirection(a),this.setXYZ(b,bx.x,bx.y,bx.z);return this}set(a,b=0){return this.array.set(a,b),this}getX(a){return this.array[a*this.itemSize]}setX(a,b){return this.array[a*this.itemSize]=b,this}getY(a){return this.array[a*this.itemSize+1]}setY(a,b){return this.array[a*this.itemSize+1]=b,this}getZ(a){return this.array[a*this.itemSize+2]}setZ(a,b){return this.array[a*this.itemSize+2]=b,this}getW(a){return this.array[a*this.itemSize+3]}setW(a,b){return this.array[a*this.itemSize+3]=b,this}setXY(a,b,c){return a*=this.itemSize,this.array[a+0]=b,this.array[a+1]=c,this}setXYZ(a,b,c,d){return a*=this.itemSize,this.array[a+0]=b,this.array[a+1]=c,this.array[a+2]=d,this}setXYZW(a,b,c,d,e){return a*=this.itemSize,this.array[a+0]=b,this.array[a+1]=c,this.array[a+2]=d,this.array[a+3]=e,this}onUpload(a){return this.onUploadCallback=a,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){let a={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized};return""!==this.name&&(a.name=this.name),35044!==this.usage&&(a.usage=this.usage),(0!==this.updateRange.offset|| -1!==this.updateRange.count)&&(a.updateRange=this.updateRange),a}}bz.prototype.isBufferAttribute=!0;class bA extends bz{constructor(a,b,c){super(new Uint16Array(a),b,c)}}class bB extends bz{constructor(a,b,c){super(new Uint32Array(a),b,c)}}(class extends bz{constructor(a,b,c){super(new Uint16Array(a),b,c)}}).prototype.isFloat16BufferAttribute=!0;class bC extends bz{constructor(a,b,c){super(new Float32Array(a),b,c)}}let bD=0,bE=new aV,bF=new bi,bG=new aq,bH=new at,bI=new at,bJ=new aq;class bK extends A{constructor(){super(),Object.defineProperty(this,"id",{value:bD++}),this.uuid=G(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(a){return Array.isArray(a)?this.index=new(S(a)?bB:bA)(a,1):this.index=a,this}getAttribute(a){return this.attributes[a]}setAttribute(a,b){return this.attributes[a]=b,this}deleteAttribute(a){return delete this.attributes[a],this}hasAttribute(a){return void 0!==this.attributes[a]}addGroup(a,b,c=0){this.groups.push({start:a,count:b,materialIndex:c})}clearGroups(){this.groups=[]}setDrawRange(a,b){this.drawRange.start=a,this.drawRange.count=b}applyMatrix4(a){let b=this.attributes.position;void 0!==b&&(b.applyMatrix4(a),b.needsUpdate=!0);let c=this.attributes.normal;if(void 0!==c){let d=new R().getNormalMatrix(a);c.applyNormalMatrix(d),c.needsUpdate=!0}let e=this.attributes.tangent;return void 0!==e&&(e.transformDirection(a),e.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}applyQuaternion(a){return bE.makeRotationFromQuaternion(a),this.applyMatrix4(bE),this}rotateX(a){return bE.makeRotationX(a),this.applyMatrix4(bE),this}rotateY(a){return bE.makeRotationY(a),this.applyMatrix4(bE),this}rotateZ(a){return bE.makeRotationZ(a),this.applyMatrix4(bE),this}translate(a,b,c){return bE.makeTranslation(a,b,c),this.applyMatrix4(bE),this}scale(a,b,c){return bE.makeScale(a,b,c),this.applyMatrix4(bE),this}lookAt(a){return bF.lookAt(a),bF.updateMatrix(),this.applyMatrix4(bF.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(bG).negate(),this.translate(bG.x,bG.y,bG.z),this}setFromPoints(a){let b=[];for(let c=0,d=a.length;c<d;c++){let e=a[c];b.push(e.x,e.y,e.z||0)}return this.setAttribute("position",new bC(b,3)),this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new at);let a=this.attributes.position,b=this.morphAttributes.position;if(a&&a.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new aq(-1/0,-1/0,-1/0),new aq(Infinity,Infinity,Infinity));return}if(void 0!==a){if(this.boundingBox.setFromBufferAttribute(a),b)for(let c=0,d=b.length;c<d;c++){let e=b[c];bH.setFromBufferAttribute(e),this.morphTargetsRelative?(bJ.addVectors(this.boundingBox.min,bH.min),this.boundingBox.expandByPoint(bJ),bJ.addVectors(this.boundingBox.max,bH.max),this.boundingBox.expandByPoint(bJ)):(this.boundingBox.expandByPoint(bH.min),this.boundingBox.expandByPoint(bH.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new aM);let a=this.attributes.position,b=this.morphAttributes.position;if(a&&a.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new aq,1/0);return}if(a){let c=this.boundingSphere.center;if(bH.setFromBufferAttribute(a),b)for(let d=0,e=b.length;d<e;d++){let f=b[d];bI.setFromBufferAttribute(f),this.morphTargetsRelative?(bJ.addVectors(bH.min,bI.min),bH.expandByPoint(bJ),bJ.addVectors(bH.max,bI.max),bH.expandByPoint(bJ)):(bH.expandByPoint(bI.min),bH.expandByPoint(bI.max))}bH.getCenter(c);let g=0;for(let h=0,i=a.count;h<i;h++)bJ.fromBufferAttribute(a,h),g=Math.max(g,c.distanceToSquared(bJ));if(b)for(let j=0,k=b.length;j<k;j++){let l=b[j],m=this.morphTargetsRelative;for(let n=0,o=l.count;n<o;n++)bJ.fromBufferAttribute(l,n),m&&(bG.fromBufferAttribute(a,n),bJ.add(bG)),g=Math.max(g,c.distanceToSquared(bJ))}this.boundingSphere.radius=Math.sqrt(g),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){let a=this.index,b=this.attributes;if(null===a|| void 0===b.position|| void 0===b.normal|| void 0===b.uv){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}let c=a.array,d=b.position.array,e=b.normal.array,f=b.uv.array,g=d.length/3;!1===this.hasAttribute("tangent")&&this.setAttribute("tangent",new bz(new Float32Array(4*g),4));let h=this.getAttribute("tangent").array,i=[],j=[];for(let k=0;k<g;k++)i[k]=new aq,j[k]=new aq;let l=new aq,m=new aq,n=new aq,o=new Q,p=new Q,q=new Q,r=new aq,s=new aq;function t(a,b,c){l.fromArray(d,3*a),m.fromArray(d,3*b),n.fromArray(d,3*c),o.fromArray(f,2*a),p.fromArray(f,2*b),q.fromArray(f,2*c),m.sub(l),n.sub(l),p.sub(o),q.sub(o);let e=1/(p.x*q.y-q.x*p.y);isFinite(e)&&(r.copy(m).multiplyScalar(q.y).addScaledVector(n,-p.y).multiplyScalar(e),s.copy(n).multiplyScalar(p.x).addScaledVector(m,-q.x).multiplyScalar(e),i[a].add(r),i[b].add(r),i[c].add(r),j[a].add(s),j[b].add(s),j[c].add(s))}let u=this.groups;0===u.length&&(u=[{start:0,count:c.length}]);for(let v=0,w=u.length;v<w;++v){let x=u[v],y=x.start,z=x.count;for(let A=y,B=y+z;A<B;A+=3)t(c[A+0],c[A+1],c[A+2])}let C=new aq,D=new aq,E=new aq,F=new aq;function G(a){E.fromArray(e,3*a),F.copy(E);let b=i[a];C.copy(b),C.sub(E.multiplyScalar(E.dot(b))).normalize(),D.crossVectors(F,b);let c=D.dot(j[a]);h[4*a]=C.x,h[4*a+1]=C.y,h[4*a+2]=C.z,h[4*a+3]=c<0?-1:1}for(let H=0,I=u.length;H<I;++H){let J=u[H],K=J.start,L=J.count;for(let M=K,N=K+L;M<N;M+=3)G(c[M+0]),G(c[M+1]),G(c[M+2])}}computeVertexNormals(){let a=this.index,b=this.getAttribute("position");if(void 0!==b){let c=this.getAttribute("normal");if(void 0===c)c=new bz(new Float32Array(3*b.count),3),this.setAttribute("normal",c);else for(let d=0,e=c.count;d<e;d++)c.setXYZ(d,0,0,0);let f=new aq,g=new aq,h=new aq,i=new aq,j=new aq,k=new aq,l=new aq,m=new aq;if(a)for(let n=0,o=a.count;n<o;n+=3){let p=a.getX(n+0),q=a.getX(n+1),r=a.getX(n+2);f.fromBufferAttribute(b,p),g.fromBufferAttribute(b,q),h.fromBufferAttribute(b,r),l.subVectors(h,g),m.subVectors(f,g),l.cross(m),i.fromBufferAttribute(c,p),j.fromBufferAttribute(c,q),k.fromBufferAttribute(c,r),i.add(l),j.add(l),k.add(l),c.setXYZ(p,i.x,i.y,i.z),c.setXYZ(q,j.x,j.y,j.z),c.setXYZ(r,k.x,k.y,k.z)}else for(let s=0,t=b.count;s<t;s+=3)f.fromBufferAttribute(b,s+0),g.fromBufferAttribute(b,s+1),h.fromBufferAttribute(b,s+2),l.subVectors(h,g),m.subVectors(f,g),l.cross(m),c.setXYZ(s+0,l.x,l.y,l.z),c.setXYZ(s+1,l.x,l.y,l.z),c.setXYZ(s+2,l.x,l.y,l.z);this.normalizeNormals(),c.needsUpdate=!0}}merge(a,b){if(!(a&&a.isBufferGeometry)){console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",a);return}void 0===b&&(b=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));let c=this.attributes;for(let d in c){if(void 0===a.attributes[d])continue;let e=c[d],f=e.array,g=a.attributes[d],h=g.array,i=g.itemSize*b,j=Math.min(h.length,f.length-i);for(let k=0,l=i;k<j;k++,l++)f[l]=h[k]}return this}normalizeNormals(){let a=this.attributes.normal;for(let b=0,c=a.count;b<c;b++)bJ.fromBufferAttribute(a,b),bJ.normalize(),a.setXYZ(b,bJ.x,bJ.y,bJ.z)}toNonIndexed(){function a(a,b){let c=a.array,d=a.itemSize,e=a.normalized,f=new c.constructor(b.length*d),g=0,h=0;for(let i=0,j=b.length;i<j;i++){g=a.isInterleavedBufferAttribute?b[i]*a.data.stride+a.offset:b[i]*d;for(let k=0;k<d;k++)f[h++]=c[g++]}return new bz(f,d,e)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;let b=new bK,c=this.index.array,d=this.attributes;for(let e in d){let f=d[e],g=a(f,c);b.setAttribute(e,g)}let h=this.morphAttributes;for(let i in h){let j=[],k=h[i];for(let l=0,m=k.length;l<m;l++){let n=k[l],o=a(n,c);j.push(o)}b.morphAttributes[i]=j}b.morphTargetsRelative=this.morphTargetsRelative;let p=this.groups;for(let q=0,r=p.length;q<r;q++){let s=p[q];b.addGroup(s.start,s.count,s.materialIndex)}return b}toJSON(){let a={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(a.uuid=this.uuid,a.type=this.type,""!==this.name&&(a.name=this.name),Object.keys(this.userData).length>0&&(a.userData=this.userData),void 0!==this.parameters){let b=this.parameters;for(let c in b)void 0!==b[c]&&(a[c]=b[c]);return a}a.data={attributes:{}};let d=this.index;null!==d&&(a.data.index={type:d.array.constructor.name,array:Array.prototype.slice.call(d.array)});let e=this.attributes;for(let f in e){let g=e[f];a.data.attributes[f]=g.toJSON(a.data)}let h={},i=!1;for(let j in this.morphAttributes){let k=this.morphAttributes[j],l=[];for(let m=0,n=k.length;m<n;m++){let o=k[m];l.push(o.toJSON(a.data))}l.length>0&&(h[j]=l,i=!0)}i&&(a.data.morphAttributes=h,a.data.morphTargetsRelative=this.morphTargetsRelative);let p=this.groups;p.length>0&&(a.data.groups=JSON.parse(JSON.stringify(p)));let q=this.boundingSphere;return null!==q&&(a.data.boundingSphere={center:q.center.toArray(),radius:q.radius}),a}clone(){return new this.constructor().copy(this)}copy(a){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;let b={};this.name=a.name;let c=a.index;null!==c&&this.setIndex(c.clone(b));let d=a.attributes;for(let e in d){let f=d[e];this.setAttribute(e,f.clone(b))}let g=a.morphAttributes;for(let h in g){let i=[],j=g[h];for(let k=0,l=j.length;k<l;k++)i.push(j[k].clone(b));this.morphAttributes[h]=i}this.morphTargetsRelative=a.morphTargetsRelative;let m=a.groups;for(let n=0,o=m.length;n<o;n++){let p=m[n];this.addGroup(p.start,p.count,p.materialIndex)}let q=a.boundingBox;null!==q&&(this.boundingBox=q.clone());let r=a.boundingSphere;return null!==r&&(this.boundingSphere=r.clone()),this.drawRange.start=a.drawRange.start,this.drawRange.count=a.drawRange.count,this.userData=a.userData,void 0!==a.parameters&&(this.parameters=Object.assign({},a.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}bK.prototype.isBufferGeometry=!0;let bL=new aV,bM=new aU,bN=new aM,bO=new aq,bP=new aq,bQ=new aq,bR=new aq,bS=new aq,bT=new aq,bU=new aq,bV=new aq,bW=new aq,bX=new Q,bY=new Q,bZ=new Q,b$=new aq,b_=new aq;class b0 extends bi{constructor(a=new bK,b=new bw){super(),this.type="Mesh",this.geometry=a,this.material=b,this.updateMorphTargets()}copy(a){return super.copy(a),void 0!==a.morphTargetInfluences&&(this.morphTargetInfluences=a.morphTargetInfluences.slice()),void 0!==a.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},a.morphTargetDictionary)),this.material=a.material,this.geometry=a.geometry,this}updateMorphTargets(){let a=this.geometry;if(a.isBufferGeometry){let b=a.morphAttributes,c=Object.keys(b);if(c.length>0){let d=b[c[0]];if(void 0!==d){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,f=d.length;e<f;e++){let g=d[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[g]=e}}}}else{let h=a.morphTargets;void 0!==h&&h.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}raycast(a,b){let c=this.geometry,d=this.material,e=this.matrixWorld;if(void 0===d||(null===c.boundingSphere&&c.computeBoundingSphere(),bN.copy(c.boundingSphere),bN.applyMatrix4(e),!1===a.ray.intersectsSphere(bN))||(bL.copy(e).invert(),bM.copy(a.ray).applyMatrix4(bL),null!==c.boundingBox&& !1===bM.intersectsBox(c.boundingBox)))return;let f;if(c.isBufferGeometry){let g=c.index,h=c.attributes.position,i=c.morphAttributes.position,j=c.morphTargetsRelative,k=c.attributes.uv,l=c.attributes.uv2,m=c.groups,n=c.drawRange;if(null!==g){if(Array.isArray(d))for(let o=0,p=m.length;o<p;o++){let q=m[o],r=d[q.materialIndex],s=Math.max(q.start,n.start),t=Math.min(g.count,Math.min(q.start+q.count,n.start+n.count));for(let u=s,v=t;u<v;u+=3){let w=g.getX(u),x=g.getX(u+1),y=g.getX(u+2);(f=b1(this,r,a,bM,h,i,j,k,l,w,x,y))&&(f.faceIndex=Math.floor(u/3),f.face.materialIndex=q.materialIndex,b.push(f))}}else{let z=Math.max(0,n.start),A=Math.min(g.count,n.start+n.count);for(let B=z,C=A;B<C;B+=3){let D=g.getX(B),E=g.getX(B+1),F=g.getX(B+2);(f=b1(this,d,a,bM,h,i,j,k,l,D,E,F))&&(f.faceIndex=Math.floor(B/3),b.push(f))}}}else if(void 0!==h){if(Array.isArray(d))for(let G=0,H=m.length;G<H;G++){let I=m[G],J=d[I.materialIndex],K=Math.max(I.start,n.start),L=Math.min(h.count,Math.min(I.start+I.count,n.start+n.count));for(let M=K,N=L;M<N;M+=3){let O=M,P=M+1,Q=M+2;(f=b1(this,J,a,bM,h,i,j,k,l,O,P,Q))&&(f.faceIndex=Math.floor(M/3),f.face.materialIndex=I.materialIndex,b.push(f))}}else{let R=Math.max(0,n.start),S=Math.min(h.count,n.start+n.count);for(let T=R,U=S;T<U;T+=3){let V=T,W=T+1,X=T+2;(f=b1(this,d,a,bM,h,i,j,k,l,V,W,X))&&(f.faceIndex=Math.floor(T/3),b.push(f))}}}}else c.isGeometry&&console.error("THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}function b1(a,b,c,d,e,f,i,j,k,l,m,n){bO.fromBufferAttribute(e,l),bP.fromBufferAttribute(e,m),bQ.fromBufferAttribute(e,n);let o=a.morphTargetInfluences;if(f&&o){bU.set(0,0,0),bV.set(0,0,0),bW.set(0,0,0);for(let p=0,q=f.length;p<q;p++){let r=o[p],s=f[p];0!==r&&(bR.fromBufferAttribute(s,l),bS.fromBufferAttribute(s,m),bT.fromBufferAttribute(s,n),i?(bU.addScaledVector(bR,r),bV.addScaledVector(bS,r),bW.addScaledVector(bT,r)):(bU.addScaledVector(bR.sub(bO),r),bV.addScaledVector(bS.sub(bP),r),bW.addScaledVector(bT.sub(bQ),r)))}bO.add(bU),bP.add(bV),bQ.add(bW)}a.isSkinnedMesh&&(a.boneTransform(l,bO),a.boneTransform(m,bP),a.boneTransform(n,bQ));let t=function(a,b,c,d,e,f,i,j){let k;if(null===(b.side===g?d.intersectTriangle(i,f,e,!0,j):d.intersectTriangle(e,f,i,b.side!==h,j)))return null;b_.copy(j),b_.applyMatrix4(a.matrixWorld);let l=c.ray.origin.distanceTo(b_);return l<c.near||l>c.far?null:{distance:l,point:b_.clone(),object:a}}(a,b,c,d,bO,bP,bQ,b$);if(t){j&&(bX.fromBufferAttribute(j,l),bY.fromBufferAttribute(j,m),bZ.fromBufferAttribute(j,n),t.uv=bt.getUV(b$,bO,bP,bQ,bX,bY,bZ,new Q)),k&&(bX.fromBufferAttribute(k,l),bY.fromBufferAttribute(k,m),bZ.fromBufferAttribute(k,n),t.uv2=bt.getUV(b$,bO,bP,bQ,bX,bY,bZ,new Q));let u={a:l,b:m,c:n,normal:new aq,materialIndex:0};bt.getNormal(bO,bP,bQ,u.normal),t.face=u}return t}b0.prototype.isMesh=!0;class b2 extends bK{constructor(a=1,b=1,c=1,d=1,e=1,f=1){super(),this.type="BoxGeometry",this.parameters={width:a,height:b,depth:c,widthSegments:d,heightSegments:e,depthSegments:f};let g=this;d=Math.floor(d),e=Math.floor(e),f=Math.floor(f);let h=[],i=[],j=[],k=[],l=0,m=0;function n(a,b,c,d,e,f,n,o,p,q,r){let s=f/p,t=n/q,u=f/2,v=n/2,w=o/2,x=p+1,y=q+1,z=0,A=0,B=new aq;for(let C=0;C<y;C++){let D=C*t-v;for(let E=0;E<x;E++){let F=E*s-u;B[a]=F*d,B[b]=D*e,B[c]=w,i.push(B.x,B.y,B.z),B[a]=0,B[b]=0,B[c]=o>0?1:-1,j.push(B.x,B.y,B.z),k.push(E/p),k.push(1-C/q),z+=1}}for(let G=0;G<q;G++)for(let H=0;H<p;H++){let I=l+H+x*G,J=l+H+x*(G+1),K=l+(H+1)+x*(G+1),L=l+(H+1)+x*G;h.push(I,J,L),h.push(J,K,L),A+=6}g.addGroup(m,A,r),m+=A,l+=z}n("z","y","x",-1,-1,c,b,a,f,e,0),n("z","y","x",1,-1,c,b,-a,f,e,1),n("x","z","y",1,1,a,c,b,d,f,2),n("x","z","y",1,-1,a,c,-b,d,f,3),n("x","y","z",1,-1,a,b,c,d,e,4),n("x","y","z",-1,-1,a,b,-c,d,e,5),this.setIndex(h),this.setAttribute("position",new bC(i,3)),this.setAttribute("normal",new bC(j,3)),this.setAttribute("uv",new bC(k,2))}static fromJSON(a){return new b2(a.width,a.height,a.depth,a.widthSegments,a.heightSegments,a.depthSegments)}}function b3(a){let b={};for(let c in a)for(let d in b[c]={},a[c]){let e=a[c][d];e&&(e.isColor||e.isMatrix3||e.isMatrix4||e.isVector2||e.isVector3||e.isVector4||e.isTexture||e.isQuaternion)?b[c][d]=e.clone():Array.isArray(e)?b[c][d]=e.slice():b[c][d]=e}return b}function b4(a){let b={};for(let c=0;c<a.length;c++){let d=b3(a[c]);for(let e in d)b[e]=d[e]}return b}let b5={clone:b3,merge:b4};class b6 extends bv{constructor(a){super(),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader="void main() {\n	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==a&&(void 0!==a.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(a))}copy(a){return super.copy(a),this.fragmentShader=a.fragmentShader,this.vertexShader=a.vertexShader,this.uniforms=b3(a.uniforms),this.defines=Object.assign({},a.defines),this.wireframe=a.wireframe,this.wireframeLinewidth=a.wireframeLinewidth,this.lights=a.lights,this.clipping=a.clipping,this.extensions=Object.assign({},a.extensions),this.glslVersion=a.glslVersion,this}toJSON(a){let b=super.toJSON(a);for(let c in b.glslVersion=this.glslVersion,b.uniforms={},this.uniforms){let d=this.uniforms[c],e=d.value;e&&e.isTexture?b.uniforms[c]={type:"t",value:e.toJSON(a).uuid}:e&&e.isColor?b.uniforms[c]={type:"c",value:e.getHex()}:e&&e.isVector2?b.uniforms[c]={type:"v2",value:e.toArray()}:e&&e.isVector3?b.uniforms[c]={type:"v3",value:e.toArray()}:e&&e.isVector4?b.uniforms[c]={type:"v4",value:e.toArray()}:e&&e.isMatrix3?b.uniforms[c]={type:"m3",value:e.toArray()}:e&&e.isMatrix4?b.uniforms[c]={type:"m4",value:e.toArray()}:b.uniforms[c]={value:e}}Object.keys(this.defines).length>0&&(b.defines=this.defines),b.vertexShader=this.vertexShader,b.fragmentShader=this.fragmentShader;let f={};for(let g in this.extensions)!0===this.extensions[g]&&(f[g]=!0);return Object.keys(f).length>0&&(b.extensions=f),b}}b6.prototype.isShaderMaterial=!0;class b7 extends bi{constructor(){super(),this.type="Camera",this.matrixWorldInverse=new aV,this.projectionMatrix=new aV,this.projectionMatrixInverse=new aV}copy(a,b){return super.copy(a,b),this.matrixWorldInverse.copy(a.matrixWorldInverse),this.projectionMatrix.copy(a.projectionMatrix),this.projectionMatrixInverse.copy(a.projectionMatrixInverse),this}getWorldDirection(a){this.updateWorldMatrix(!0,!1);let b=this.matrixWorld.elements;return a.set(-b[8],-b[9],-b[10]).normalize()}updateMatrixWorld(a){super.updateMatrixWorld(a),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(a,b){super.updateWorldMatrix(a,b),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}b7.prototype.isCamera=!0;class b8 extends b7{constructor(a=50,b=1,c=.1,d=2e3){super(),this.type="PerspectiveCamera",this.fov=a,this.zoom=1,this.near=c,this.far=d,this.focus=10,this.aspect=b,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(a,b){return super.copy(a,b),this.fov=a.fov,this.zoom=a.zoom,this.near=a.near,this.far=a.far,this.focus=a.focus,this.aspect=a.aspect,this.view=null===a.view?null:Object.assign({},a.view),this.filmGauge=a.filmGauge,this.filmOffset=a.filmOffset,this}setFocalLength(a){let b=.5*this.getFilmHeight()/a;this.fov=2*F*Math.atan(b),this.updateProjectionMatrix()}getFocalLength(){let a=Math.tan(.5*E*this.fov);return .5*this.getFilmHeight()/a}getEffectiveFOV(){return 2*F*Math.atan(Math.tan(.5*E*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(a,b,c,d,e,f){this.aspect=a/b,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=a,this.view.fullHeight=b,this.view.offsetX=c,this.view.offsetY=d,this.view.width=e,this.view.height=f,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){let a=this.near,b=a*Math.tan(.5*E*this.fov)/this.zoom,c=2*b,d=this.aspect*c,e=-.5*d,f=this.view;if(null!==this.view&&this.view.enabled){let g=f.fullWidth,h=f.fullHeight;e+=f.offsetX*d/g,b-=f.offsetY*c/h,d*=f.width/g,c*=f.height/h}let i=this.filmOffset;0!==i&&(e+=a*i/this.getFilmWidth()),this.projectionMatrix.makePerspective(e,e+d,b,b-c,a,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(a){let b=super.toJSON(a);return b.object.fov=this.fov,b.object.zoom=this.zoom,b.object.near=this.near,b.object.far=this.far,b.object.focus=this.focus,b.object.aspect=this.aspect,null!==this.view&&(b.object.view=Object.assign({},this.view)),b.object.filmGauge=this.filmGauge,b.object.filmOffset=this.filmOffset,b}}b8.prototype.isPerspectiveCamera=!0;class b9 extends bi{constructor(a,b,c){if(super(),this.type="CubeCamera",!0!==c.isWebGLCubeRenderTarget){console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");return}this.renderTarget=c;let d=new b8(90,1,a,b);d.layers=this.layers,d.up.set(0,-1,0),d.lookAt(new aq(1,0,0)),this.add(d);let e=new b8(90,1,a,b);e.layers=this.layers,e.up.set(0,-1,0),e.lookAt(new aq(-1,0,0)),this.add(e);let f=new b8(90,1,a,b);f.layers=this.layers,f.up.set(0,0,1),f.lookAt(new aq(0,1,0)),this.add(f);let g=new b8(90,1,a,b);g.layers=this.layers,g.up.set(0,0,-1),g.lookAt(new aq(0,-1,0)),this.add(g);let h=new b8(90,1,a,b);h.layers=this.layers,h.up.set(0,-1,0),h.lookAt(new aq(0,0,1)),this.add(h);let i=new b8(90,1,a,b);i.layers=this.layers,i.up.set(0,-1,0),i.lookAt(new aq(0,0,-1)),this.add(i)}update(a,b){null===this.parent&&this.updateMatrixWorld();let c=this.renderTarget,[d,e,f,g,h,i]=this.children,j=a.getRenderTarget(),k=a.outputEncoding,l=a.toneMapping,m=a.xr.enabled;a.outputEncoding=3e3,a.toneMapping=0,a.xr.enabled=!1;let n=c.texture.generateMipmaps;c.texture.generateMipmaps=!1,a.setRenderTarget(c,0),a.render(b,d),a.setRenderTarget(c,1),a.render(b,e),a.setRenderTarget(c,2),a.render(b,f),a.setRenderTarget(c,3),a.render(b,g),a.setRenderTarget(c,4),a.render(b,h),c.texture.generateMipmaps=n,a.setRenderTarget(c,5),a.render(b,i),a.setRenderTarget(j),a.outputEncoding=k,a.toneMapping=l,a.xr.enabled=m,c.texture.needsPMREMUpdate=!0}}class ca extends ak{constructor(a,b,c,d,e,f,g,h,i,j){super(a=void 0!==a?a:[],b=void 0!==b?b:301,c,d,e,f,g,h,i,j),this.flipY=!1}get images(){return this.image}set images(a){this.image=a}}ca.prototype.isCubeTexture=!0;class cb extends am{constructor(a,b={}){super(a,a,b);let c={width:a,height:a,depth:1};this.texture=new ca([c,c,c,c,c,c],b.mapping,b.wrapS,b.wrapT,b.magFilter,b.minFilter,b.format,b.type,b.anisotropy,b.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=void 0!==b.generateMipmaps&&b.generateMipmaps,this.texture.minFilter=void 0!==b.minFilter?b.minFilter:o}fromEquirectangularTexture(a,b){this.texture.type=b.type,this.texture.encoding=b.encoding,this.texture.generateMipmaps=b.generateMipmaps,this.texture.minFilter=b.minFilter,this.texture.magFilter=b.magFilter;let c={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},d=new b2(5,5,5),e=new b6({name:"CubemapFromEquirect",uniforms:b3(c.uniforms),vertexShader:c.vertexShader,fragmentShader:c.fragmentShader,side:g,blending:0});e.uniforms.tEquirect.value=b;let f=new b0(d,e),h=b.minFilter;b.minFilter===q&&(b.minFilter=o);let i=new b9(1,10,this);return i.update(a,f),b.minFilter=h,f.geometry.dispose(),f.material.dispose(),this}clear(a,b,c,d){let e=a.getRenderTarget();for(let f=0;f<6;f++)a.setRenderTarget(this,f),a.clear(b,c,d);a.setRenderTarget(e)}}cb.prototype.isWebGLCubeRenderTarget=!0;let cc=new aq,cd=new aq,ce=new R;class cf{constructor(a=new aq(1,0,0),b=0){this.normal=a,this.constant=b}set(a,b){return this.normal.copy(a),this.constant=b,this}setComponents(a,b,c,d){return this.normal.set(a,b,c),this.constant=d,this}setFromNormalAndCoplanarPoint(a,b){return this.normal.copy(a),this.constant=-b.dot(this.normal),this}setFromCoplanarPoints(a,b,c){let d=cc.subVectors(c,b).cross(cd.subVectors(a,b)).normalize();return this.setFromNormalAndCoplanarPoint(d,a),this}copy(a){return this.normal.copy(a.normal),this.constant=a.constant,this}normalize(){let a=1/this.normal.length();return this.normal.multiplyScalar(a),this.constant*=a,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(a){return this.normal.dot(a)+this.constant}distanceToSphere(a){return this.distanceToPoint(a.center)-a.radius}projectPoint(a,b){return b.copy(this.normal).multiplyScalar(-this.distanceToPoint(a)).add(a)}intersectLine(a,b){let c=a.delta(cc),d=this.normal.dot(c);if(0===d)return 0===this.distanceToPoint(a.start)?b.copy(a.start):null;let e=-(a.start.dot(this.normal)+this.constant)/d;return e<0||e>1?null:b.copy(c).multiplyScalar(e).add(a.start)}intersectsLine(a){let b=this.distanceToPoint(a.start),c=this.distanceToPoint(a.end);return b<0&&c>0||c<0&&b>0}intersectsBox(a){return a.intersectsPlane(this)}intersectsSphere(a){return a.intersectsPlane(this)}coplanarPoint(a){return a.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(a,b){let c=b||ce.getNormalMatrix(a),d=this.coplanarPoint(cc).applyMatrix4(a),e=this.normal.applyMatrix3(c).normalize();return this.constant=-d.dot(e),this}translate(a){return this.constant-=a.dot(this.normal),this}equals(a){return a.normal.equals(this.normal)&&a.constant===this.constant}clone(){return new this.constructor().copy(this)}}cf.prototype.isPlane=!0;let cg=new aM,ch=new aq;class ci{constructor(a=new cf,b=new cf,c=new cf,d=new cf,e=new cf,f=new cf){this.planes=[a,b,c,d,e,f]}set(a,b,c,d,e,f){let g=this.planes;return g[0].copy(a),g[1].copy(b),g[2].copy(c),g[3].copy(d),g[4].copy(e),g[5].copy(f),this}copy(a){let b=this.planes;for(let c=0;c<6;c++)b[c].copy(a.planes[c]);return this}setFromProjectionMatrix(a){let b=this.planes,c=a.elements,d=c[0],e=c[1],f=c[2],g=c[3],h=c[4],i=c[5],j=c[6],k=c[7],l=c[8],m=c[9],n=c[10],o=c[11],p=c[12],q=c[13],r=c[14],s=c[15];return b[0].setComponents(g-d,k-h,o-l,s-p).normalize(),b[1].setComponents(g+d,k+h,o+l,s+p).normalize(),b[2].setComponents(g+e,k+i,o+m,s+q).normalize(),b[3].setComponents(g-e,k-i,o-m,s-q).normalize(),b[4].setComponents(g-f,k-j,o-n,s-r).normalize(),b[5].setComponents(g+f,k+j,o+n,s+r).normalize(),this}intersectsObject(a){let b=a.geometry;return null===b.boundingSphere&&b.computeBoundingSphere(),cg.copy(b.boundingSphere).applyMatrix4(a.matrixWorld),this.intersectsSphere(cg)}intersectsSprite(a){return cg.center.set(0,0,0),cg.radius=.7071067811865476,cg.applyMatrix4(a.matrixWorld),this.intersectsSphere(cg)}intersectsSphere(a){let b=this.planes,c=a.center,d=-a.radius;for(let e=0;e<6;e++){let f=b[e].distanceToPoint(c);if(f<d)return!1}return!0}intersectsBox(a){let b=this.planes;for(let c=0;c<6;c++){let d=b[c];if(ch.x=d.normal.x>0?a.max.x:a.min.x,ch.y=d.normal.y>0?a.max.y:a.min.y,ch.z=d.normal.z>0?a.max.z:a.min.z,0>d.distanceToPoint(ch))return!1}return!0}containsPoint(a){let b=this.planes;for(let c=0;c<6;c++)if(0>b[c].distanceToPoint(a))return!1;return!0}clone(){return new this.constructor().copy(this)}}function cj(){let a=null,b=!1,c=null,d=null;function e(b,f){c(b,f),d=a.requestAnimationFrame(e)}return{start:function(){!0!==b&&null!==c&&(d=a.requestAnimationFrame(e),b=!0)},stop:function(){a.cancelAnimationFrame(d),b=!1},setAnimationLoop:function(a){c=a},setContext:function(b){a=b}}}function ck(a,b){let c=b.isWebGL2,d=new WeakMap;return{get:function(a){return a.isInterleavedBufferAttribute&&(a=a.data),d.get(a)},remove:function(b){b.isInterleavedBufferAttribute&&(b=b.data);let c=d.get(b);c&&(a.deleteBuffer(c.buffer),d.delete(b))},update:function(b,e){if(b.isGLBufferAttribute){let f=d.get(b);(!f||f.version<b.version)&&d.set(b,{buffer:b.buffer,type:b.type,bytesPerElement:b.elementSize,version:b.version});return}b.isInterleavedBufferAttribute&&(b=b.data);let g=d.get(b);void 0===g?d.set(b,function(b,d){let e=b.array,f=b.usage,g=a.createBuffer();a.bindBuffer(d,g),a.bufferData(d,e,f),b.onUploadCallback();let h;if(e instanceof Float32Array)h=5126;else if(e instanceof Uint16Array){if(b.isFloat16BufferAttribute){if(c)h=5131;else throw Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.")}else h=5123}else if(e instanceof Int16Array)h=5122;else if(e instanceof Uint32Array)h=5125;else if(e instanceof Int32Array)h=5124;else if(e instanceof Int8Array)h=5120;else if(e instanceof Uint8Array)h=5121;else if(e instanceof Uint8ClampedArray)h=5121;else throw Error("THREE.WebGLAttributes: Unsupported buffer data format: "+e);return{buffer:g,type:h,bytesPerElement:e.BYTES_PER_ELEMENT,version:b.version}}(b,e)):g.version<b.version&&(!function(b,d,e){let f=d.array,g=d.updateRange;a.bindBuffer(e,b),-1===g.count?a.bufferSubData(e,0,f):(c?a.bufferSubData(e,g.offset*f.BYTES_PER_ELEMENT,f,g.offset,g.count):a.bufferSubData(e,g.offset*f.BYTES_PER_ELEMENT,f.subarray(g.offset,g.offset+g.count)),g.count=-1)}(g.buffer,b,e),g.version=b.version)}}}class cl extends bK{constructor(a=1,b=1,c=1,d=1){super(),this.type="PlaneGeometry",this.parameters={width:a,height:b,widthSegments:c,heightSegments:d};let e=a/2,f=b/2,g=Math.floor(c),h=Math.floor(d),i=g+1,j=h+1,k=a/g,l=b/h,m=[],n=[],o=[],p=[];for(let q=0;q<j;q++){let r=q*l-f;for(let s=0;s<i;s++){let t=s*k-e;n.push(t,-r,0),o.push(0,0,1),p.push(s/g),p.push(1-q/h)}}for(let u=0;u<h;u++)for(let v=0;v<g;v++){let w=v+i*u,x=v+i*(u+1),y=v+1+i*(u+1),z=v+1+i*u;m.push(w,x,z),m.push(x,y,z)}this.setIndex(m),this.setAttribute("position",new bC(n,3)),this.setAttribute("normal",new bC(o,3)),this.setAttribute("uv",new bC(p,2))}static fromJSON(a){return new cl(a.width,a.height,a.widthSegments,a.heightSegments)}}let cm={alphamap_fragment:"#ifdef USE_ALPHAMAP\n	diffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n	uniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef USE_ALPHATEST\n	if ( diffuseColor.a < alphaTest ) discard;\n#endif",alphatest_pars_fragment:"#ifdef USE_ALPHATEST\n	uniform float alphaTest;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n	reflectedLight.indirectDiffuse *= ambientOcclusion;\n	#if defined( USE_ENVMAP ) && defined( STANDARD )\n		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n	#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n	uniform sampler2D aoMap;\n	uniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed = vec3( position );",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n	vec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"vec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n	return RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n	float a2 = pow2( alpha );\n	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n	return 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n	float a2 = pow2( alpha );\n	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n	return RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {\n	float alpha = pow2( roughness );\n	vec3 halfDir = normalize( lightDir + viewDir );\n	float dotNL = saturate( dot( normal, lightDir ) );\n	float dotNV = saturate( dot( normal, viewDir ) );\n	float dotNH = saturate( dot( normal, halfDir ) );\n	float dotVH = saturate( dot( viewDir, halfDir ) );\n	vec3 F = F_Schlick( f0, f90, dotVH );\n	float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n	float D = D_GGX( alpha, dotNH );\n	return F * ( V * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n	const float LUT_SIZE = 64.0;\n	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n	const float LUT_BIAS = 0.5 / LUT_SIZE;\n	float dotNV = saturate( dot( N, V ) );\n	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n	uv = uv * LUT_SCALE + LUT_BIAS;\n	return uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n	float l = length( f );\n	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n	float x = dot( v1, v2 );\n	float y = abs( x );\n	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n	float b = 3.4175940 + ( 4.1616724 + y ) * y;\n	float v = a / b;\n	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n	return cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n	vec3 lightNormal = cross( v1, v2 );\n	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n	vec3 T1, T2;\n	T1 = normalize( V - N * dot( V, N ) );\n	T2 = - cross( N, T1 );\n	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n	vec3 coords[ 4 ];\n	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n	coords[ 0 ] = normalize( coords[ 0 ] );\n	coords[ 1 ] = normalize( coords[ 1 ] );\n	coords[ 2 ] = normalize( coords[ 2 ] );\n	coords[ 3 ] = normalize( coords[ 3 ] );\n	vec3 vectorFormFactor = vec3( 0.0 );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n	return vec3( result );\n}\nfloat G_BlinnPhong_Implicit( ) {\n	return 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\n	vec3 halfDir = normalize( lightDir + viewDir );\n	float dotNH = saturate( dot( normal, halfDir ) );\n	float dotVH = saturate( dot( viewDir, halfDir ) );\n	vec3 F = F_Schlick( specularColor, 1.0, dotVH );\n	float G = G_BlinnPhong_Implicit( );\n	float D = D_BlinnPhong( shininess, dotNH );\n	return F * ( G * D );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie( float roughness, float dotNH ) {\n	float alpha = pow2( roughness );\n	float invAlpha = 1.0 / alpha;\n	float cos2h = dotNH * dotNH;\n	float sin2h = max( 1.0 - cos2h, 0.0078125 );\n	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n}\nfloat V_Neubelt( float dotNV, float dotNL ) {\n	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\n}\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\n	vec3 halfDir = normalize( lightDir + viewDir );\n	float dotNL = saturate( dot( normal, lightDir ) );\n	float dotNV = saturate( dot( normal, viewDir ) );\n	float dotNH = saturate( dot( normal, halfDir ) );\n	float D = D_Charlie( sheenRoughness, dotNH );\n	float V = V_Neubelt( dotNV, dotNL );\n	return sheenColor * ( D * V );\n}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n	uniform sampler2D bumpMap;\n	uniform float bumpScale;\n	vec2 dHdxy_fwd() {\n		vec2 dSTdx = dFdx( vUv );\n		vec2 dSTdy = dFdy( vUv );\n		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n		return vec2( dBx, dBy );\n	}\n	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n		vec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n		vec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n		vec3 vN = surf_norm;\n		vec3 R1 = cross( vSigmaY, vN );\n		vec3 R2 = cross( vN, vSigmaX );\n		float fDet = dot( vSigmaX, R1 ) * faceDirection;\n		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n		return normalize( abs( fDet ) * surf_norm - vGrad );\n	}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n	vec4 plane;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n		plane = clippingPlanes[ i ];\n		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n	}\n	#pragma unroll_loop_end\n	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n		bool clipped = true;\n		#pragma unroll_loop_start\n		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n			plane = clippingPlanes[ i ];\n			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n		}\n		#pragma unroll_loop_end\n		if ( clipped ) discard;\n	#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n	varying vec3 vClipPosition;\n	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n	varying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n	vClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n	diffuseColor *= vColor;\n#elif defined( USE_COLOR )\n	diffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n	varying vec4 vColor;\n#elif defined( USE_COLOR )\n	varying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n	varying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n	varying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n	vColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n	vColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n	vColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n	vColor.xyz *= instanceColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n	const highp float a = 12.9898, b = 78.233, c = 43758.5453;\n	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n	return fract( sin( sn ) * c );\n}\n#ifdef HIGH_PRECISION\n	float precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n	float precisionSafeLength( vec3 v ) {\n		float maxComponent = max3( abs( v ) );\n		return length( v / maxComponent ) * maxComponent;\n	}\n#endif\nstruct IncidentLight {\n	vec3 color;\n	vec3 direction;\n	bool visible;\n};\nstruct ReflectedLight {\n	vec3 directDiffuse;\n	vec3 directSpecular;\n	vec3 indirectDiffuse;\n	vec3 indirectSpecular;\n};\nstruct GeometricContext {\n	vec3 position;\n	vec3 normal;\n	vec3 viewDir;\n#ifdef USE_CLEARCOAT\n	vec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nmat3 transposeMat3( const in mat3 m ) {\n	mat3 tmp;\n	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n	return tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n	vec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n	return dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n	return m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n	return vec2( u, v );\n}",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n	#define cubeUV_minMipLevel 4.0\n	#define cubeUV_minTileSize 16.0\n	float getFace( vec3 direction ) {\n		vec3 absDirection = abs( direction );\n		float face = - 1.0;\n		if ( absDirection.x > absDirection.z ) {\n			if ( absDirection.x > absDirection.y )\n				face = direction.x > 0.0 ? 0.0 : 3.0;\n			else\n				face = direction.y > 0.0 ? 1.0 : 4.0;\n		} else {\n			if ( absDirection.z > absDirection.y )\n				face = direction.z > 0.0 ? 2.0 : 5.0;\n			else\n				face = direction.y > 0.0 ? 1.0 : 4.0;\n		}\n		return face;\n	}\n	vec2 getUV( vec3 direction, float face ) {\n		vec2 uv;\n		if ( face == 0.0 ) {\n			uv = vec2( direction.z, direction.y ) / abs( direction.x );\n		} else if ( face == 1.0 ) {\n			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n		} else if ( face == 2.0 ) {\n			uv = vec2( - direction.x, direction.y ) / abs( direction.z );\n		} else if ( face == 3.0 ) {\n			uv = vec2( - direction.z, direction.y ) / abs( direction.x );\n		} else if ( face == 4.0 ) {\n			uv = vec2( - direction.x, direction.z ) / abs( direction.y );\n		} else {\n			uv = vec2( direction.x, direction.y ) / abs( direction.z );\n		}\n		return 0.5 * ( uv + 1.0 );\n	}\n	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n		float face = getFace( direction );\n		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n		mipInt = max( mipInt, cubeUV_minMipLevel );\n		float faceSize = exp2( mipInt );\n		vec2 uv = getUV( direction, face ) * ( faceSize - 1.0 ) + 0.5;\n		if ( face > 2.0 ) {\n			uv.y += faceSize;\n			face -= 3.0;\n		}\n		uv.x += face * faceSize;\n		uv.x += filterInt * 3.0 * cubeUV_minTileSize;\n		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\n		uv.x *= CUBEUV_TEXEL_WIDTH;\n		uv.y *= CUBEUV_TEXEL_HEIGHT;\n		#ifdef texture2DGradEXT\n			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\n		#else\n			return texture2D( envMap, uv ).rgb;\n		#endif\n	}\n	#define r0 1.0\n	#define v0 0.339\n	#define m0 - 2.0\n	#define r1 0.8\n	#define v1 0.276\n	#define m1 - 1.0\n	#define r4 0.4\n	#define v4 0.046\n	#define m4 2.0\n	#define r5 0.305\n	#define v5 0.016\n	#define m5 3.0\n	#define r6 0.21\n	#define v6 0.0038\n	#define m6 4.0\n	float roughnessToMip( float roughness ) {\n		float mip = 0.0;\n		if ( roughness >= r1 ) {\n			mip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\n		} else if ( roughness >= r4 ) {\n			mip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\n		} else if ( roughness >= r5 ) {\n			mip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\n		} else if ( roughness >= r6 ) {\n			mip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\n		} else {\n			mip = - 2.0 * log2( 1.16 * roughness );		}\n		return mip;\n	}\n	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n		float mip = clamp( roughnessToMip( roughness ), m0, CUBEUV_MAX_MIP );\n		float mipF = fract( mip );\n		float mipInt = floor( mip );\n		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n		if ( mipF == 0.0 ) {\n			return vec4( color0, 1.0 );\n		} else {\n			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n			return vec4( mix( color0, color1, mipF ), 1.0 );\n		}\n	}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n	mat3 m = mat3( instanceMatrix );\n	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n	transformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n	transformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n	#ifdef FLIP_SIDED\n		transformedTangent = - transformedTangent;\n	#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n	uniform sampler2D displacementMap;\n	uniform float displacementScale;\n	uniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n	vec4 emissiveColor = texture2D( emissiveMap, vUv );\n	totalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n	uniform sampler2D emissiveMap;\n#endif",encodings_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment:"vec4 LinearToLinear( in vec4 value ) {\n	return value;\n}\nvec4 LinearTosRGB( in vec4 value ) {\n	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n	#ifdef ENV_WORLDPOS\n		vec3 cameraToFrag;\n		if ( isOrthographic ) {\n			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n		} else {\n			cameraToFrag = normalize( vWorldPosition - cameraPosition );\n		}\n		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n		#ifdef ENVMAP_MODE_REFLECTION\n			vec3 reflectVec = reflect( cameraToFrag, worldNormal );\n		#else\n			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n		#endif\n	#else\n		vec3 reflectVec = vReflect;\n	#endif\n	#ifdef ENVMAP_TYPE_CUBE\n		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n	#elif defined( ENVMAP_TYPE_CUBE_UV )\n		vec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n	#else\n		vec4 envColor = vec4( 0.0 );\n	#endif\n	#ifdef ENVMAP_BLENDING_MULTIPLY\n		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n	#elif defined( ENVMAP_BLENDING_MIX )\n		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n	#elif defined( ENVMAP_BLENDING_ADD )\n		outgoingLight += envColor.xyz * specularStrength * reflectivity;\n	#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n	uniform float envMapIntensity;\n	uniform float flipEnvMap;\n	#ifdef ENVMAP_TYPE_CUBE\n		uniform samplerCube envMap;\n	#else\n		uniform sampler2D envMap;\n	#endif\n	\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n	uniform float reflectivity;\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n		#define ENV_WORLDPOS\n	#endif\n	#ifdef ENV_WORLDPOS\n		varying vec3 vWorldPosition;\n		uniform float refractionRatio;\n	#else\n		varying vec3 vReflect;\n	#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n		#define ENV_WORLDPOS\n	#endif\n	#ifdef ENV_WORLDPOS\n		\n		varying vec3 vWorldPosition;\n	#else\n		varying vec3 vReflect;\n		uniform float refractionRatio;\n	#endif\n#endif",envmap_physical_pars_fragment:"#if defined( USE_ENVMAP )\n	vec3 getIBLIrradiance( const in vec3 normal ) {\n		#if defined( ENVMAP_TYPE_CUBE_UV )\n			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n			return PI * envMapColor.rgb * envMapIntensity;\n		#else\n			return vec3( 0.0 );\n		#endif\n	}\n	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n		#if defined( ENVMAP_TYPE_CUBE_UV )\n			vec3 reflectVec = reflect( - viewDir, normal );\n			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n			return envMapColor.rgb * envMapIntensity;\n		#else\n			return vec3( 0.0 );\n		#endif\n	}\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n	#ifdef ENV_WORLDPOS\n		vWorldPosition = worldPosition.xyz;\n	#else\n		vec3 cameraToVertex;\n		if ( isOrthographic ) {\n			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n		} else {\n			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n		}\n		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n		#ifdef ENVMAP_MODE_REFLECTION\n			vReflect = reflect( cameraToVertex, worldNormal );\n		#else\n			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n		#endif\n	#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n	vFogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n	varying float vFogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n	#ifdef FOG_EXP2\n		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n	#else\n		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n	#endif\n	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n	uniform vec3 fogColor;\n	varying float vFogDepth;\n	#ifdef FOG_EXP2\n		uniform float fogDensity;\n	#else\n		uniform float fogNear;\n		uniform float fogFar;\n	#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n	uniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n	float dotNL = dot( normal, lightDirection );\n	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n	#ifdef USE_GRADIENTMAP\n		return vec3( texture2D( gradientMap, coord ).r );\n	#else\n		return ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n	#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n	vec4 lightMapTexel = texture2D( lightMap, vUv2 );\n	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n	reflectedLight.indirectDiffuse += lightMapIrradiance;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n	uniform sampler2D lightMap;\n	uniform float lightMapIntensity;\n#endif",lights_lambert_vertex:"vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n	vLightBack = vec3( 0.0 );\n	vIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );\n#ifdef DOUBLE_SIDED\n	vIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n	vIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );\n#endif\n#if NUM_POINT_LIGHTS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n		getPointLightInfo( pointLights[ i ], geometry, directLight );\n		dotNL = dot( geometry.normal, directLight.direction );\n		directLightColor_Diffuse = directLight.color;\n		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n		#ifdef DOUBLE_SIDED\n			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n		#endif\n	}\n	#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n		getSpotLightInfo( spotLights[ i ], geometry, directLight );\n		dotNL = dot( geometry.normal, directLight.direction );\n		directLightColor_Diffuse = directLight.color;\n		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n		#ifdef DOUBLE_SIDED\n			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n		#endif\n	}\n	#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n		getDirectionalLightInfo( directionalLights[ i ], geometry, directLight );\n		dotNL = dot( geometry.normal, directLight.direction );\n		directLightColor_Diffuse = directLight.color;\n		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n		#ifdef DOUBLE_SIDED\n			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n		#endif\n	}\n	#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n		vIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n		#ifdef DOUBLE_SIDED\n			vIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );\n		#endif\n	}\n	#pragma unroll_loop_end\n#endif",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n	float x = normal.x, y = normal.y, z = normal.z;\n	vec3 result = shCoefficients[ 0 ] * 0.886227;\n	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n	return result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\n	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n	return irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n	vec3 irradiance = ambientLightColor;\n	return irradiance;\n}\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n	#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n		if ( cutoffDistance > 0.0 ) {\n			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n		}\n		return distanceFalloff;\n	#else\n		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\n		}\n		return 1.0;\n	#endif\n}\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n	return smoothstep( coneCosine, penumbraCosine, angleCosine );\n}\n#if NUM_DIR_LIGHTS > 0\n	struct DirectionalLight {\n		vec3 direction;\n		vec3 color;\n	};\n	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\n		light.color = directionalLight.color;\n		light.direction = directionalLight.direction;\n		light.visible = true;\n	}\n#endif\n#if NUM_POINT_LIGHTS > 0\n	struct PointLight {\n		vec3 position;\n		vec3 color;\n		float distance;\n		float decay;\n	};\n	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\n		vec3 lVector = pointLight.position - geometry.position;\n		light.direction = normalize( lVector );\n		float lightDistance = length( lVector );\n		light.color = pointLight.color;\n		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n		light.visible = ( light.color != vec3( 0.0 ) );\n	}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n	struct SpotLight {\n		vec3 position;\n		vec3 direction;\n		vec3 color;\n		float distance;\n		float decay;\n		float coneCos;\n		float penumbraCos;\n	};\n	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\n		vec3 lVector = spotLight.position - geometry.position;\n		light.direction = normalize( lVector );\n		float angleCos = dot( light.direction, spotLight.direction );\n		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n		if ( spotAttenuation > 0.0 ) {\n			float lightDistance = length( lVector );\n			light.color = spotLight.color * spotAttenuation;\n			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n			light.visible = ( light.color != vec3( 0.0 ) );\n		} else {\n			light.color = vec3( 0.0 );\n			light.visible = false;\n		}\n	}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n	struct RectAreaLight {\n		vec3 color;\n		vec3 position;\n		vec3 halfWidth;\n		vec3 halfHeight;\n	};\n	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;\n	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n	struct HemisphereLight {\n		vec3 direction;\n		vec3 skyColor;\n		vec3 groundColor;\n	};\n	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\n		float dotNL = dot( normal, hemiLight.direction );\n		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n		return irradiance;\n	}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\nstruct ToonMaterial {\n	vec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct				RE_Direct_Toon\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )	(0)",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\nstruct BlinnPhongMaterial {\n	vec3 diffuseColor;\n	vec3 specularColor;\n	float specularShininess;\n	float specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n	vec3 irradiance = dotNL * directLight.color;\n	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct				RE_Direct_BlinnPhong\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )	(0)",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n#ifdef IOR\n	#ifdef SPECULAR\n		float specularIntensityFactor = specularIntensity;\n		vec3 specularColorFactor = specularColor;\n		#ifdef USE_SPECULARINTENSITYMAP\n			specularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;\n		#endif\n		#ifdef USE_SPECULARCOLORMAP\n			specularColorFactor *= texture2D( specularColorMap, vUv ).rgb;\n		#endif\n		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n	#else\n		float specularIntensityFactor = 1.0;\n		vec3 specularColorFactor = vec3( 1.0 );\n		material.specularF90 = 1.0;\n	#endif\n	material.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n	material.specularF90 = 1.0;\n#endif\n#ifdef USE_CLEARCOAT\n	material.clearcoat = clearcoat;\n	material.clearcoatRoughness = clearcoatRoughness;\n	material.clearcoatF0 = vec3( 0.04 );\n	material.clearcoatF90 = 1.0;\n	#ifdef USE_CLEARCOATMAP\n		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n	#endif\n	#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n	#endif\n	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n	material.clearcoatRoughness += geometryRoughness;\n	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_SHEEN\n	material.sheenColor = sheenColor;\n	#ifdef USE_SHEENCOLORMAP\n		material.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;\n	#endif\n	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\n	#ifdef USE_SHEENROUGHNESSMAP\n		material.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;\n	#endif\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n	vec3 diffuseColor;\n	float roughness;\n	vec3 specularColor;\n	float specularF90;\n	#ifdef USE_CLEARCOAT\n		float clearcoat;\n		float clearcoatRoughness;\n		vec3 clearcoatF0;\n		float clearcoatF90;\n	#endif\n	#ifdef USE_SHEEN\n		vec3 sheenColor;\n		float sheenRoughness;\n	#endif\n};\nvec3 clearcoatSpecular = vec3( 0.0 );\nvec3 sheenSpecular = vec3( 0.0 );\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness) {\n	float dotNV = saturate( dot( normal, viewDir ) );\n	float r2 = roughness * roughness;\n	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\n	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\n	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\n	return saturate( DG * RECIPROCAL_PI );\n}\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n	float dotNV = saturate( dot( normal, viewDir ) );\n	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n	vec4 r = roughness * c0 + c1;\n	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n	return fab;\n}\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n	vec2 fab = DFGApprox( normal, viewDir, roughness );\n	return specularColor * fab.x + specularF90 * fab.y;\n}\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n	vec2 fab = DFGApprox( normal, viewDir, roughness );\n	vec3 FssEss = specularColor * fab.x + specularF90 * fab.y;\n	float Ess = fab.x + fab.y;\n	float Ems = 1.0 - Ess;\n	vec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n	singleScatter += FssEss;\n	multiScatter += Fms * Ems;\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n		vec3 normal = geometry.normal;\n		vec3 viewDir = geometry.viewDir;\n		vec3 position = geometry.position;\n		vec3 lightPos = rectAreaLight.position;\n		vec3 halfWidth = rectAreaLight.halfWidth;\n		vec3 halfHeight = rectAreaLight.halfHeight;\n		vec3 lightColor = rectAreaLight.color;\n		float roughness = material.roughness;\n		vec3 rectCoords[ 4 ];\n		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n		vec2 uv = LTC_Uv( normal, viewDir, roughness );\n		vec4 t1 = texture2D( ltc_1, uv );\n		vec4 t2 = texture2D( ltc_2, uv );\n		mat3 mInv = mat3(\n			vec3( t1.x, 0, t1.y ),\n			vec3(    0, 1,    0 ),\n			vec3( t1.z, 0, t1.w )\n		);\n		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n	}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n	vec3 irradiance = dotNL * directLight.color;\n	#ifdef USE_CLEARCOAT\n		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n		vec3 ccIrradiance = dotNLcc * directLight.color;\n		clearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n	#endif\n	#ifdef USE_SHEEN\n		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );\n	#endif\n	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );\n	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n	#ifdef USE_CLEARCOAT\n		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n	#endif\n	#ifdef USE_SHEEN\n		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );\n	#endif\n	vec3 singleScattering = vec3( 0.0 );\n	vec3 multiScattering = vec3( 0.0 );\n	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n	computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n	vec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n	reflectedLight.indirectSpecular += radiance * singleScattering;\n	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct				RE_Direct_Physical\n#define RE_Direct_RectArea		RE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular		RE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef USE_CLEARCOAT\n	geometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n	PointLight pointLight;\n	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n	PointLightShadow pointLightShadow;\n	#endif\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n		pointLight = pointLights[ i ];\n		getPointLightInfo( pointLight, geometry, directLight );\n		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n		pointLightShadow = pointLightShadows[ i ];\n		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometry, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n	SpotLight spotLight;\n	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n	SpotLightShadow spotLightShadow;\n	#endif\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n		spotLight = spotLights[ i ];\n		getSpotLightInfo( spotLight, geometry, directLight );\n		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n		spotLightShadow = spotLightShadows[ i ];\n		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometry, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n	DirectionalLight directionalLight;\n	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n	DirectionalLightShadow directionalLightShadow;\n	#endif\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n		directionalLight = directionalLights[ i ];\n		getDirectionalLightInfo( directionalLight, geometry, directLight );\n		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n		directionalLightShadow = directionalLightShadows[ i ];\n		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometry, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n	RectAreaLight rectAreaLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n		rectAreaLight = rectAreaLights[ i ];\n		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n	vec3 iblIrradiance = vec3( 0.0 );\n	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\n	#if ( NUM_HEMI_LIGHTS > 0 )\n		#pragma unroll_loop_start\n		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n		}\n		#pragma unroll_loop_end\n	#endif\n#endif\n#if defined( RE_IndirectSpecular )\n	vec3 radiance = vec3( 0.0 );\n	vec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n	#ifdef USE_LIGHTMAP\n		vec4 lightMapTexel = texture2D( lightMap, vUv2 );\n		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n		irradiance += lightMapIrradiance;\n	#endif\n	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n		iblIrradiance += getIBLIrradiance( geometry.normal );\n	#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n	radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\n	#ifdef USE_CLEARCOAT\n		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\n	#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n	uniform float logDepthBufFC;\n	varying float vFragDepth;\n	varying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n	#ifdef USE_LOGDEPTHBUF_EXT\n		varying float vFragDepth;\n		varying float vIsPerspective;\n	#else\n		uniform float logDepthBufFC;\n	#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n	#ifdef USE_LOGDEPTHBUF_EXT\n		vFragDepth = 1.0 + gl_Position.w;\n		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n	#else\n		if ( isPerspectiveMatrix( projectionMatrix ) ) {\n			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n			gl_Position.z *= gl_Position.w;\n		}\n	#endif\n#endif",map_fragment:"#ifdef USE_MAP\n	vec4 sampledDiffuseColor = texture2D( map, vUv );\n	#ifdef DECODE_VIDEO_TEXTURE\n		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\n	#endif\n	diffuseColor *= sampledDiffuseColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n	uniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n	diffuseColor *= texture2D( map, uv );\n#endif\n#ifdef USE_ALPHAMAP\n	diffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n	uniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n	uniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n	uniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n	vec4 texelMetalness = texture2D( metalnessMap, vUv );\n	metalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n	uniform sampler2D metalnessMap;\n#endif",morphcolor_vertex:"#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\n	vColor *= morphTargetBaseInfluence;\n	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n		#if defined( USE_COLOR_ALPHA )\n			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\n		#elif defined( USE_COLOR )\n			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\n		#endif\n	}\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n	objectNormal *= morphTargetBaseInfluence;\n	#ifdef MORPHTARGETS_TEXTURE\n		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\n		}\n	#else\n		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n	#endif\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n	uniform float morphTargetBaseInfluence;\n	#ifdef MORPHTARGETS_TEXTURE\n		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n		uniform sampler2DArray morphTargetsTexture;\n		uniform ivec2 morphTargetsTextureSize;\n		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\n			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\n			int y = texelIndex / morphTargetsTextureSize.x;\n			int x = texelIndex - y * morphTargetsTextureSize.x;\n			ivec3 morphUV = ivec3( x, y, morphTargetIndex );\n			return texelFetch( morphTargetsTexture, morphUV, 0 );\n		}\n	#else\n		#ifndef USE_MORPHNORMALS\n			uniform float morphTargetInfluences[ 8 ];\n		#else\n			uniform float morphTargetInfluences[ 4 ];\n		#endif\n	#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n	transformed *= morphTargetBaseInfluence;\n	#ifdef MORPHTARGETS_TEXTURE\n		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\n		}\n	#else\n		transformed += morphTarget0 * morphTargetInfluences[ 0 ];\n		transformed += morphTarget1 * morphTargetInfluences[ 1 ];\n		transformed += morphTarget2 * morphTargetInfluences[ 2 ];\n		transformed += morphTarget3 * morphTargetInfluences[ 3 ];\n		#ifndef USE_MORPHNORMALS\n			transformed += morphTarget4 * morphTargetInfluences[ 4 ];\n			transformed += morphTarget5 * morphTargetInfluences[ 5 ];\n			transformed += morphTarget6 * morphTargetInfluences[ 6 ];\n			transformed += morphTarget7 * morphTargetInfluences[ 7 ];\n		#endif\n	#endif\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n	vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n	vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n	vec3 normal = normalize( cross( fdx, fdy ) );\n#else\n	vec3 normal = normalize( vNormal );\n	#ifdef DOUBLE_SIDED\n		normal = normal * faceDirection;\n	#endif\n	#ifdef USE_TANGENT\n		vec3 tangent = normalize( vTangent );\n		vec3 bitangent = normalize( vBitangent );\n		#ifdef DOUBLE_SIDED\n			tangent = tangent * faceDirection;\n			bitangent = bitangent * faceDirection;\n		#endif\n		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n			mat3 vTBN = mat3( tangent, bitangent, normal );\n		#endif\n	#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps:"#ifdef OBJECTSPACE_NORMALMAP\n	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n	#ifdef FLIP_SIDED\n		normal = - normal;\n	#endif\n	#ifdef DOUBLE_SIDED\n		normal = normal * faceDirection;\n	#endif\n	normal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n	mapN.xy *= normalScale;\n	#ifdef USE_TANGENT\n		normal = normalize( vTBN * mapN );\n	#else\n		normal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );\n	#endif\n#elif defined( USE_BUMPMAP )\n	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normal_pars_fragment:"#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n	#ifdef USE_TANGENT\n		varying vec3 vTangent;\n		varying vec3 vBitangent;\n	#endif\n#endif",normal_pars_vertex:"#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n	#ifdef USE_TANGENT\n		varying vec3 vTangent;\n		varying vec3 vBitangent;\n	#endif\n#endif",normal_vertex:"#ifndef FLAT_SHADED\n	vNormal = normalize( transformedNormal );\n	#ifdef USE_TANGENT\n		vTangent = normalize( transformedTangent );\n		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n	#endif\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n	uniform sampler2D normalMap;\n	uniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n	uniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\n		vec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n		vec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n		vec2 st0 = dFdx( vUv.st );\n		vec2 st1 = dFdy( vUv.st );\n		vec3 N = surf_norm;\n		vec3 q1perp = cross( q1, N );\n		vec3 q0perp = cross( N, q0 );\n		vec3 T = q1perp * st0.x + q0perp * st1.x;\n		vec3 B = q1perp * st0.y + q0perp * st1.y;\n		float det = max( dot( T, T ), dot( B, B ) );\n		float scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\n		return normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\n	}\n#endif",clearcoat_normal_fragment_begin:"#ifdef USE_CLEARCOAT\n	vec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n	clearcoatMapN.xy *= clearcoatNormalScale;\n	#ifdef USE_TANGENT\n		clearcoatNormal = normalize( vTBN * clearcoatMapN );\n	#else\n		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\n	#endif\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n	uniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n	uniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n	uniform sampler2D clearcoatNormalMap;\n	uniform vec2 clearcoatNormalScale;\n#endif",output_fragment:"#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= transmissionAlpha + 0.1;\n#endif\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n	return normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n	return 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n	vec4 r = vec4( fract( v * PackFactors ), v );\n	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n	return dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n	return ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n	return linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n	return ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n	gl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n	mvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n	gl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n	vec3 dithering( vec3 color ) {\n		float grid_position = rand( gl_FragCoord.xy );\n		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n		return color + dither_shift_RGB;\n	}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n	vec4 texelRoughness = texture2D( roughnessMap, vUv );\n	roughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n	uniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n		struct DirectionalLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n		struct SpotLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n		struct PointLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n			float shadowCameraNear;\n			float shadowCameraFar;\n		};\n		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n	#endif\n	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n	}\n	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n		return unpackRGBATo2Half( texture2D( shadow, uv ) );\n	}\n	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n		float occlusion = 1.0;\n		vec2 distribution = texture2DDistribution( shadow, uv );\n		float hard_shadow = step( compare , distribution.x );\n		if (hard_shadow != 1.0 ) {\n			float distance = compare - distribution.x ;\n			float variance = max( 0.00000, distribution.y * distribution.y );\n			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n		}\n		return occlusion;\n	}\n	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n		float shadow = 1.0;\n		shadowCoord.xyz /= shadowCoord.w;\n		shadowCoord.z += shadowBias;\n		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n		bool inFrustum = all( inFrustumVec );\n		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n		bool frustumTest = all( frustumTestVec );\n		if ( frustumTest ) {\n		#if defined( SHADOWMAP_TYPE_PCF )\n			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n			float dx0 = - texelSize.x * shadowRadius;\n			float dy0 = - texelSize.y * shadowRadius;\n			float dx1 = + texelSize.x * shadowRadius;\n			float dy1 = + texelSize.y * shadowRadius;\n			float dx2 = dx0 / 2.0;\n			float dy2 = dy0 / 2.0;\n			float dx3 = dx1 / 2.0;\n			float dy3 = dy1 / 2.0;\n			shadow = (\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n			) * ( 1.0 / 17.0 );\n		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n			float dx = texelSize.x;\n			float dy = texelSize.y;\n			vec2 uv = shadowCoord.xy;\n			vec2 f = fract( uv * shadowMapSize + 0.5 );\n			uv -= f * texelSize;\n			shadow = (\n				texture2DCompare( shadowMap, uv, shadowCoord.z ) +\n				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n					 f.x ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n					 f.x ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n					 f.y ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n					 f.y ) +\n				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n						  f.x ),\n					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n						  f.x ),\n					 f.y )\n			) * ( 1.0 / 9.0 );\n		#elif defined( SHADOWMAP_TYPE_VSM )\n			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n		#else\n			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n		#endif\n		}\n		return shadow;\n	}\n	vec2 cubeToUV( vec3 v, float texelSizeY ) {\n		vec3 absV = abs( v );\n		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n		absV *= scaleToCube;\n		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n		vec2 planar = v.xy;\n		float almostATexel = 1.5 * texelSizeY;\n		float almostOne = 1.0 - almostATexel;\n		if ( absV.z >= almostOne ) {\n			if ( v.z > 0.0 )\n				planar.x = 4.0 - v.x;\n		} else if ( absV.x >= almostOne ) {\n			float signX = sign( v.x );\n			planar.x = v.z * signX + 2.0 * signX;\n		} else if ( absV.y >= almostOne ) {\n			float signY = sign( v.y );\n			planar.x = v.x + 2.0 * signY + 2.0;\n			planar.y = v.z * signY - 2.0;\n		}\n		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n	}\n	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n		vec3 lightToPosition = shadowCoord.xyz;\n		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;\n		vec3 bd3D = normalize( lightToPosition );\n		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n			return (\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n			) * ( 1.0 / 9.0 );\n		#else\n			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n		#endif\n	}\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n		struct DirectionalLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n		uniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n		struct SpotLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n		struct PointLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n			float shadowCameraNear;\n			float shadowCameraFar;\n		};\n		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n	#endif\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n		vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n		vec4 shadowWorldPosition;\n	#endif\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n		vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n	}\n	#pragma unroll_loop_end\n	#endif\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n	float shadow = 1.0;\n	#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n	DirectionalLightShadow directionalLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n		directionalLight = directionalLightShadows[ i ];\n		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n	SpotLightShadow spotLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n		spotLight = spotLightShadows[ i ];\n		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n	PointLightShadow pointLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n		pointLight = pointLightShadows[ i ];\n		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#endif\n	return shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n	mat4 boneMatX = getBoneMatrix( skinIndex.x );\n	mat4 boneMatY = getBoneMatrix( skinIndex.y );\n	mat4 boneMatZ = getBoneMatrix( skinIndex.z );\n	mat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n	uniform mat4 bindMatrix;\n	uniform mat4 bindMatrixInverse;\n	#ifdef BONE_TEXTURE\n		uniform highp sampler2D boneTexture;\n		uniform int boneTextureSize;\n		mat4 getBoneMatrix( const in float i ) {\n			float j = i * 4.0;\n			float x = mod( j, float( boneTextureSize ) );\n			float y = floor( j / float( boneTextureSize ) );\n			float dx = 1.0 / float( boneTextureSize );\n			float dy = 1.0 / float( boneTextureSize );\n			y = dy * ( y + 0.5 );\n			vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n			vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n			vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n			vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n			mat4 bone = mat4( v1, v2, v3, v4 );\n			return bone;\n		}\n	#else\n		uniform mat4 boneMatrices[ MAX_BONES ];\n		mat4 getBoneMatrix( const in float i ) {\n			mat4 bone = boneMatrices[ int(i) ];\n			return bone;\n		}\n	#endif\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n	vec4 skinned = vec4( 0.0 );\n	skinned += boneMatX * skinVertex * skinWeight.x;\n	skinned += boneMatY * skinVertex * skinWeight.y;\n	skinned += boneMatZ * skinVertex * skinWeight.z;\n	skinned += boneMatW * skinVertex * skinWeight.w;\n	transformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n	mat4 skinMatrix = mat4( 0.0 );\n	skinMatrix += skinWeight.x * boneMatX;\n	skinMatrix += skinWeight.y * boneMatY;\n	skinMatrix += skinWeight.z * boneMatZ;\n	skinMatrix += skinWeight.w * boneMatW;\n	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n	#ifdef USE_TANGENT\n		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n	#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n	vec4 texelSpecular = texture2D( specularMap, vUv );\n	specularStrength = texelSpecular.r;\n#else\n	specularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n	uniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n	return toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n	color *= toneMappingExposure;\n	return saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n	color *= toneMappingExposure;\n	color = max( vec3( 0.0 ), color - 0.004 );\n	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n	return a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n	const mat3 ACESInputMat = mat3(\n		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),\n		vec3( 0.04823, 0.01566, 0.83777 )\n	);\n	const mat3 ACESOutputMat = mat3(\n		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),\n		vec3( -0.07367, -0.00605,  1.07602 )\n	);\n	color *= toneMappingExposure / 0.6;\n	color = ACESInputMat * color;\n	color = RRTAndODTFit( color );\n	color = ACESOutputMat * color;\n	return saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmission_fragment:"#ifdef USE_TRANSMISSION\n	float transmissionAlpha = 1.0;\n	float transmissionFactor = transmission;\n	float thicknessFactor = thickness;\n	#ifdef USE_TRANSMISSIONMAP\n		transmissionFactor *= texture2D( transmissionMap, vUv ).r;\n	#endif\n	#ifdef USE_THICKNESSMAP\n		thicknessFactor *= texture2D( thicknessMap, vUv ).g;\n	#endif\n	vec3 pos = vWorldPosition;\n	vec3 v = normalize( cameraPosition - pos );\n	vec3 n = inverseTransformDirection( normal, viewMatrix );\n	vec4 transmission = getIBLVolumeRefraction(\n		n, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,\n		pos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,\n		attenuationColor, attenuationDistance );\n	totalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );\n	transmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );\n#endif",transmission_pars_fragment:"#ifdef USE_TRANSMISSION\n	uniform float transmission;\n	uniform float thickness;\n	uniform float attenuationDistance;\n	uniform vec3 attenuationColor;\n	#ifdef USE_TRANSMISSIONMAP\n		uniform sampler2D transmissionMap;\n	#endif\n	#ifdef USE_THICKNESSMAP\n		uniform sampler2D thicknessMap;\n	#endif\n	uniform vec2 transmissionSamplerSize;\n	uniform sampler2D transmissionSamplerMap;\n	uniform mat4 modelMatrix;\n	uniform mat4 projectionMatrix;\n	varying vec3 vWorldPosition;\n	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\n		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n		vec3 modelScale;\n		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n		return normalize( refractionVector ) * thickness * modelScale;\n	}\n	float applyIorToRoughness( const in float roughness, const in float ior ) {\n		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n	}\n	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\n		float framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n		#ifdef texture2DLodEXT\n			return texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n		#else\n			return texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n		#endif\n	}\n	vec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\n		if ( attenuationDistance == 0.0 ) {\n			return radiance;\n		} else {\n			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance * radiance;\n		}\n	}\n	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\n		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\n		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\n		const in vec3 attenuationColor, const in float attenuationDistance ) {\n		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n		vec3 refractedRayExit = position + transmissionRay;\n		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n		vec2 refractionCoords = ndcPos.xy / ndcPos.w;\n		refractionCoords += 1.0;\n		refractionCoords /= 2.0;\n		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n		vec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\n		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n		return vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\n	}\n#endif",uv_pars_fragment:"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n	varying vec2 vUv;\n#endif",uv_pars_vertex:"#ifdef USE_UV\n	#ifdef UVS_VERTEX_ONLY\n		vec2 vUv;\n	#else\n		varying vec2 vUv;\n	#endif\n	uniform mat3 uvTransform;\n#endif",uv_vertex:"#ifdef USE_UV\n	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n	varying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n	attribute vec2 uv2;\n	varying vec2 vUv2;\n	uniform mat3 uv2Transform;\n#endif",uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )\n	vec4 worldPosition = vec4( transformed, 1.0 );\n	#ifdef USE_INSTANCING\n		worldPosition = instanceMatrix * worldPosition;\n	#endif\n	worldPosition = modelMatrix * worldPosition;\n#endif",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n	gl_Position = vec4( position.xy, 1.0, 1.0 );\n}",background_frag:"uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n	gl_FragColor = texture2D( t2D, vUv );\n	#ifdef DECODE_VIDEO_TEXTURE\n		gl_FragColor = vec4( mix( pow( gl_FragColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), gl_FragColor.rgb * 0.0773993808, vec3( lessThanEqual( gl_FragColor.rgb, vec3( 0.04045 ) ) ) ), gl_FragColor.w );\n	#endif\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vWorldDirection = transformDirection( position, modelMatrix );\n	#include <begin_vertex>\n	#include <project_vertex>\n	gl_Position.z = gl_Position.w;\n}",cube_frag:"#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n	vec3 vReflect = vWorldDirection;\n	#include <envmap_fragment>\n	gl_FragColor = envColor;\n	gl_FragColor.a *= opacity;\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n	#include <uv_vertex>\n	#include <skinbase_vertex>\n	#ifdef USE_DISPLACEMENTMAP\n		#include <beginnormal_vertex>\n		#include <morphnormal_vertex>\n		#include <skinnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vHighPrecisionZW = gl_Position.zw;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n	uniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( 1.0 );\n	#if DEPTH_PACKING == 3200\n		diffuseColor.a = opacity;\n	#endif\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <logdepthbuf_fragment>\n	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n	#if DEPTH_PACKING == 3200\n		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n	#elif DEPTH_PACKING == 3201\n		gl_FragColor = packDepthToRGBA( fragCoordZ );\n	#endif\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <skinbase_vertex>\n	#ifdef USE_DISPLACEMENTMAP\n		#include <beginnormal_vertex>\n		#include <morphnormal_vertex>\n		#include <skinnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <worldpos_vertex>\n	#include <clipping_planes_vertex>\n	vWorldPosition = worldPosition.xyz;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( 1.0 );\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	float dist = length( vWorldPosition - referencePosition );\n	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n	dist = saturate( dist );\n	gl_FragColor = packDepthToRGBA( dist );\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vWorldDirection = transformDirection( position, modelMatrix );\n	#include <begin_vertex>\n	#include <project_vertex>\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vec3 direction = normalize( vWorldDirection );\n	vec2 sampleUV = equirectUv( direction );\n	gl_FragColor = texture2D( tEquirect, sampleUV );\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	vLineDistance = scale * lineDistance;\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	if ( mod( vLineDistance, totalSize ) > dashSize ) {\n		discard;\n	}\n	vec3 outgoingLight = vec3( 0.0 );\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <color_fragment>\n	outgoingLight = diffuseColor.rgb;\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n		#include <beginnormal_vertex>\n		#include <morphnormal_vertex>\n		#include <skinbase_vertex>\n		#include <skinnormal_vertex>\n		#include <defaultnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <specularmap_fragment>\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	#ifdef USE_LIGHTMAP\n		vec4 lightMapTexel = texture2D( lightMap, vUv2 );\n		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\n	#else\n		reflectedLight.indirectDiffuse += vec3( 1.0 );\n	#endif\n	#include <aomap_fragment>\n	reflectedLight.indirectDiffuse *= diffuseColor.rgb;\n	vec3 outgoingLight = reflectedLight.indirectDiffuse;\n	#include <envmap_fragment>\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n	varying vec3 vLightBack;\n	varying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <lights_lambert_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",meshlambert_frag:"uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n	varying vec3 vLightBack;\n	varying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <specularmap_fragment>\n	#include <emissivemap_fragment>\n	#ifdef DOUBLE_SIDED\n		reflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n	#else\n		reflectedLight.indirectDiffuse += vIndirectFront;\n	#endif\n	#include <lightmap_fragment>\n	reflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );\n	#ifdef DOUBLE_SIDED\n		reflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n	#else\n		reflectedLight.directDiffuse = vLightFront;\n	#endif\n	reflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n	#include <envmap_fragment>\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n	vViewPosition = - mvPosition.xyz;\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	vec3 viewDir = normalize( vViewPosition );\n	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n	vec3 y = cross( viewDir, x );\n	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n	#ifdef USE_MATCAP\n		vec4 matcapColor = texture2D( matcap, uv );\n	#else\n		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\n	#endif\n	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshnormal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n	varying vec3 vViewPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n	vViewPosition = - mvPosition.xyz;\n#endif\n}",meshnormal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n	varying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	#include <logdepthbuf_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n	#ifdef OPAQUE\n		gl_FragColor.a = 1.0;\n	#endif\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <specularmap_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_phong_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n	#include <envmap_fragment>\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n	varying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n	vWorldPosition = worldPosition.xyz;\n#endif\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n	#define IOR\n	#define SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n	uniform float ior;\n#endif\n#ifdef SPECULAR\n	uniform float specularIntensity;\n	uniform vec3 specularColor;\n	#ifdef USE_SPECULARINTENSITYMAP\n		uniform sampler2D specularIntensityMap;\n	#endif\n	#ifdef USE_SPECULARCOLORMAP\n		uniform sampler2D specularColorMap;\n	#endif\n#endif\n#ifdef USE_CLEARCOAT\n	uniform float clearcoat;\n	uniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n	uniform vec3 sheenColor;\n	uniform float sheenRoughness;\n	#ifdef USE_SHEENCOLORMAP\n		uniform sampler2D sheenColorMap;\n	#endif\n	#ifdef USE_SHEENROUGHNESSMAP\n		uniform sampler2D sheenRoughnessMap;\n	#endif\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <roughnessmap_fragment>\n	#include <metalnessmap_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <clearcoat_normal_fragment_begin>\n	#include <clearcoat_normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_physical_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n	#include <transmission_fragment>\n	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n	#ifdef USE_SHEEN\n		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\n		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;\n	#endif\n	#ifdef USE_CLEARCOAT\n		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;\n	#endif\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_toon_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <project_vertex>\n	gl_PointSize = size;\n	#ifdef USE_SIZEATTENUATION\n		bool isPerspective = isPerspectiveMatrix( projectionMatrix );\n		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n	#endif\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <worldpos_vertex>\n	#include <fog_vertex>\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec3 outgoingLight = vec3( 0.0 );\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_particle_fragment>\n	#include <color_fragment>\n	#include <alphatest_fragment>\n	outgoingLight = diffuseColor.rgb;\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n}",shadow_vert:"#include <common>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n	vec2 scale;\n	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n	#ifndef USE_SIZEATTENUATION\n		bool isPerspective = isPerspectiveMatrix( projectionMatrix );\n		if ( isPerspective ) scale *= - mvPosition.z;\n	#endif\n	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n	vec2 rotatedPosition;\n	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n	mvPosition.xy += rotatedPosition;\n	gl_Position = projectionMatrix * mvPosition;\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec3 outgoingLight = vec3( 0.0 );\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	outgoingLight = diffuseColor.rgb;\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n}"},cn={common:{diffuse:{value:new ae(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new R},uv2Transform:{value:new R},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new Q(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new ae(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new ae(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new R}},sprite:{diffuse:{value:new ae(16777215)},opacity:{value:1},center:{value:new Q(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new R}}},co={basic:{uniforms:b4([cn.common,cn.specularmap,cn.envmap,cn.aomap,cn.lightmap,cn.fog]),vertexShader:cm.meshbasic_vert,fragmentShader:cm.meshbasic_frag},lambert:{uniforms:b4([cn.common,cn.specularmap,cn.envmap,cn.aomap,cn.lightmap,cn.emissivemap,cn.fog,cn.lights,{emissive:{value:new ae(0)}}]),vertexShader:cm.meshlambert_vert,fragmentShader:cm.meshlambert_frag},phong:{uniforms:b4([cn.common,cn.specularmap,cn.envmap,cn.aomap,cn.lightmap,cn.emissivemap,cn.bumpmap,cn.normalmap,cn.displacementmap,cn.fog,cn.lights,{emissive:{value:new ae(0)},specular:{value:new ae(1118481)},shininess:{value:30}}]),vertexShader:cm.meshphong_vert,fragmentShader:cm.meshphong_frag},standard:{uniforms:b4([cn.common,cn.envmap,cn.aomap,cn.lightmap,cn.emissivemap,cn.bumpmap,cn.normalmap,cn.displacementmap,cn.roughnessmap,cn.metalnessmap,cn.fog,cn.lights,{emissive:{value:new ae(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:cm.meshphysical_vert,fragmentShader:cm.meshphysical_frag},toon:{uniforms:b4([cn.common,cn.aomap,cn.lightmap,cn.emissivemap,cn.bumpmap,cn.normalmap,cn.displacementmap,cn.gradientmap,cn.fog,cn.lights,{emissive:{value:new ae(0)}}]),vertexShader:cm.meshtoon_vert,fragmentShader:cm.meshtoon_frag},matcap:{uniforms:b4([cn.common,cn.bumpmap,cn.normalmap,cn.displacementmap,cn.fog,{matcap:{value:null}}]),vertexShader:cm.meshmatcap_vert,fragmentShader:cm.meshmatcap_frag},points:{uniforms:b4([cn.points,cn.fog]),vertexShader:cm.points_vert,fragmentShader:cm.points_frag},dashed:{uniforms:b4([cn.common,cn.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:cm.linedashed_vert,fragmentShader:cm.linedashed_frag},depth:{uniforms:b4([cn.common,cn.displacementmap]),vertexShader:cm.depth_vert,fragmentShader:cm.depth_frag},normal:{uniforms:b4([cn.common,cn.bumpmap,cn.normalmap,cn.displacementmap,{opacity:{value:1}}]),vertexShader:cm.meshnormal_vert,fragmentShader:cm.meshnormal_frag},sprite:{uniforms:b4([cn.sprite,cn.fog]),vertexShader:cm.sprite_vert,fragmentShader:cm.sprite_frag},background:{uniforms:{uvTransform:{value:new R},t2D:{value:null}},vertexShader:cm.background_vert,fragmentShader:cm.background_frag},cube:{uniforms:b4([cn.envmap,{opacity:{value:1}}]),vertexShader:cm.cube_vert,fragmentShader:cm.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:cm.equirect_vert,fragmentShader:cm.equirect_frag},distanceRGBA:{uniforms:b4([cn.common,cn.displacementmap,{referencePosition:{value:new aq},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:cm.distanceRGBA_vert,fragmentShader:cm.distanceRGBA_frag},shadow:{uniforms:b4([cn.lights,cn.fog,{color:{value:new ae(0)},opacity:{value:1}},]),vertexShader:cm.shadow_vert,fragmentShader:cm.shadow_frag}};function cp(a,b,c,d,e,h){let i=new ae(0),j=!0===e?0:1,k,l,m=null,n=0,o=null;function p(a,b){c.buffers.color.setClear(a.r,a.g,a.b,b,h)}return{getClearColor:function(){return i},setClearColor:function(a,b=1){i.set(a),p(i,j=b)},getClearAlpha:function(){return j},setClearAlpha:function(a){p(i,j=a)},render:function(c,e){let h=!1,q=!0===e.isScene?e.background:null;q&&q.isTexture&&(q=b.get(q));let r=a.xr,s=r.getSession&&r.getSession();s&&"additive"===s.environmentBlendMode&&(q=null),null===q?p(i,j):q&&q.isColor&&(p(q,1),h=!0),(a.autoClear||h)&&a.clear(a.autoClearColor,a.autoClearDepth,a.autoClearStencil),q&&(q.isCubeTexture||306===q.mapping)?(void 0===l&&((l=new b0(new b2(1,1,1),new b6({name:"BackgroundCubeMaterial",uniforms:b3(co.cube.uniforms),vertexShader:co.cube.vertexShader,fragmentShader:co.cube.fragmentShader,side:g,depthTest:!1,depthWrite:!1,fog:!1}))).geometry.deleteAttribute("normal"),l.geometry.deleteAttribute("uv"),l.onBeforeRender=function(a,b,c){this.matrixWorld.copyPosition(c.matrixWorld)},Object.defineProperty(l.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),d.update(l)),l.material.uniforms.envMap.value=q,l.material.uniforms.flipEnvMap.value=q.isCubeTexture&& !1===q.isRenderTargetTexture?-1:1,(m!==q||n!==q.version||o!==a.toneMapping)&&(l.material.needsUpdate=!0,m=q,n=q.version,o=a.toneMapping),c.unshift(l,l.geometry,l.material,0,0,null)):q&&q.isTexture&&(void 0===k&&((k=new b0(new cl(2,2),new b6({name:"BackgroundMaterial",uniforms:b3(co.background.uniforms),vertexShader:co.background.vertexShader,fragmentShader:co.background.fragmentShader,side:f,depthTest:!1,depthWrite:!1,fog:!1}))).geometry.deleteAttribute("normal"),Object.defineProperty(k.material,"map",{get:function(){return this.uniforms.t2D.value}}),d.update(k)),k.material.uniforms.t2D.value=q,!0===q.matrixAutoUpdate&&q.updateMatrix(),k.material.uniforms.uvTransform.value.copy(q.matrix),(m!==q||n!==q.version||o!==a.toneMapping)&&(k.material.needsUpdate=!0,m=q,n=q.version,o=a.toneMapping),c.unshift(k,k.geometry,k.material,0,0,null))}}}function cq(a,b,c,d){let e=a.getParameter(34921),f=d.isWebGL2?null:b.get("OES_vertex_array_object"),g=d.isWebGL2||null!==f,h={},i=n(null),j=i,k=!1;function l(b){return d.isWebGL2?a.bindVertexArray(b):f.bindVertexArrayOES(b)}function m(b){return d.isWebGL2?a.deleteVertexArray(b):f.deleteVertexArrayOES(b)}function n(a){let b=[],c=[],d=[];for(let f=0;f<e;f++)b[f]=0,c[f]=0,d[f]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:b,enabledAttributes:c,attributeDivisors:d,object:a,attributes:{},index:null}}function o(){let a=j.newAttributes;for(let b=0,c=a.length;b<c;b++)a[b]=0}function p(a){q(a,0)}function q(c,e){let f=j.newAttributes,g=j.enabledAttributes,h=j.attributeDivisors;if(f[c]=1,0===g[c]&&(a.enableVertexAttribArray(c),g[c]=1),h[c]!==e){let i=d.isWebGL2?a:b.get("ANGLE_instanced_arrays");i[d.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](c,e),h[c]=e}}function r(){let b=j.newAttributes,c=j.enabledAttributes;for(let d=0,e=c.length;d<e;d++)c[d]!==b[d]&&(a.disableVertexAttribArray(d),c[d]=0)}function s(b,c,e,f,g,h){!0===d.isWebGL2&&(5124===e||5125===e)?a.vertexAttribIPointer(b,c,e,g,h):a.vertexAttribPointer(b,c,e,f,g,h)}function t(){u(),k=!0,j!==i&&l((j=i).object)}function u(){i.geometry=null,i.program=null,i.wireframe=!1}return{setup:function(e,i,m,t,u){let v=!1;if(g){let w=function b(c,e,g){let i=!0===g.wireframe,j=h[c.id];void 0===j&&(j={},h[c.id]=j);let k=j[e.id];void 0===k&&(k={},j[e.id]=k);let l=k[i];return void 0===l&&(l=n(d.isWebGL2?a.createVertexArray():f.createVertexArrayOES()),k[i]=l),l}(t,m,i);j!==w&&l((j=w).object),(v=function a(b,c){let d=j.attributes,e=b.attributes,f=0;for(let g in e){let h=d[g],i=e[g];if(void 0===h||h.attribute!==i||h.data!==i.data)return!0;f++}return j.attributesNum!==f||j.index!==c}(t,u))&&function a(b,c){let d={},e=b.attributes,f=0;for(let g in e){let h=e[g],i={};i.attribute=h,h.data&&(i.data=h.data),d[g]=i,f++}j.attributes=d,j.attributesNum=f,j.index=c}(t,u)}else{let x=!0===i.wireframe;(j.geometry!==t.id||j.program!==m.id||j.wireframe!==x)&&(j.geometry=t.id,j.program=m.id,j.wireframe=x,v=!0)}!0===e.isInstancedMesh&&(v=!0),null!==u&&c.update(u,34963),(v||k)&&(k=!1,function e(f,g,h,i){if(!1===d.isWebGL2&&(f.isInstancedMesh||i.isInstancedBufferGeometry)&&null===b.get("ANGLE_instanced_arrays"))return;o();let j=i.attributes,k=h.getAttributes(),l=g.defaultAttributeValues;for(let m in k){let n=k[m];if(n.location>=0){let t=j[m];if(void 0===t&&("instanceMatrix"===m&&f.instanceMatrix&&(t=f.instanceMatrix),"instanceColor"===m&&f.instanceColor&&(t=f.instanceColor)),void 0!==t){let u=t.normalized,v=t.itemSize,w=c.get(t);if(void 0===w)continue;let x=w.buffer,y=w.type,z=w.bytesPerElement;if(t.isInterleavedBufferAttribute){let A=t.data,B=A.stride,C=t.offset;if(A.isInstancedInterleavedBuffer){for(let D=0;D<n.locationSize;D++)q(n.location+D,A.meshPerAttribute);!0!==f.isInstancedMesh&& void 0===i._maxInstanceCount&&(i._maxInstanceCount=A.meshPerAttribute*A.count)}else for(let E=0;E<n.locationSize;E++)p(n.location+E);a.bindBuffer(34962,x);for(let F=0;F<n.locationSize;F++)s(n.location+F,v/n.locationSize,y,u,B*z,(C+v/n.locationSize*F)*z)}else{if(t.isInstancedBufferAttribute){for(let G=0;G<n.locationSize;G++)q(n.location+G,t.meshPerAttribute);!0!==f.isInstancedMesh&& void 0===i._maxInstanceCount&&(i._maxInstanceCount=t.meshPerAttribute*t.count)}else for(let H=0;H<n.locationSize;H++)p(n.location+H);a.bindBuffer(34962,x);for(let I=0;I<n.locationSize;I++)s(n.location+I,v/n.locationSize,y,u,v*z,v/n.locationSize*I*z)}}else if(void 0!==l){let J=l[m];if(void 0!==J)switch(J.length){case 2:a.vertexAttrib2fv(n.location,J);break;case 3:a.vertexAttrib3fv(n.location,J);break;case 4:a.vertexAttrib4fv(n.location,J);break;default:a.vertexAttrib1fv(n.location,J)}}}}r()}(e,i,m,t),null!==u&&a.bindBuffer(34963,c.get(u).buffer))},reset:t,resetDefaultState:u,dispose:function(){for(let a in t(),h){let b=h[a];for(let c in b){let d=b[c];for(let e in d)m(d[e].object),delete d[e];delete b[c]}delete h[a]}},releaseStatesOfGeometry:function(a){if(void 0===h[a.id])return;let b=h[a.id];for(let c in b){let d=b[c];for(let e in d)m(d[e].object),delete d[e];delete b[c]}delete h[a.id]},releaseStatesOfProgram:function(a){for(let b in h){let c=h[b];if(void 0===c[a.id])continue;let d=c[a.id];for(let e in d)m(d[e].object),delete d[e];delete c[a.id]}},initAttributes:o,enableAttribute:p,disableUnusedAttributes:r}}function cr(a,b,c,d){let e=d.isWebGL2,f;function g(a){f=a}this.setMode=g,this.render=function(b,d){a.drawArrays(f,b,d),c.update(d,f,1)},this.renderInstances=function(d,g,h){if(0===h)return;let i,j;if(e)i=a,j="drawArraysInstanced";else if(i=b.get("ANGLE_instanced_arrays"),j="drawArraysInstancedANGLE",null===i){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}i[j](f,d,g,h),c.update(g,f,h)}}function cs(a,b,c){let d;function e(b){if("highp"===b){if(a.getShaderPrecisionFormat(35633,36338).precision>0&&a.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";b="mediump"}return"mediump"===b&&a.getShaderPrecisionFormat(35633,36337).precision>0&&a.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}let f="undefined"!=typeof WebGL2RenderingContext&&a instanceof WebGL2RenderingContext||"undefined"!=typeof WebGL2ComputeRenderingContext&&a instanceof WebGL2ComputeRenderingContext,g=void 0!==c.precision?c.precision:"highp",h=e(g);h!==g&&(console.warn("THREE.WebGLRenderer:",g,"not supported, using",h,"instead."),g=h);let i=f||b.has("WEBGL_draw_buffers"),j=!0===c.logarithmicDepthBuffer,k=a.getParameter(34930),l=a.getParameter(35660),m=a.getParameter(3379),n=a.getParameter(34076),o=a.getParameter(34921),p=a.getParameter(36347),q=a.getParameter(36348),r=a.getParameter(36349),s=l>0,t=f||b.has("OES_texture_float"),u=f?a.getParameter(36183):0;return{isWebGL2:f,drawBuffers:i,getMaxAnisotropy:function(){if(void 0!==d)return d;if(!0===b.has("EXT_texture_filter_anisotropic")){let c=b.get("EXT_texture_filter_anisotropic");d=a.getParameter(c.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else d=0;return d},getMaxPrecision:e,precision:g,logarithmicDepthBuffer:j,maxTextures:k,maxVertexTextures:l,maxTextureSize:m,maxCubemapSize:n,maxAttributes:o,maxVertexUniforms:p,maxVaryings:q,maxFragmentUniforms:r,vertexTextures:s,floatFragmentTextures:t,floatVertexTextures:s&&t,maxSamples:u}}function ct(a){let b=this,c=null,d=0,e=!1,f=!1,g=new cf,h=new R,i={value:null,needsUpdate:!1};function j(){i.value!==c&&(i.value=c,i.needsUpdate=d>0),b.numPlanes=d,b.numIntersection=0}function k(a,c,d,e){let f=null!==a?a.length:0,j=null;if(0!==f){if(j=i.value,!0!==e||null===j){let k=d+4*f,l=c.matrixWorldInverse;h.getNormalMatrix(l),(null===j||j.length<k)&&(j=new Float32Array(k));for(let m=0,n=d;m!==f;++m,n+=4)g.copy(a[m]).applyMatrix4(l,h),g.normal.toArray(j,n),j[n+3]=g.constant}i.value=j,i.needsUpdate=!0}return b.numPlanes=f,b.numIntersection=0,j}this.uniform=i,this.numPlanes=0,this.numIntersection=0,this.init=function(a,b,f){let g=0!==a.length||b||0!==d||e;return e=b,c=k(a,f,0),d=a.length,g},this.beginShadows=function(){f=!0,k(null)},this.endShadows=function(){f=!1,j()},this.setState=function(b,g,h){let l=b.clippingPlanes,m=b.clipIntersection,n=b.clipShadows,o=a.get(b);if(e&&null!==l&&0!==l.length&&(!f||n)){let p=f?0:d,q=4*p,r=o.clippingState||null;i.value=r,r=k(l,g,q,h);for(let s=0;s!==q;++s)r[s]=c[s];o.clippingState=r,this.numIntersection=m?this.numPlanes:0,this.numPlanes+=p}else f?k(null):j()}}function cu(a){let b=new WeakMap;function c(a,b){return 303===b?a.mapping=301:304===b&&(a.mapping=302),a}function d(a){let c=a.target;c.removeEventListener("dispose",d);let e=b.get(c);void 0!==e&&(b.delete(c),e.dispose())}return{get:function(e){if(e&&e.isTexture&& !1===e.isRenderTargetTexture){let f=e.mapping;if(303===f||304===f){if(b.has(e)){let g=b.get(e).texture;return c(g,e.mapping)}{let h=e.image;if(!h||!(h.height>0))return null;{let i=new cb(h.height/2);return i.fromEquirectangularTexture(a,e),b.set(e,i),e.addEventListener("dispose",d),c(i.texture,e.mapping)}}}}return e},dispose:function(){b=new WeakMap}}}co.physical={uniforms:b4([co.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new Q(1,1)},clearcoatNormalMap:{value:null},sheen:{value:0},sheenColor:{value:new ae(0)},sheenColorMap:{value:null},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new Q},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new ae(0)},specularIntensity:{value:1},specularIntensityMap:{value:null},specularColor:{value:new ae(1,1,1)},specularColorMap:{value:null}}]),vertexShader:cm.meshphysical_vert,fragmentShader:cm.meshphysical_frag};class cv extends b7{constructor(a=-1,b=1,c=1,d=-1,e=.1,f=2e3){super(),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=a,this.right=b,this.top=c,this.bottom=d,this.near=e,this.far=f,this.updateProjectionMatrix()}copy(a,b){return super.copy(a,b),this.left=a.left,this.right=a.right,this.top=a.top,this.bottom=a.bottom,this.near=a.near,this.far=a.far,this.zoom=a.zoom,this.view=null===a.view?null:Object.assign({},a.view),this}setViewOffset(a,b,c,d,e,f){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=a,this.view.fullHeight=b,this.view.offsetX=c,this.view.offsetY=d,this.view.width=e,this.view.height=f,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){let a=(this.right-this.left)/(2*this.zoom),b=(this.top-this.bottom)/(2*this.zoom),c=(this.right+this.left)/2,d=(this.top+this.bottom)/2,e=c-a,f=c+a,g=d+b,h=d-b;if(null!==this.view&&this.view.enabled){let i=(this.right-this.left)/this.view.fullWidth/this.zoom,j=(this.top-this.bottom)/this.view.fullHeight/this.zoom;e+=i*this.view.offsetX,f=e+i*this.view.width,g-=j*this.view.offsetY,h=g-j*this.view.height}this.projectionMatrix.makeOrthographic(e,f,g,h,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(a){let b=super.toJSON(a);return b.object.zoom=this.zoom,b.object.left=this.left,b.object.right=this.right,b.object.top=this.top,b.object.bottom=this.bottom,b.object.near=this.near,b.object.far=this.far,null!==this.view&&(b.object.view=Object.assign({},this.view)),b}}cv.prototype.isOrthographicCamera=!0;let cw=[.125,.215,.35,.446,.526,.582],cx=new cv,cy=new ae,cz=null,cA=(1+Math.sqrt(5))/2,cB=1/cA,cC=[new aq(1,1,1),new aq(-1,1,1),new aq(1,1,-1),new aq(-1,1,-1),new aq(0,cA,cB),new aq(0,cA,-cB),new aq(cB,0,cA),new aq(-cB,0,cA),new aq(cA,cB,0),new aq(-cA,cB,0)];class cD{constructor(a){this._renderer=a,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(a,b=0,c=.1,d=100){cz=this._renderer.getRenderTarget(),this._setSize(256);let e=this._allocateTargets();return e.depthBuffer=!0,this._sceneToCubeUV(a,c,d,e),b>0&&this._blur(e,0,0,b),this._applyPMREM(e),this._cleanup(e),e}fromEquirectangular(a,b=null){return this._fromTexture(a,b)}fromCubemap(a,b=null){return this._fromTexture(a,b)}compileCubemapShader(){null===this._cubemapMaterial&&(this._cubemapMaterial=cJ(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){null===this._equirectMaterial&&(this._equirectMaterial=cI(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),null!==this._cubemapMaterial&&this._cubemapMaterial.dispose(),null!==this._equirectMaterial&&this._equirectMaterial.dispose()}_setSize(a){this._lodMax=Math.floor(Math.log2(a)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){null!==this._blurMaterial&&this._blurMaterial.dispose(),null!==this._pingPongRenderTarget&&this._pingPongRenderTarget.dispose();for(let a=0;a<this._lodPlanes.length;a++)this._lodPlanes[a].dispose()}_cleanup(a){this._renderer.setRenderTarget(cz),a.scissorTest=!1,cG(a,0,0,a.width,a.height)}_fromTexture(a,b){301===a.mapping||302===a.mapping?this._setSize(0===a.image.length?16:a.image[0].width||a.image[0].image.width):this._setSize(a.image.width/4),cz=this._renderer.getRenderTarget();let c=b||this._allocateTargets();return this._textureToCubeUV(a,c),this._applyPMREM(c),this._cleanup(c),c}_allocateTargets(){let a=3*Math.max(this._cubeSize,112),b=4*this._cubeSize-32,c={magFilter:o,minFilter:o,generateMipmaps:!1,type:1016,format:1023,encoding:3e3,depthBuffer:!1},d=cF(a,b,c);if(null===this._pingPongRenderTarget||this._pingPongRenderTarget.width!==a){null!==this._pingPongRenderTarget&&this._dispose(),this._pingPongRenderTarget=cF(a,b,c);let{_lodMax:e}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=cE(e)),this._blurMaterial=cH(e,a,b)}return d}_compileMaterial(a){let b=new b0(this._lodPlanes[0],a);this._renderer.compile(b,cx)}_sceneToCubeUV(a,b,c,d){let e=new b8(90,1,b,c),f=[1,-1,1,1,1,1],h=[1,1,1,-1,-1,-1],i=this._renderer,j=i.autoClear,k=i.toneMapping;i.getClearColor(cy),i.toneMapping=0,i.autoClear=!1;let l=new bw({name:"PMREM.Background",side:g,depthWrite:!1,depthTest:!1}),m=new b0(new b2,l),n=!1,o=a.background;o?o.isColor&&(l.color.copy(o),a.background=null,n=!0):(l.color.copy(cy),n=!0);for(let p=0;p<6;p++){let q=p%3;0===q?(e.up.set(0,f[p],0),e.lookAt(h[p],0,0)):1===q?(e.up.set(0,0,f[p]),e.lookAt(0,h[p],0)):(e.up.set(0,f[p],0),e.lookAt(0,0,h[p]));let r=this._cubeSize;cG(d,q*r,p>2?r:0,r,r),i.setRenderTarget(d),n&&i.render(m,e),i.render(a,e)}m.geometry.dispose(),m.material.dispose(),i.toneMapping=k,i.autoClear=j,a.background=o}_textureToCubeUV(a,b){let c=this._renderer,d=301===a.mapping||302===a.mapping;d?(null===this._cubemapMaterial&&(this._cubemapMaterial=cJ()),this._cubemapMaterial.uniforms.flipEnvMap.value=!1===a.isRenderTargetTexture?-1:1):null===this._equirectMaterial&&(this._equirectMaterial=cI());let e=d?this._cubemapMaterial:this._equirectMaterial,f=new b0(this._lodPlanes[0],e),g=e.uniforms;g.envMap.value=a;let h=this._cubeSize;cG(b,0,0,3*h,2*h),c.setRenderTarget(b),c.render(f,cx)}_applyPMREM(a){let b=this._renderer,c=b.autoClear;b.autoClear=!1;for(let d=1;d<this._lodPlanes.length;d++){let e=Math.sqrt(this._sigmas[d]*this._sigmas[d]-this._sigmas[d-1]*this._sigmas[d-1]),f=cC[(d-1)%cC.length];this._blur(a,d-1,d,e,f)}b.autoClear=c}_blur(a,b,c,d,e){let f=this._pingPongRenderTarget;this._halfBlur(a,f,b,c,d,"latitudinal",e),this._halfBlur(f,a,c,c,d,"longitudinal",e)}_halfBlur(a,b,c,d,e,f,g){let h=this._renderer,i=this._blurMaterial;"latitudinal"!==f&&"longitudinal"!==f&&console.error("blur direction must be either latitudinal or longitudinal!");let j=new b0(this._lodPlanes[d],i),k=i.uniforms,l=this._sizeLods[c]-1,m=isFinite(e)?Math.PI/(2*l):2*Math.PI/39,n=e/m,o=isFinite(e)?1+Math.floor(3*n):20;o>20&&console.warn(`sigmaRadians, ${e}, is too large and will clip, as it requested ${o} samples when the maximum is set to 20`);let p=[],q=0;for(let r=0;r<20;++r){let s=r/n,t=Math.exp(-s*s/2);p.push(t),0===r?q+=t:r<o&&(q+=2*t)}for(let u=0;u<p.length;u++)p[u]=p[u]/q;k.envMap.value=a.texture,k.samples.value=o,k.weights.value=p,k.latitudinal.value="latitudinal"===f,g&&(k.poleAxis.value=g);let{_lodMax:v}=this;k.dTheta.value=m,k.mipInt.value=v-c;let w=this._sizeLods[d],x=4*(this._cubeSize-w);cG(b,3*w*(d>v-4?d-v+4:0),x,3*w,2*w),h.setRenderTarget(b),h.render(j,cx)}}function cE(a){let b=[],c=[],d=[],e=a,f=a-4+1+cw.length;for(let g=0;g<f;g++){let h=Math.pow(2,e);c.push(h);let i=1/h;g>a-4?i=cw[g-a+4-1]:0===g&&(i=0),d.push(i);let j=1/(h-1),k=-j/2,l=1+j/2,m=[k,k,l,k,l,l,k,k,l,l,k,l],n=6,o=6,p=3,q=2,r=1,s=new Float32Array(p*o*n),t=new Float32Array(q*o*n),u=new Float32Array(r*o*n);for(let v=0;v<n;v++){let w=v%3*2/3-1,x=v>2?0:-1,y=[w,x,0,w+2/3,x,0,w+2/3,x+1,0,w,x,0,w+2/3,x+1,0,w,x+1,0];s.set(y,p*o*v),t.set(m,q*o*v);let z=[v,v,v,v,v,v];u.set(z,r*o*v)}let A=new bK;A.setAttribute("position",new bz(s,p)),A.setAttribute("uv",new bz(t,q)),A.setAttribute("faceIndex",new bz(u,r)),b.push(A),e>4&&e--}return{lodPlanes:b,sizeLods:c,sigmas:d}}function cF(a,b,c){let d=new am(a,b,c);return d.texture.mapping=306,d.texture.name="PMREM.cubeUv",d.scissorTest=!0,d}function cG(a,b,c,d,e){a.viewport.set(b,c,d,e),a.scissor.set(b,c,d,e)}function cH(a,b,c){let d=new Float32Array(20),e=new aq(0,1,0),f=new b6({name:"SphericalGaussianBlur",defines:{n:20,CUBEUV_TEXEL_WIDTH:1/b,CUBEUV_TEXEL_HEIGHT:1/c,CUBEUV_MAX_MIP:`${a}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:d},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:e}},vertexShader:cK(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:0,depthTest:!1,depthWrite:!1});return f}function cI(){return new b6({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:cK(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:0,depthTest:!1,depthWrite:!1})}function cJ(){return new b6({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:cK(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:0,depthTest:!1,depthWrite:!1})}function cK(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function cL(a){let b=new WeakMap,c=null;function d(a){let c=a.target;c.removeEventListener("dispose",d);let e=b.get(c);void 0!==e&&(b.delete(c),e.dispose())}return{get:function(e){if(e&&e.isTexture){let f=e.mapping,g=303===f||304===f,h=301===f||302===f;if(g||h){if(e.isRenderTargetTexture&& !0===e.needsPMREMUpdate){e.needsPMREMUpdate=!1;let i=b.get(e);return null===c&&(c=new cD(a)),i=g?c.fromEquirectangular(e,i):c.fromCubemap(e,i),b.set(e,i),i.texture}if(b.has(e))return b.get(e).texture;{let j=e.image;if(!(g&&j&&j.height>0||h&&j&&function a(b){let c=0;for(let d=0;d<6;d++)void 0!==b[d]&&c++;return 6===c}(j)))return null;{null===c&&(c=new cD(a));let k=g?c.fromEquirectangular(e):c.fromCubemap(e);return b.set(e,k),e.addEventListener("dispose",d),k.texture}}}}return e},dispose:function(){b=new WeakMap,null!==c&&(c.dispose(),c=null)}}}function cM(a){let b={};function c(c){if(void 0!==b[c])return b[c];let d;switch(c){case"WEBGL_depth_texture":d=a.getExtension("WEBGL_depth_texture")||a.getExtension("MOZ_WEBGL_depth_texture")||a.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":d=a.getExtension("EXT_texture_filter_anisotropic")||a.getExtension("MOZ_EXT_texture_filter_anisotropic")||a.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":d=a.getExtension("WEBGL_compressed_texture_s3tc")||a.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||a.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":d=a.getExtension("WEBGL_compressed_texture_pvrtc")||a.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:d=a.getExtension(c)}return b[c]=d,d}return{has:function(a){return null!==c(a)},init:function(a){a.isWebGL2?c("EXT_color_buffer_float"):(c("WEBGL_depth_texture"),c("OES_texture_float"),c("OES_texture_half_float"),c("OES_texture_half_float_linear"),c("OES_standard_derivatives"),c("OES_element_index_uint"),c("OES_vertex_array_object"),c("ANGLE_instanced_arrays")),c("OES_texture_float_linear"),c("EXT_color_buffer_half_float"),c("WEBGL_multisampled_render_to_texture")},get:function(a){let b=c(a);return null===b&&console.warn("THREE.WebGLRenderer: "+a+" extension not supported."),b}}}function cN(a,b,c,d){let e={},f=new WeakMap;function g(a){let h=a.target;for(let i in null!==h.index&&b.remove(h.index),h.attributes)b.remove(h.attributes[i]);h.removeEventListener("dispose",g),delete e[h.id];let j=f.get(h);j&&(b.remove(j),f.delete(h)),d.releaseStatesOfGeometry(h),!0===h.isInstancedBufferGeometry&&delete h._maxInstanceCount,c.memory.geometries--}function h(a){let c=[],d=a.index,e=a.attributes.position,g=0;if(null!==d){let h=d.array;g=d.version;for(let i=0,j=h.length;i<j;i+=3){let k=h[i+0],l=h[i+1],m=h[i+2];c.push(k,l,l,m,m,k)}}else{let n=e.array;g=e.version;for(let o=0,p=n.length/3-1;o<p;o+=3){let q=o+0,r=o+1,s=o+2;c.push(q,r,r,s,s,q)}}let t=new(S(c)?bB:bA)(c,1);t.version=g;let u=f.get(a);u&&b.remove(u),f.set(a,t)}return{get:function(a,b){return!0===e[b.id]||(b.addEventListener("dispose",g),e[b.id]=!0,c.memory.geometries++),b},update:function(a){let c=a.attributes;for(let d in c)b.update(c[d],34962);let e=a.morphAttributes;for(let f in e){let g=e[f];for(let h=0,i=g.length;h<i;h++)b.update(g[h],34962)}},getWireframeAttribute:function(a){let b=f.get(a);if(b){let c=a.index;null!==c&&b.version<c.version&&h(a)}else h(a);return f.get(a)}}}function cO(a,b,c,d){let e=d.isWebGL2,f;function g(a){f=a}let h,i;this.setMode=g,this.setIndex=function(a){h=a.type,i=a.bytesPerElement},this.render=function(b,d){a.drawElements(f,d,h,b*i),c.update(d,f,1)},this.renderInstances=function(d,g,j){if(0===j)return;let k,l;if(e)k=a,l="drawElementsInstanced";else if(k=b.get("ANGLE_instanced_arrays"),l="drawElementsInstancedANGLE",null===k){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}k[l](f,g,h,d*i,j),c.update(g,f,j)}}function cP(a){let b={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:b,programs:null,autoReset:!0,reset:function(){b.frame++,b.calls=0,b.triangles=0,b.points=0,b.lines=0},update:function(a,c,d){switch(b.calls++,c){case 4:b.triangles+=d*(a/3);break;case 1:b.lines+=d*(a/2);break;case 3:b.lines+=d*(a-1);break;case 2:b.lines+=d*a;break;case 0:b.points+=d*a;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",c)}}}}function cQ(a,b){return a[0]-b[0]}function cR(a,b){return Math.abs(b[1])-Math.abs(a[1])}function cS(a,b){let c=1,d=b.isInterleavedBufferAttribute?b.data.array:b.array;d instanceof Int8Array?c=127:d instanceof Int16Array?c=32767:d instanceof Int32Array?c=2147483647:console.error("THREE.WebGLMorphtargets: Unsupported morph attribute data type: ",d),a.divideScalar(c)}function cT(a,b,c){let d={},e=new Float32Array(8),f=new WeakMap,g=new al,h=[];for(let i=0;i<8;i++)h[i]=[i,0];return{update:function(i,j,k,l){let m=i.morphTargetInfluences;if(!0===b.isWebGL2){let n=j.morphAttributes.position||j.morphAttributes.normal||j.morphAttributes.color,o=void 0!==n?n.length:0,p=f.get(j);if(void 0===p||p.count!==o){void 0!==p&&p.texture.dispose();let q=void 0!==j.morphAttributes.position,r=void 0!==j.morphAttributes.normal,s=void 0!==j.morphAttributes.color,t=j.morphAttributes.position||[],u=j.morphAttributes.normal||[],v=j.morphAttributes.color||[],w=0;!0===q&&(w=1),!0===r&&(w=2),!0===s&&(w=3);let x=j.attributes.position.count*w,y=1;x>b.maxTextureSize&&(y=Math.ceil(x/b.maxTextureSize),x=b.maxTextureSize);let z=new Float32Array(x*y*4*o),A=new an(z,x,y,o);A.type=1015,A.needsUpdate=!0;let B=4*w;for(let C=0;C<o;C++){let D=t[C],E=u[C],F=v[C],G=x*y*4*C;for(let H=0;H<D.count;H++){let I=H*B;!0===q&&(g.fromBufferAttribute(D,H),!0===D.normalized&&cS(g,D),z[G+I+0]=g.x,z[G+I+1]=g.y,z[G+I+2]=g.z,z[G+I+3]=0),!0===r&&(g.fromBufferAttribute(E,H),!0===E.normalized&&cS(g,E),z[G+I+4]=g.x,z[G+I+5]=g.y,z[G+I+6]=g.z,z[G+I+7]=0),!0===s&&(g.fromBufferAttribute(F,H),!0===F.normalized&&cS(g,F),z[G+I+8]=g.x,z[G+I+9]=g.y,z[G+I+10]=g.z,z[G+I+11]=4===F.itemSize?g.w:1)}}function J(){A.dispose(),f.delete(j),j.removeEventListener("dispose",J)}p={count:o,texture:A,size:new Q(x,y)},f.set(j,p),j.addEventListener("dispose",J)}let K=0;for(let L=0;L<m.length;L++)K+=m[L];let M=j.morphTargetsRelative?1:1-K;l.getUniforms().setValue(a,"morphTargetBaseInfluence",M),l.getUniforms().setValue(a,"morphTargetInfluences",m),l.getUniforms().setValue(a,"morphTargetsTexture",p.texture,c),l.getUniforms().setValue(a,"morphTargetsTextureSize",p.size)}else{let N=void 0===m?0:m.length,O=d[j.id];if(void 0===O||O.length!==N){O=[];for(let P=0;P<N;P++)O[P]=[P,0];d[j.id]=O}for(let R=0;R<N;R++){let S=O[R];S[0]=R,S[1]=m[R]}O.sort(cR);for(let T=0;T<8;T++)T<N&&O[T][1]?(h[T][0]=O[T][0],h[T][1]=O[T][1]):(h[T][0]=Number.MAX_SAFE_INTEGER,h[T][1]=0);h.sort(cQ);let U=j.morphAttributes.position,V=j.morphAttributes.normal,W=0;for(let X=0;X<8;X++){let Y=h[X],Z=Y[0],$=Y[1];Z!==Number.MAX_SAFE_INTEGER&&$?(U&&j.getAttribute("morphTarget"+X)!==U[Z]&&j.setAttribute("morphTarget"+X,U[Z]),V&&j.getAttribute("morphNormal"+X)!==V[Z]&&j.setAttribute("morphNormal"+X,V[Z]),e[X]=$,W+=$):(U&& !0===j.hasAttribute("morphTarget"+X)&&j.deleteAttribute("morphTarget"+X),V&& !0===j.hasAttribute("morphNormal"+X)&&j.deleteAttribute("morphNormal"+X),e[X]=0)}let _=j.morphTargetsRelative?1:1-W;l.getUniforms().setValue(a,"morphTargetBaseInfluence",_),l.getUniforms().setValue(a,"morphTargetInfluences",e)}}}}function cU(a,b,c,d){let e=new WeakMap;function f(a){let b=a.target;b.removeEventListener("dispose",f),c.remove(b.instanceMatrix),null!==b.instanceColor&&c.remove(b.instanceColor)}return{update:function(a){let g=d.render.frame,h=a.geometry,i=b.get(a,h);return e.get(i)!==g&&(b.update(i),e.set(i,g)),a.isInstancedMesh&&(!1===a.hasEventListener("dispose",f)&&a.addEventListener("dispose",f),c.update(a.instanceMatrix,34962),null!==a.instanceColor&&c.update(a.instanceColor,34962)),i},dispose:function(){e=new WeakMap}}}let cV=new ak,cW=new an,cX=new ao,cY=new ca,cZ=[],c$=[],c_=new Float32Array(16),c0=new Float32Array(9),c1=new Float32Array(4);function c2(a,b,c){let d=a[0];if(d<=0||d>0)return a;let e=b*c,f=cZ[e];if(void 0===f&&(f=new Float32Array(e),cZ[e]=f),0!==b){d.toArray(f,0);for(let g=1,h=0;g!==b;++g)h+=c,a[g].toArray(f,h)}return f}function c3(a,b){if(a.length!==b.length)return!1;for(let c=0,d=a.length;c<d;c++)if(a[c]!==b[c])return!1;return!0}function c4(a,b){for(let c=0,d=b.length;c<d;c++)a[c]=b[c]}function c5(a,b){let c=c$[b];void 0===c&&(c=new Int32Array(b),c$[b]=c);for(let d=0;d!==b;++d)c[d]=a.allocateTextureUnit();return c}function c6(a,b){let c=this.cache;c[0]!==b&&(a.uniform1f(this.addr,b),c[0]=b)}function c7(a,b){let c=this.cache;if(void 0!==b.x)(c[0]!==b.x||c[1]!==b.y)&&(a.uniform2f(this.addr,b.x,b.y),c[0]=b.x,c[1]=b.y);else{if(c3(c,b))return;a.uniform2fv(this.addr,b),c4(c,b)}}function c8(a,b){let c=this.cache;if(void 0!==b.x)(c[0]!==b.x||c[1]!==b.y||c[2]!==b.z)&&(a.uniform3f(this.addr,b.x,b.y,b.z),c[0]=b.x,c[1]=b.y,c[2]=b.z);else if(void 0!==b.r)(c[0]!==b.r||c[1]!==b.g||c[2]!==b.b)&&(a.uniform3f(this.addr,b.r,b.g,b.b),c[0]=b.r,c[1]=b.g,c[2]=b.b);else{if(c3(c,b))return;a.uniform3fv(this.addr,b),c4(c,b)}}function c9(a,b){let c=this.cache;if(void 0!==b.x)(c[0]!==b.x||c[1]!==b.y||c[2]!==b.z||c[3]!==b.w)&&(a.uniform4f(this.addr,b.x,b.y,b.z,b.w),c[0]=b.x,c[1]=b.y,c[2]=b.z,c[3]=b.w);else{if(c3(c,b))return;a.uniform4fv(this.addr,b),c4(c,b)}}function da(a,b){let c=this.cache,d=b.elements;if(void 0===d){if(c3(c,b))return;a.uniformMatrix2fv(this.addr,!1,b),c4(c,b)}else{if(c3(c,d))return;c1.set(d),a.uniformMatrix2fv(this.addr,!1,c1),c4(c,d)}}function db(a,b){let c=this.cache,d=b.elements;if(void 0===d){if(c3(c,b))return;a.uniformMatrix3fv(this.addr,!1,b),c4(c,b)}else{if(c3(c,d))return;c0.set(d),a.uniformMatrix3fv(this.addr,!1,c0),c4(c,d)}}function dc(a,b){let c=this.cache,d=b.elements;if(void 0===d){if(c3(c,b))return;a.uniformMatrix4fv(this.addr,!1,b),c4(c,b)}else{if(c3(c,d))return;c_.set(d),a.uniformMatrix4fv(this.addr,!1,c_),c4(c,d)}}function dd(a,b){let c=this.cache;c[0]!==b&&(a.uniform1i(this.addr,b),c[0]=b)}function de(a,b){let c=this.cache;c3(c,b)||(a.uniform2iv(this.addr,b),c4(c,b))}function df(a,b){let c=this.cache;c3(c,b)||(a.uniform3iv(this.addr,b),c4(c,b))}function dg(a,b){let c=this.cache;c3(c,b)||(a.uniform4iv(this.addr,b),c4(c,b))}function dh(a,b){let c=this.cache;c[0]!==b&&(a.uniform1ui(this.addr,b),c[0]=b)}function di(a,b){let c=this.cache;c3(c,b)||(a.uniform2uiv(this.addr,b),c4(c,b))}function dj(a,b){let c=this.cache;c3(c,b)||(a.uniform3uiv(this.addr,b),c4(c,b))}function dk(a,b){let c=this.cache;c3(c,b)||(a.uniform4uiv(this.addr,b),c4(c,b))}function dl(a,b,c){let d=this.cache,e=c.allocateTextureUnit();d[0]!==e&&(a.uniform1i(this.addr,e),d[0]=e),c.setTexture2D(b||cV,e)}function dm(a,b,c){let d=this.cache,e=c.allocateTextureUnit();d[0]!==e&&(a.uniform1i(this.addr,e),d[0]=e),c.setTexture3D(b||cX,e)}function dn(a,b,c){let d=this.cache,e=c.allocateTextureUnit();d[0]!==e&&(a.uniform1i(this.addr,e),d[0]=e),c.setTextureCube(b||cY,e)}function dp(a,b,c){let d=this.cache,e=c.allocateTextureUnit();d[0]!==e&&(a.uniform1i(this.addr,e),d[0]=e),c.setTexture2DArray(b||cW,e)}function dq(a,b){a.uniform1fv(this.addr,b)}function dr(a,b){let c=c2(b,this.size,2);a.uniform2fv(this.addr,c)}function ds(a,b){let c=c2(b,this.size,3);a.uniform3fv(this.addr,c)}function dt(a,b){let c=c2(b,this.size,4);a.uniform4fv(this.addr,c)}function du(a,b){let c=c2(b,this.size,4);a.uniformMatrix2fv(this.addr,!1,c)}function dv(a,b){let c=c2(b,this.size,9);a.uniformMatrix3fv(this.addr,!1,c)}function dw(a,b){let c=c2(b,this.size,16);a.uniformMatrix4fv(this.addr,!1,c)}function dx(a,b){a.uniform1iv(this.addr,b)}function dy(a,b){a.uniform2iv(this.addr,b)}function dz(a,b){a.uniform3iv(this.addr,b)}function dA(a,b){a.uniform4iv(this.addr,b)}function dB(a,b){a.uniform1uiv(this.addr,b)}function dC(a,b){a.uniform2uiv(this.addr,b)}function dD(a,b){a.uniform3uiv(this.addr,b)}function dE(a,b){a.uniform4uiv(this.addr,b)}function dF(a,b,c){let d=b.length,e=c5(c,d);a.uniform1iv(this.addr,e);for(let f=0;f!==d;++f)c.setTexture2D(b[f]||cV,e[f])}function dG(a,b,c){let d=b.length,e=c5(c,d);a.uniform1iv(this.addr,e);for(let f=0;f!==d;++f)c.setTexture3D(b[f]||cX,e[f])}function dH(a,b,c){let d=b.length,e=c5(c,d);a.uniform1iv(this.addr,e);for(let f=0;f!==d;++f)c.setTextureCube(b[f]||cY,e[f])}function dI(a,b,c){let d=b.length,e=c5(c,d);a.uniform1iv(this.addr,e);for(let f=0;f!==d;++f)c.setTexture2DArray(b[f]||cW,e[f])}function dJ(a,b,c){this.id=a,this.addr=c,this.cache=[],this.setValue=function(a){switch(a){case 5126:return c6;case 35664:return c7;case 35665:return c8;case 35666:return c9;case 35674:return da;case 35675:return db;case 35676:return dc;case 5124:case 35670:return dd;case 35667:case 35671:return de;case 35668:case 35672:return df;case 35669:case 35673:return dg;case 5125:return dh;case 36294:return di;case 36295:return dj;case 36296:return dk;case 35678:case 36198:case 36298:case 36306:case 35682:return dl;case 35679:case 36299:case 36307:return dm;case 35680:case 36300:case 36308:case 36293:return dn;case 36289:case 36303:case 36311:case 36292:return dp}}(b.type)}function dK(a,b,c){this.id=a,this.addr=c,this.cache=[],this.size=b.size,this.setValue=function(a){switch(a){case 5126:return dq;case 35664:return dr;case 35665:return ds;case 35666:return dt;case 35674:return du;case 35675:return dv;case 35676:return dw;case 5124:case 35670:return dx;case 35667:case 35671:return dy;case 35668:case 35672:return dz;case 35669:case 35673:return dA;case 5125:return dB;case 36294:return dC;case 36295:return dD;case 36296:return dE;case 35678:case 36198:case 36298:case 36306:case 35682:return dF;case 35679:case 36299:case 36307:return dG;case 35680:case 36300:case 36308:case 36293:return dH;case 36289:case 36303:case 36311:case 36292:return dI}}(b.type)}function dL(a){this.id=a,this.seq=[],this.map={}}dK.prototype.updateCache=function(a){let b=this.cache;a instanceof Float32Array&&b.length!==a.length&&(this.cache=new Float32Array(a.length)),c4(b,a)},dL.prototype.setValue=function(a,b,c){let d=this.seq;for(let e=0,f=d.length;e!==f;++e){let g=d[e];g.setValue(a,b[g.id],c)}};let dM=/(\w+)(\])?(\[|\.)?/g;function dN(a,b){a.seq.push(b),a.map[b.id]=b}function dO(a,b,c){let d=a.name,e=d.length;for(dM.lastIndex=0;;){let f=dM.exec(d),g=dM.lastIndex,h=f[1],i="]"===f[2],j=f[3];if(i&&(h|=0),void 0===j||"["===j&&g+2===e){dN(c,void 0===j?new dJ(h,a,b):new dK(h,a,b));break}{let k=c.map,l=k[h];void 0===l&&(l=new dL(h),dN(c,l)),c=l}}}function dP(a,b){this.seq=[],this.map={};let c=a.getProgramParameter(b,35718);for(let d=0;d<c;++d){let e=a.getActiveUniform(b,d),f=a.getUniformLocation(b,e.name);dO(e,f,this)}}function dQ(a,b,c){let d=a.createShader(b);return a.shaderSource(d,c),a.compileShader(d),d}dP.prototype.setValue=function(a,b,c,d){let e=this.map[b];void 0!==e&&e.setValue(a,c,d)},dP.prototype.setOptional=function(a,b,c){let d=b[c];void 0!==d&&this.setValue(a,c,d)},dP.upload=function(a,b,c,d){for(let e=0,f=b.length;e!==f;++e){let g=b[e],h=c[g.id];!1!==h.needsUpdate&&g.setValue(a,h.value,d)}},dP.seqWithValue=function(a,b){let c=[];for(let d=0,e=a.length;d!==e;++d){let f=a[d];f.id in b&&c.push(f)}return c};let dR=0;function dS(a,b,c){let d=a.getShaderParameter(b,35713),e=a.getShaderInfoLog(b).trim();if(d&&""===e)return"";let f=parseInt(/ERROR: 0:(\d+)/.exec(e)[1]);return c.toUpperCase()+"\n\n"+e+"\n\n"+function(a,b){let c=a.split("\n"),d=[],e=Math.max(b-6,0),f=Math.min(b+6,c.length);for(let g=e;g<f;g++)d.push(g+1+": "+c[g]);return d.join("\n")}(a.getShaderSource(b),f)}function dT(a){return""!==a}function dU(a,b){return a.replace(/NUM_DIR_LIGHTS/g,b.numDirLights).replace(/NUM_SPOT_LIGHTS/g,b.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,b.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,b.numPointLights).replace(/NUM_HEMI_LIGHTS/g,b.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,b.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,b.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,b.numPointLightShadows)}function dV(a,b){return a.replace(/NUM_CLIPPING_PLANES/g,b.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,b.numClippingPlanes-b.numClipIntersection)}let dW=/^[ \t]*#include +<([\w\d./]+)>/gm;function dX(a){return a.replace(dW,dY)}function dY(a,b){let c=cm[b];if(void 0===c)throw Error("Can not resolve #include <"+b+">");return dX(c)}let dZ=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,d$=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function d_(a){return a.replace(d$,d1).replace(dZ,d0)}function d0(a,b,c,d){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),d1(a,b,c,d)}function d1(a,b,c,d){let e="";for(let f=parseInt(b);f<parseInt(c);f++)e+=d.replace(/\[\s*i\s*\]/g,"[ "+f+" ]").replace(/UNROLLED_LOOP_INDEX/g,f);return e}function d2(a){let b="precision "+a.precision+" float;\nprecision "+a.precision+" int;";return"highp"===a.precision?b+="\n#define HIGH_PRECISION":"mediump"===a.precision?b+="\n#define MEDIUM_PRECISION":"lowp"===a.precision&&(b+="\n#define LOW_PRECISION"),b}function d3(a,b,c,d){var e,f;let g=a.getContext(),h=c.defines,i=c.vertexShader,j=c.fragmentShader,k,l=(k="SHADOWMAP_TYPE_BASIC",1===(e=c).shadowMapType?k="SHADOWMAP_TYPE_PCF":2===e.shadowMapType?k="SHADOWMAP_TYPE_PCF_SOFT":3===e.shadowMapType&&(k="SHADOWMAP_TYPE_VSM"),k),m=function(a){let b="ENVMAP_TYPE_CUBE";if(a.envMap)switch(a.envMapMode){case 301:case 302:b="ENVMAP_TYPE_CUBE";break;case 306:b="ENVMAP_TYPE_CUBE_UV"}return b}(c),n,o=(n="ENVMAP_MODE_REFLECTION",(f=c).envMap&&302===f.envMapMode&&(n="ENVMAP_MODE_REFRACTION"),n),p=function(a){let b="ENVMAP_BLENDING_NONE";if(a.envMap)switch(a.combine){case 0:b="ENVMAP_BLENDING_MULTIPLY";break;case 1:b="ENVMAP_BLENDING_MIX";break;case 2:b="ENVMAP_BLENDING_ADD"}return b}(c),q=function(a){let b=a.envMapCubeUVHeight;if(null===b)return null;let c=Math.log2(b/32+1)+3,d=1/b,e=1/(3*Math.max(Math.pow(2,c),112));return{texelWidth:e,texelHeight:d,maxMip:c}}(c),r=c.isWebGL2?"":function(a){let b=[a.extensionDerivatives||a.envMapCubeUVHeight||a.bumpMap||a.tangentSpaceNormalMap||a.clearcoatNormalMap||a.flatShading||"physical"===a.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(a.extensionFragDepth||a.logarithmicDepthBuffer)&&a.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",a.extensionDrawBuffers&&a.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(a.extensionShaderTextureLOD||a.envMap||a.transmission)&&a.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""];return b.filter(dT).join("\n")}(c),s=function(a){let b=[];for(let c in a){let d=a[c];!1!==d&&b.push("#define "+c+" "+d)}return b.join("\n")}(h),t=g.createProgram(),u,w,x=c.glslVersion?"#version "+c.glslVersion+"\n":"";c.isRawShaderMaterial?((u=[s].filter(dT).join("\n")).length>0&&(u+="\n"),(w=[r,s].filter(dT).join("\n")).length>0&&(w+="\n")):(u=[d2(c),"#define SHADER_NAME "+c.shaderName,s,c.instancing?"#define USE_INSTANCING":"",c.instancingColor?"#define USE_INSTANCING_COLOR":"",c.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define MAX_BONES "+c.maxBones,c.useFog&&c.fog?"#define USE_FOG":"",c.useFog&&c.fogExp2?"#define FOG_EXP2":"",c.map?"#define USE_MAP":"",c.envMap?"#define USE_ENVMAP":"",c.envMap?"#define "+o:"",c.lightMap?"#define USE_LIGHTMAP":"",c.aoMap?"#define USE_AOMAP":"",c.emissiveMap?"#define USE_EMISSIVEMAP":"",c.bumpMap?"#define USE_BUMPMAP":"",c.normalMap?"#define USE_NORMALMAP":"",c.normalMap&&c.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",c.normalMap&&c.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",c.clearcoatMap?"#define USE_CLEARCOATMAP":"",c.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",c.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",c.displacementMap&&c.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",c.specularMap?"#define USE_SPECULARMAP":"",c.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",c.specularColorMap?"#define USE_SPECULARCOLORMAP":"",c.roughnessMap?"#define USE_ROUGHNESSMAP":"",c.metalnessMap?"#define USE_METALNESSMAP":"",c.alphaMap?"#define USE_ALPHAMAP":"",c.transmission?"#define USE_TRANSMISSION":"",c.transmissionMap?"#define USE_TRANSMISSIONMAP":"",c.thicknessMap?"#define USE_THICKNESSMAP":"",c.sheenColorMap?"#define USE_SHEENCOLORMAP":"",c.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",c.vertexTangents?"#define USE_TANGENT":"",c.vertexColors?"#define USE_COLOR":"",c.vertexAlphas?"#define USE_COLOR_ALPHA":"",c.vertexUvs?"#define USE_UV":"",c.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",c.flatShading?"#define FLAT_SHADED":"",c.skinning?"#define USE_SKINNING":"",c.useVertexTexture?"#define BONE_TEXTURE":"",c.morphTargets?"#define USE_MORPHTARGETS":"",c.morphNormals&& !1===c.flatShading?"#define USE_MORPHNORMALS":"",c.morphColors&&c.isWebGL2?"#define USE_MORPHCOLORS":"",c.morphTargetsCount>0&&c.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",c.morphTargetsCount>0&&c.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+c.morphTextureStride:"",c.morphTargetsCount>0&&c.isWebGL2?"#define MORPHTARGETS_COUNT "+c.morphTargetsCount:"",c.doubleSided?"#define DOUBLE_SIDED":"",c.flipSided?"#define FLIP_SIDED":"",c.shadowMapEnabled?"#define USE_SHADOWMAP":"",c.shadowMapEnabled?"#define "+l:"",c.sizeAttenuation?"#define USE_SIZEATTENUATION":"",c.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",c.logarithmicDepthBuffer&&c.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif","\n"].filter(dT).join("\n"),w=[r,d2(c),"#define SHADER_NAME "+c.shaderName,s,c.useFog&&c.fog?"#define USE_FOG":"",c.useFog&&c.fogExp2?"#define FOG_EXP2":"",c.map?"#define USE_MAP":"",c.matcap?"#define USE_MATCAP":"",c.envMap?"#define USE_ENVMAP":"",c.envMap?"#define "+m:"",c.envMap?"#define "+o:"",c.envMap?"#define "+p:"",q?"#define CUBEUV_TEXEL_WIDTH "+q.texelWidth:"",q?"#define CUBEUV_TEXEL_HEIGHT "+q.texelHeight:"",q?"#define CUBEUV_MAX_MIP "+q.maxMip+".0":"",c.lightMap?"#define USE_LIGHTMAP":"",c.aoMap?"#define USE_AOMAP":"",c.emissiveMap?"#define USE_EMISSIVEMAP":"",c.bumpMap?"#define USE_BUMPMAP":"",c.normalMap?"#define USE_NORMALMAP":"",c.normalMap&&c.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",c.normalMap&&c.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",c.clearcoat?"#define USE_CLEARCOAT":"",c.clearcoatMap?"#define USE_CLEARCOATMAP":"",c.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",c.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",c.specularMap?"#define USE_SPECULARMAP":"",c.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",c.specularColorMap?"#define USE_SPECULARCOLORMAP":"",c.roughnessMap?"#define USE_ROUGHNESSMAP":"",c.metalnessMap?"#define USE_METALNESSMAP":"",c.alphaMap?"#define USE_ALPHAMAP":"",c.alphaTest?"#define USE_ALPHATEST":"",c.sheen?"#define USE_SHEEN":"",c.sheenColorMap?"#define USE_SHEENCOLORMAP":"",c.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",c.transmission?"#define USE_TRANSMISSION":"",c.transmissionMap?"#define USE_TRANSMISSIONMAP":"",c.thicknessMap?"#define USE_THICKNESSMAP":"",c.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",c.vertexTangents?"#define USE_TANGENT":"",c.vertexColors||c.instancingColor?"#define USE_COLOR":"",c.vertexAlphas?"#define USE_COLOR_ALPHA":"",c.vertexUvs?"#define USE_UV":"",c.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",c.gradientMap?"#define USE_GRADIENTMAP":"",c.flatShading?"#define FLAT_SHADED":"",c.doubleSided?"#define DOUBLE_SIDED":"",c.flipSided?"#define FLIP_SIDED":"",c.shadowMapEnabled?"#define USE_SHADOWMAP":"",c.shadowMapEnabled?"#define "+l:"",c.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",c.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",c.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",c.logarithmicDepthBuffer&&c.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",0!==c.toneMapping?"#define TONE_MAPPING":"",0!==c.toneMapping?cm.tonemapping_pars_fragment:"",0!==c.toneMapping?function(a,b){let c;switch(b){case 1:c="Linear";break;case 2:c="Reinhard";break;case 3:c="OptimizedCineon";break;case 4:c="ACESFilmic";break;case 5:c="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",b),c="Linear"}return"vec3 "+a+"( vec3 color ) { return "+c+"ToneMapping( color ); }"}("toneMapping",c.toneMapping):"",c.dithering?"#define DITHERING":"",c.opaque?"#define OPAQUE":"",cm.encodings_pars_fragment,function(a,b){let c=function(a){switch(a){case 3e3:return["Linear","( value )"];case v:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",a),["Linear","( value )"]}}(b);return"vec4 "+a+"( vec4 value ) { return LinearTo"+c[0]+c[1]+"; }"}("linearToOutputTexel",c.outputEncoding),c.depthPacking?"#define DEPTH_PACKING "+c.depthPacking:"","\n"].filter(dT).join("\n")),i=dX(i),i=dU(i,c),i=dV(i,c),j=dX(j),j=dU(j,c),j=dV(j,c),i=d_(i),j=d_(j),c.isWebGL2&& !0!==c.isRawShaderMaterial&&(x="#version 300 es\n",u="precision mediump sampler2DArray;\n#define attribute in\n#define varying out\n#define texture2D texture\n"+u,w=["#define varying in",c.glslVersion===z?"":"layout(location = 0) out highp vec4 pc_fragColor;",c.glslVersion===z?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+w);let y=x+u+i,A=x+w+j,B=dQ(g,35633,y),C=dQ(g,35632,A);if(g.attachShader(t,B),g.attachShader(t,C),void 0!==c.index0AttributeName?g.bindAttribLocation(t,0,c.index0AttributeName):!0===c.morphTargets&&g.bindAttribLocation(t,0,"position"),g.linkProgram(t),a.debug.checkShaderErrors){let D=g.getProgramInfoLog(t).trim(),E=g.getShaderInfoLog(B).trim(),F=g.getShaderInfoLog(C).trim(),G=!0,H=!0;if(!1===g.getProgramParameter(t,35714)){G=!1;let I=dS(g,B,"vertex"),J=dS(g,C,"fragment");console.error("THREE.WebGLProgram: Shader Error "+g.getError()+" - VALIDATE_STATUS "+g.getProgramParameter(t,35715)+"\n\nProgram Info Log: "+D+"\n"+I+"\n"+J)}else""!==D?console.warn("THREE.WebGLProgram: Program Info Log:",D):(""===E||""===F)&&(H=!1);H&&(this.diagnostics={runnable:G,programLog:D,vertexShader:{log:E,prefix:u},fragmentShader:{log:F,prefix:w}})}g.deleteShader(B),g.deleteShader(C);let K;this.getUniforms=function(){return void 0===K&&(K=new dP(g,t)),K};let L;return this.getAttributes=function(){return void 0===L&&(L=function(a,b){let c={},d=a.getProgramParameter(b,35721);for(let e=0;e<d;e++){let f=a.getActiveAttrib(b,e),g=f.name,h=1;35674===f.type&&(h=2),35675===f.type&&(h=3),35676===f.type&&(h=4),c[g]={type:f.type,location:a.getAttribLocation(b,g),locationSize:h}}return c}(g,t)),L},this.destroy=function(){d.releaseStatesOfProgram(this),g.deleteProgram(t),this.program=void 0},this.name=c.shaderName,this.id=dR++,this.cacheKey=b,this.usedTimes=1,this.program=t,this.vertexShader=B,this.fragmentShader=C,this}let d4=0;class d5{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(a){let b=a.vertexShader,c=a.fragmentShader,d=this._getShaderStage(b),e=this._getShaderStage(c),f=this._getShaderCacheForMaterial(a);return!1===f.has(d)&&(f.add(d),d.usedTimes++),!1===f.has(e)&&(f.add(e),e.usedTimes++),this}remove(a){let b=this.materialCache.get(a);for(let c of b)c.usedTimes--,0===c.usedTimes&&this.shaderCache.delete(c.code);return this.materialCache.delete(a),this}getVertexShaderID(a){return this._getShaderStage(a.vertexShader).id}getFragmentShaderID(a){return this._getShaderStage(a.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(a){let b=this.materialCache;return!1===b.has(a)&&b.set(a,new Set),b.get(a)}_getShaderStage(a){let b=this.shaderCache;if(!1===b.has(a)){let c=new d6(a);b.set(a,c)}return b.get(a)}}class d6{constructor(a){this.id=d4++,this.code=a,this.usedTimes=0}}function d7(a,b,c,d,e,f,i){let j=new a4,k=new d5,l=[],m=e.isWebGL2,n=e.logarithmicDepthBuffer,o=e.floatVertexTextures,p=e.maxVertexUniforms,q=e.vertexTextures,r=e.precision,s={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};return{getParameters:function(f,j,l,t,u){let x=t.fog,y=u.geometry,z=f.isMeshStandardMaterial?t.environment:null,A=(f.isMeshStandardMaterial?c:b).get(f.envMap||z),B=A&&306===A.mapping?A.image.height:null,C=s[f.type],D=u.isSkinnedMesh?function(a){let b=a.skeleton,c=b.bones;if(o)return 1024;{let d=p,e=Math.floor((d-20)/4),f=Math.min(e,c.length);return f<c.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+c.length+" bones. This GPU supports "+f+"."),0):f}}(u):0;null!==f.precision&&(r=e.getMaxPrecision(f.precision))!==f.precision&&console.warn("THREE.WebGLProgram.getParameters:",f.precision,"not supported, using",r,"instead.");let E=y.morphAttributes.position||y.morphAttributes.normal||y.morphAttributes.color,F=void 0!==E?E.length:0,G=0;void 0!==y.morphAttributes.position&&(G=1),void 0!==y.morphAttributes.normal&&(G=2),void 0!==y.morphAttributes.color&&(G=3);let H,I,J,K;if(C){let L=co[C];H=L.vertexShader,I=L.fragmentShader}else H=f.vertexShader,I=f.fragmentShader,k.update(f),J=k.getVertexShaderID(f),K=k.getFragmentShaderID(f);let M=a.getRenderTarget(),N=f.alphaTest>0,O=f.clearcoat>0,P={isWebGL2:m,shaderID:C,shaderName:f.type,vertexShader:H,fragmentShader:I,defines:f.defines,customVertexShaderID:J,customFragmentShaderID:K,isRawShaderMaterial:!0===f.isRawShaderMaterial,glslVersion:f.glslVersion,precision:r,instancing:!0===u.isInstancedMesh,instancingColor:!0===u.isInstancedMesh&&null!==u.instanceColor,supportsVertexTextures:q,outputEncoding:null===M?a.outputEncoding:!0===M.isXRRenderTarget?M.texture.encoding:3e3,map:!!f.map,matcap:!!f.matcap,envMap:!!A,envMapMode:A&&A.mapping,envMapCubeUVHeight:B,lightMap:!!f.lightMap,aoMap:!!f.aoMap,emissiveMap:!!f.emissiveMap,bumpMap:!!f.bumpMap,normalMap:!!f.normalMap,objectSpaceNormalMap:1===f.normalMapType,tangentSpaceNormalMap:f.normalMapType===w,decodeVideoTexture:!!f.map&& !0===f.map.isVideoTexture&&f.map.encoding===v,clearcoat:O,clearcoatMap:O&&!!f.clearcoatMap,clearcoatRoughnessMap:O&&!!f.clearcoatRoughnessMap,clearcoatNormalMap:O&&!!f.clearcoatNormalMap,displacementMap:!!f.displacementMap,roughnessMap:!!f.roughnessMap,metalnessMap:!!f.metalnessMap,specularMap:!!f.specularMap,specularIntensityMap:!!f.specularIntensityMap,specularColorMap:!!f.specularColorMap,opaque:!1===f.transparent&&1===f.blending,alphaMap:!!f.alphaMap,alphaTest:N,gradientMap:!!f.gradientMap,sheen:f.sheen>0,sheenColorMap:!!f.sheenColorMap,sheenRoughnessMap:!!f.sheenRoughnessMap,transmission:f.transmission>0,transmissionMap:!!f.transmissionMap,thicknessMap:!!f.thicknessMap,combine:f.combine,vertexTangents:!!f.normalMap&&!!y.attributes.tangent,vertexColors:f.vertexColors,vertexAlphas:!0===f.vertexColors&&!!y.attributes.color&&4===y.attributes.color.itemSize,vertexUvs:!!f.map||!!f.bumpMap||!!f.normalMap||!!f.specularMap||!!f.alphaMap||!!f.emissiveMap||!!f.roughnessMap||!!f.metalnessMap||!!f.clearcoatMap||!!f.clearcoatRoughnessMap||!!f.clearcoatNormalMap||!!f.displacementMap||!!f.transmissionMap||!!f.thicknessMap||!!f.specularIntensityMap||!!f.specularColorMap||!!f.sheenColorMap||!!f.sheenRoughnessMap,uvsVertexOnly:!(f.map||f.bumpMap||f.normalMap||f.specularMap||f.alphaMap||f.emissiveMap||f.roughnessMap||f.metalnessMap||f.clearcoatNormalMap||f.transmission>0||f.transmissionMap||f.thicknessMap||f.specularIntensityMap||f.specularColorMap||f.sheen>0||f.sheenColorMap||f.sheenRoughnessMap)&&!!f.displacementMap,fog:!!x,useFog:f.fog,fogExp2:x&&x.isFogExp2,flatShading:!!f.flatShading,sizeAttenuation:f.sizeAttenuation,logarithmicDepthBuffer:n,skinning:!0===u.isSkinnedMesh&&D>0,maxBones:D,useVertexTexture:o,morphTargets:void 0!==y.morphAttributes.position,morphNormals:void 0!==y.morphAttributes.normal,morphColors:void 0!==y.morphAttributes.color,morphTargetsCount:F,morphTextureStride:G,numDirLights:j.directional.length,numPointLights:j.point.length,numSpotLights:j.spot.length,numRectAreaLights:j.rectArea.length,numHemiLights:j.hemi.length,numDirLightShadows:j.directionalShadowMap.length,numPointLightShadows:j.pointShadowMap.length,numSpotLightShadows:j.spotShadowMap.length,numClippingPlanes:i.numPlanes,numClipIntersection:i.numIntersection,dithering:f.dithering,shadowMapEnabled:a.shadowMap.enabled&&l.length>0,shadowMapType:a.shadowMap.type,toneMapping:f.toneMapped?a.toneMapping:0,physicallyCorrectLights:a.physicallyCorrectLights,premultipliedAlpha:f.premultipliedAlpha,doubleSided:f.side===h,flipSided:f.side===g,depthPacking:void 0!==f.depthPacking&&f.depthPacking,index0AttributeName:f.index0AttributeName,extensionDerivatives:f.extensions&&f.extensions.derivatives,extensionFragDepth:f.extensions&&f.extensions.fragDepth,extensionDrawBuffers:f.extensions&&f.extensions.drawBuffers,extensionShaderTextureLOD:f.extensions&&f.extensions.shaderTextureLOD,rendererExtensionFragDepth:m||d.has("EXT_frag_depth"),rendererExtensionDrawBuffers:m||d.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:m||d.has("EXT_shader_texture_lod"),customProgramCacheKey:f.customProgramCacheKey()};return P},getProgramCacheKey:function(b){var c,d,e,f;let g=[];if(b.shaderID?g.push(b.shaderID):(g.push(b.customVertexShaderID),g.push(b.customFragmentShaderID)),void 0!==b.defines)for(let h in b.defines)g.push(h),g.push(b.defines[h]);return!1===b.isRawShaderMaterial&&(c=g,d=b,c.push(d.precision),c.push(d.outputEncoding),c.push(d.envMapMode),c.push(d.envMapCubeUVHeight),c.push(d.combine),c.push(d.vertexUvs),c.push(d.fogExp2),c.push(d.sizeAttenuation),c.push(d.maxBones),c.push(d.morphTargetsCount),c.push(d.morphAttributeCount),c.push(d.numDirLights),c.push(d.numPointLights),c.push(d.numSpotLights),c.push(d.numHemiLights),c.push(d.numRectAreaLights),c.push(d.numDirLightShadows),c.push(d.numPointLightShadows),c.push(d.numSpotLightShadows),c.push(d.shadowMapType),c.push(d.toneMapping),c.push(d.numClippingPlanes),c.push(d.numClipIntersection),e=g,f=b,j.disableAll(),f.isWebGL2&&j.enable(0),f.supportsVertexTextures&&j.enable(1),f.instancing&&j.enable(2),f.instancingColor&&j.enable(3),f.map&&j.enable(4),f.matcap&&j.enable(5),f.envMap&&j.enable(6),f.lightMap&&j.enable(7),f.aoMap&&j.enable(8),f.emissiveMap&&j.enable(9),f.bumpMap&&j.enable(10),f.normalMap&&j.enable(11),f.objectSpaceNormalMap&&j.enable(12),f.tangentSpaceNormalMap&&j.enable(13),f.clearcoat&&j.enable(14),f.clearcoatMap&&j.enable(15),f.clearcoatRoughnessMap&&j.enable(16),f.clearcoatNormalMap&&j.enable(17),f.displacementMap&&j.enable(18),f.specularMap&&j.enable(19),f.roughnessMap&&j.enable(20),f.metalnessMap&&j.enable(21),f.gradientMap&&j.enable(22),f.alphaMap&&j.enable(23),f.alphaTest&&j.enable(24),f.vertexColors&&j.enable(25),f.vertexAlphas&&j.enable(26),f.vertexUvs&&j.enable(27),f.vertexTangents&&j.enable(28),f.uvsVertexOnly&&j.enable(29),f.fog&&j.enable(30),e.push(j.mask),j.disableAll(),f.useFog&&j.enable(0),f.flatShading&&j.enable(1),f.logarithmicDepthBuffer&&j.enable(2),f.skinning&&j.enable(3),f.useVertexTexture&&j.enable(4),f.morphTargets&&j.enable(5),f.morphNormals&&j.enable(6),f.morphColors&&j.enable(7),f.premultipliedAlpha&&j.enable(8),f.shadowMapEnabled&&j.enable(9),f.physicallyCorrectLights&&j.enable(10),f.doubleSided&&j.enable(11),f.flipSided&&j.enable(12),f.depthPacking&&j.enable(13),f.dithering&&j.enable(14),f.specularIntensityMap&&j.enable(15),f.specularColorMap&&j.enable(16),f.transmission&&j.enable(17),f.transmissionMap&&j.enable(18),f.thicknessMap&&j.enable(19),f.sheen&&j.enable(20),f.sheenColorMap&&j.enable(21),f.sheenRoughnessMap&&j.enable(22),f.decodeVideoTexture&&j.enable(23),f.opaque&&j.enable(24),e.push(j.mask),g.push(a.outputEncoding)),g.push(b.customProgramCacheKey),g.join()},getUniforms:function(a){let b=s[a.type],c;if(b){let d=co[b];c=b5.clone(d.uniforms)}else c=a.uniforms;return c},acquireProgram:function(b,c){let d;for(let e=0,g=l.length;e<g;e++){let h=l[e];if(h.cacheKey===c){d=h,++d.usedTimes;break}}return void 0===d&&(d=new d3(a,c,b,f),l.push(d)),d},releaseProgram:function(a){if(0== --a.usedTimes){let b=l.indexOf(a);l[b]=l[l.length-1],l.pop(),a.destroy()}},releaseShaderCache:function(a){k.remove(a)},programs:l,dispose:function(){k.dispose()}}}function d8(){let a=new WeakMap;return{get:function(b){let c=a.get(b);return void 0===c&&(c={},a.set(b,c)),c},remove:function(b){a.delete(b)},update:function(b,c,d){a.get(b)[c]=d},dispose:function(){a=new WeakMap}}}function d9(a,b){return a.groupOrder!==b.groupOrder?a.groupOrder-b.groupOrder:a.renderOrder!==b.renderOrder?a.renderOrder-b.renderOrder:a.material.id!==b.material.id?a.material.id-b.material.id:a.z!==b.z?a.z-b.z:a.id-b.id}function ea(a,b){return a.groupOrder!==b.groupOrder?a.groupOrder-b.groupOrder:a.renderOrder!==b.renderOrder?a.renderOrder-b.renderOrder:a.z!==b.z?b.z-a.z:a.id-b.id}function eb(){let a=[],b=0,c=[],d=[],e=[];function f(c,d,e,f,g,h){let i=a[b];return void 0===i?(i={id:c.id,object:c,geometry:d,material:e,groupOrder:f,renderOrder:c.renderOrder,z:g,group:h},a[b]=i):(i.id=c.id,i.object=c,i.geometry=d,i.material=e,i.groupOrder=f,i.renderOrder=c.renderOrder,i.z=g,i.group=h),b++,i}return{opaque:c,transmissive:d,transparent:e,init:function(){b=0,c.length=0,d.length=0,e.length=0},push:function(a,b,g,h,i,j){let k=f(a,b,g,h,i,j);g.transmission>0?d.push(k):!0===g.transparent?e.push(k):c.push(k)},unshift:function(a,b,g,h,i,j){let k=f(a,b,g,h,i,j);g.transmission>0?d.unshift(k):!0===g.transparent?e.unshift(k):c.unshift(k)},finish:function(){for(let c=b,d=a.length;c<d;c++){let e=a[c];if(null===e.id)break;e.id=null,e.object=null,e.geometry=null,e.material=null,e.group=null}},sort:function(a,b){c.length>1&&c.sort(a||d9),d.length>1&&d.sort(b||ea),e.length>1&&e.sort(b||ea)}}}function ec(){let a=new WeakMap;return{get:function(b,c){let d;return!1===a.has(b)?(d=new eb,a.set(b,[d])):c>=a.get(b).length?(d=new eb,a.get(b).push(d)):d=a.get(b)[c],d},dispose:function(){a=new WeakMap}}}function ed(){let a={};return{get:function(b){if(void 0!==a[b.id])return a[b.id];let c;switch(b.type){case"DirectionalLight":c={direction:new aq,color:new ae};break;case"SpotLight":c={position:new aq,direction:new aq,color:new ae,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":c={position:new aq,color:new ae,distance:0,decay:0};break;case"HemisphereLight":c={direction:new aq,skyColor:new ae,groundColor:new ae};break;case"RectAreaLight":c={color:new ae,position:new aq,halfWidth:new aq,halfHeight:new aq}}return a[b.id]=c,c}}}let ee=0;function ef(a,b){return(b.castShadow?1:0)-(a.castShadow?1:0)}function eg(a,b){let c=new ed,d=function(){let a={};return{get:function(b){if(void 0!==a[b.id])return a[b.id];let c;switch(b.type){case"DirectionalLight":case"SpotLight":c={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Q};break;case"PointLight":c={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Q,shadowCameraNear:1,shadowCameraFar:1e3}}return a[b.id]=c,c}}}(),e={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let f=0;f<9;f++)e.probe.push(new aq);let g=new aq,h=new aV,i=new aV;return{setup:function(f,g){let h=0,i=0,j=0;for(let k=0;k<9;k++)e.probe[k].set(0,0,0);let l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;f.sort(ef);let t=!0!==g?Math.PI:1;for(let u=0,v=f.length;u<v;u++){let w=f[u],x=w.color,y=w.intensity,z=w.distance,A=w.shadow&&w.shadow.map?w.shadow.map.texture:null;if(w.isAmbientLight)h+=x.r*y*t,i+=x.g*y*t,j+=x.b*y*t;else if(w.isLightProbe)for(let B=0;B<9;B++)e.probe[B].addScaledVector(w.sh.coefficients[B],y);else if(w.isDirectionalLight){let C=c.get(w);if(C.color.copy(w.color).multiplyScalar(w.intensity*t),w.castShadow){let D=w.shadow,E=d.get(w);E.shadowBias=D.bias,E.shadowNormalBias=D.normalBias,E.shadowRadius=D.radius,E.shadowMapSize=D.mapSize,e.directionalShadow[l]=E,e.directionalShadowMap[l]=A,e.directionalShadowMatrix[l]=w.shadow.matrix,q++}e.directional[l]=C,l++}else if(w.isSpotLight){let F=c.get(w);if(F.position.setFromMatrixPosition(w.matrixWorld),F.color.copy(x).multiplyScalar(y*t),F.distance=z,F.coneCos=Math.cos(w.angle),F.penumbraCos=Math.cos(w.angle*(1-w.penumbra)),F.decay=w.decay,w.castShadow){let G=w.shadow,H=d.get(w);H.shadowBias=G.bias,H.shadowNormalBias=G.normalBias,H.shadowRadius=G.radius,H.shadowMapSize=G.mapSize,e.spotShadow[n]=H,e.spotShadowMap[n]=A,e.spotShadowMatrix[n]=w.shadow.matrix,s++}e.spot[n]=F,n++}else if(w.isRectAreaLight){let I=c.get(w);I.color.copy(x).multiplyScalar(y),I.halfWidth.set(.5*w.width,0,0),I.halfHeight.set(0,.5*w.height,0),e.rectArea[o]=I,o++}else if(w.isPointLight){let J=c.get(w);if(J.color.copy(w.color).multiplyScalar(w.intensity*t),J.distance=w.distance,J.decay=w.decay,w.castShadow){let K=w.shadow,L=d.get(w);L.shadowBias=K.bias,L.shadowNormalBias=K.normalBias,L.shadowRadius=K.radius,L.shadowMapSize=K.mapSize,L.shadowCameraNear=K.camera.near,L.shadowCameraFar=K.camera.far,e.pointShadow[m]=L,e.pointShadowMap[m]=A,e.pointShadowMatrix[m]=w.shadow.matrix,r++}e.point[m]=J,m++}else if(w.isHemisphereLight){let M=c.get(w);M.skyColor.copy(w.color).multiplyScalar(y*t),M.groundColor.copy(w.groundColor).multiplyScalar(y*t),e.hemi[p]=M,p++}}o>0&&(b.isWebGL2?(e.rectAreaLTC1=cn.LTC_FLOAT_1,e.rectAreaLTC2=cn.LTC_FLOAT_2):!0===a.has("OES_texture_float_linear")?(e.rectAreaLTC1=cn.LTC_FLOAT_1,e.rectAreaLTC2=cn.LTC_FLOAT_2):!0===a.has("OES_texture_half_float_linear")?(e.rectAreaLTC1=cn.LTC_HALF_1,e.rectAreaLTC2=cn.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),e.ambient[0]=h,e.ambient[1]=i,e.ambient[2]=j;let N=e.hash;(N.directionalLength!==l||N.pointLength!==m||N.spotLength!==n||N.rectAreaLength!==o||N.hemiLength!==p||N.numDirectionalShadows!==q||N.numPointShadows!==r||N.numSpotShadows!==s)&&(e.directional.length=l,e.spot.length=n,e.rectArea.length=o,e.point.length=m,e.hemi.length=p,e.directionalShadow.length=q,e.directionalShadowMap.length=q,e.pointShadow.length=r,e.pointShadowMap.length=r,e.spotShadow.length=s,e.spotShadowMap.length=s,e.directionalShadowMatrix.length=q,e.pointShadowMatrix.length=r,e.spotShadowMatrix.length=s,N.directionalLength=l,N.pointLength=m,N.spotLength=n,N.rectAreaLength=o,N.hemiLength=p,N.numDirectionalShadows=q,N.numPointShadows=r,N.numSpotShadows=s,e.version=ee++)},setupView:function(a,b){let c=0,d=0,f=0,j=0,k=0,l=b.matrixWorldInverse;for(let m=0,n=a.length;m<n;m++){let o=a[m];if(o.isDirectionalLight){let p=e.directional[c];p.direction.setFromMatrixPosition(o.matrixWorld),g.setFromMatrixPosition(o.target.matrixWorld),p.direction.sub(g),p.direction.transformDirection(l),c++}else if(o.isSpotLight){let q=e.spot[f];q.position.setFromMatrixPosition(o.matrixWorld),q.position.applyMatrix4(l),q.direction.setFromMatrixPosition(o.matrixWorld),g.setFromMatrixPosition(o.target.matrixWorld),q.direction.sub(g),q.direction.transformDirection(l),f++}else if(o.isRectAreaLight){let r=e.rectArea[j];r.position.setFromMatrixPosition(o.matrixWorld),r.position.applyMatrix4(l),i.identity(),h.copy(o.matrixWorld),h.premultiply(l),i.extractRotation(h),r.halfWidth.set(.5*o.width,0,0),r.halfHeight.set(0,.5*o.height,0),r.halfWidth.applyMatrix4(i),r.halfHeight.applyMatrix4(i),j++}else if(o.isPointLight){let s=e.point[d];s.position.setFromMatrixPosition(o.matrixWorld),s.position.applyMatrix4(l),d++}else if(o.isHemisphereLight){let t=e.hemi[k];t.direction.setFromMatrixPosition(o.matrixWorld),t.direction.transformDirection(l),t.direction.normalize(),k++}}},state:e}}function eh(a,b){let c=new eg(a,b),d=[],e=[];return{init:function(){d.length=0,e.length=0},state:{lightsArray:d,shadowsArray:e,lights:c},setupLights:function(a){c.setup(d,a)},setupLightsView:function(a){c.setupView(d,a)},pushLight:function(a){d.push(a)},pushShadow:function(a){e.push(a)}}}function ei(a,b){let c=new WeakMap;return{get:function(d,e=0){let f;return!1===c.has(d)?(f=new eh(a,b),c.set(d,[f])):e>=c.get(d).length?(f=new eh(a,b),c.get(d).push(f)):f=c.get(d)[e],f},dispose:function(){c=new WeakMap}}}class ej extends bv{constructor(a){super(),this.type="MeshDepthMaterial",this.depthPacking=3200,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(a)}copy(a){return super.copy(a),this.depthPacking=a.depthPacking,this.map=a.map,this.alphaMap=a.alphaMap,this.displacementMap=a.displacementMap,this.displacementScale=a.displacementScale,this.displacementBias=a.displacementBias,this.wireframe=a.wireframe,this.wireframeLinewidth=a.wireframeLinewidth,this}}ej.prototype.isMeshDepthMaterial=!0;class ek extends bv{constructor(a){super(),this.type="MeshDistanceMaterial",this.referencePosition=new aq,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(a)}copy(a){return super.copy(a),this.referencePosition.copy(a.referencePosition),this.nearDistance=a.nearDistance,this.farDistance=a.farDistance,this.map=a.map,this.alphaMap=a.alphaMap,this.displacementMap=a.displacementMap,this.displacementScale=a.displacementScale,this.displacementBias=a.displacementBias,this}}function el(a,b,c){let d=new ci,e=new Q,i=new Q,j=new al,k=new ej({depthPacking:3201}),m=new ek,n={},o=c.maxTextureSize,p={0:g,1:f,2:h},q=new b6({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new Q},radius:{value:4}},vertexShader:"void main() {\n	gl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n	const float samples = float( VSM_SAMPLES );\n	float mean = 0.0;\n	float squared_mean = 0.0;\n	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;\n	for ( float i = 0.0; i < samples; i ++ ) {\n		float uvOffset = uvStart + i * uvStride;\n		#ifdef HORIZONTAL_PASS\n			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n			mean += distribution.x;\n			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n		#else\n			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n			mean += depth;\n			squared_mean += depth * depth;\n		#endif\n	}\n	mean = mean / samples;\n	squared_mean = squared_mean / samples;\n	float std_dev = sqrt( squared_mean - mean * mean );\n	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),r=q.clone();r.defines.HORIZONTAL_PASS=1;let s=new bK;s.setAttribute("position",new bz(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));let t=new b0(s,q),u=this;function v(c,d){let e=b.update(t);q.defines.VSM_SAMPLES!==c.blurSamples&&(q.defines.VSM_SAMPLES=c.blurSamples,r.defines.VSM_SAMPLES=c.blurSamples,q.needsUpdate=!0,r.needsUpdate=!0),q.uniforms.shadow_pass.value=c.map.texture,q.uniforms.resolution.value=c.mapSize,q.uniforms.radius.value=c.radius,a.setRenderTarget(c.mapPass),a.clear(),a.renderBufferDirect(d,null,e,q,t,null),r.uniforms.shadow_pass.value=c.mapPass.texture,r.uniforms.resolution.value=c.mapSize,r.uniforms.radius.value=c.radius,a.setRenderTarget(c.map),a.clear(),a.renderBufferDirect(d,null,e,r,t,null)}function w(b,c,d,e,f,g){let h=null,i=!0===d.isPointLight?b.customDistanceMaterial:b.customDepthMaterial;if(h=void 0!==i?i:!0===d.isPointLight?m:k,a.localClippingEnabled&& !0===c.clipShadows&&0!==c.clippingPlanes.length||c.displacementMap&&0!==c.displacementScale||c.alphaMap&&c.alphaTest>0){let j=h.uuid,l=c.uuid,o=n[j];void 0===o&&(o={},n[j]=o);let q=o[l];void 0===q&&(q=h.clone(),o[l]=q),h=q}return h.visible=c.visible,h.wireframe=c.wireframe,3===g?h.side=null!==c.shadowSide?c.shadowSide:c.side:h.side=null!==c.shadowSide?c.shadowSide:p[c.side],h.alphaMap=c.alphaMap,h.alphaTest=c.alphaTest,h.clipShadows=c.clipShadows,h.clippingPlanes=c.clippingPlanes,h.clipIntersection=c.clipIntersection,h.displacementMap=c.displacementMap,h.displacementScale=c.displacementScale,h.displacementBias=c.displacementBias,h.wireframeLinewidth=c.wireframeLinewidth,h.linewidth=c.linewidth,!0===d.isPointLight&& !0===h.isMeshDistanceMaterial&&(h.referencePosition.setFromMatrixPosition(d.matrixWorld),h.nearDistance=e,h.farDistance=f),h}function x(c,e,f,g,h){if(!1===c.visible)return;let i=c.layers.test(e.layers);if(i&&(c.isMesh||c.isLine||c.isPoints)&&(c.castShadow||c.receiveShadow&&3===h)&&(!c.frustumCulled||d.intersectsObject(c))){c.modelViewMatrix.multiplyMatrices(f.matrixWorldInverse,c.matrixWorld);let j=b.update(c),k=c.material;if(Array.isArray(k)){let l=j.groups;for(let m=0,n=l.length;m<n;m++){let o=l[m],p=k[o.materialIndex];if(p&&p.visible){let q=w(c,p,g,f.near,f.far,h);a.renderBufferDirect(f,null,j,q,c,o)}}}else if(k.visible){let r=w(c,k,g,f.near,f.far,h);a.renderBufferDirect(f,null,j,r,c,null)}}let s=c.children;for(let t=0,u=s.length;t<u;t++)x(s[t],e,f,g,h)}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=1,this.render=function(b,c,f){if(!1===u.enabled|| !1===u.autoUpdate&& !1===u.needsUpdate||0===b.length)return;let g=a.getRenderTarget(),h=a.getActiveCubeFace(),k=a.getActiveMipmapLevel(),m=a.state;m.setBlending(0),m.buffers.color.setClear(1,1,1,1),m.buffers.depth.setTest(!0),m.setScissorTest(!1);for(let n=0,p=b.length;n<p;n++){let q=b[n],r=q.shadow;if(void 0===r){console.warn("THREE.WebGLShadowMap:",q,"has no shadow.");continue}if(!1===r.autoUpdate&& !1===r.needsUpdate)continue;e.copy(r.mapSize);let s=r.getFrameExtents();if(e.multiply(s),i.copy(r.mapSize),(e.x>o||e.y>o)&&(e.x>o&&(i.x=Math.floor(o/s.x),e.x=i.x*s.x,r.mapSize.x=i.x),e.y>o&&(i.y=Math.floor(o/s.y),e.y=i.y*s.y,r.mapSize.y=i.y)),null!==r.map||r.isPointLightShadow||3!==this.type||(r.map=new am(e.x,e.y),r.map.texture.name=q.name+".shadowMap",r.mapPass=new am(e.x,e.y),r.camera.updateProjectionMatrix()),null===r.map){let t={minFilter:l,magFilter:l,format:1023};r.map=new am(e.x,e.y,t),r.map.texture.name=q.name+".shadowMap",r.camera.updateProjectionMatrix()}a.setRenderTarget(r.map),a.clear();let w=r.getViewportCount();for(let y=0;y<w;y++){let z=r.getViewport(y);j.set(i.x*z.x,i.y*z.y,i.x*z.z,i.y*z.w),m.viewport(j),r.updateMatrices(q,y),d=r.getFrustum(),x(c,f,r.camera,q,this.type)}r.isPointLightShadow||3!==this.type||v(r,f),r.needsUpdate=!1}u.needsUpdate=!1,a.setRenderTarget(g,h,k)}}function em(a,b,c){let d=c.isWebGL2,e=new function(){let b=!1,c=new al,d=null,e=new al(0,0,0,0);return{setMask:function(c){d===c||b||(a.colorMask(c,c,c,c),d=c)},setLocked:function(a){b=a},setClear:function(b,d,f,g,h){!0===h&&(b*=g,d*=g,f*=g),c.set(b,d,f,g),!1===e.equals(c)&&(a.clearColor(b,d,f,g),e.copy(c))},reset:function(){b=!1,d=null,e.set(-1,0,0,0)}}},f=new function(){let b=!1,c=null,d=null,e=null;return{setTest:function(a){a?O(2929):P(2929)},setMask:function(d){c===d||b||(a.depthMask(d),c=d)},setFunc:function(b){if(d!==b){if(b)switch(b){case 0:a.depthFunc(512);break;case 1:a.depthFunc(519);break;case 2:a.depthFunc(513);break;case 3:default:a.depthFunc(515);break;case 4:a.depthFunc(514);break;case 5:a.depthFunc(518);break;case 6:a.depthFunc(516);break;case 7:a.depthFunc(517)}else a.depthFunc(515);d=b}},setLocked:function(a){b=a},setClear:function(b){e!==b&&(a.clearDepth(b),e=b)},reset:function(){b=!1,c=null,d=null,e=null}}},i=new function(){let b=!1,c=null,d=null,e=null,f=null,g=null,h=null,i=null,j=null;return{setTest:function(a){b||(a?O(2960):P(2960))},setMask:function(d){c===d||b||(a.stencilMask(d),c=d)},setFunc:function(b,c,g){(d!==b||e!==c||f!==g)&&(a.stencilFunc(b,c,g),d=b,e=c,f=g)},setOp:function(b,c,d){(g!==b||h!==c||i!==d)&&(a.stencilOp(b,c,d),g=b,h=c,i=d)},setLocked:function(a){b=a},setClear:function(b){j!==b&&(a.clearStencil(b),j=b)},reset:function(){b=!1,c=null,d=null,e=null,f=null,g=null,h=null,i=null,j=null}}},j={},k={},l=new WeakMap,m=[],n=null,o=!1,p=null,q=null,r=null,s=null,t=null,u=null,v=null,w=!1,x=null,y=null,z=null,A=null,B=null,C=a.getParameter(35661),D=!1,E=0,F=a.getParameter(7938);-1!==F.indexOf("WebGL")?D=parseFloat(/^WebGL (\d)/.exec(F)[1])>=1:-1!==F.indexOf("OpenGL ES")&&(D=parseFloat(/^OpenGL ES (\d)/.exec(F)[1])>=2);let G=null,H={},I=a.getParameter(3088),J=a.getParameter(2978),K=new al().fromArray(I),L=new al().fromArray(J);function M(b,c,d){let e=new Uint8Array(4),f=a.createTexture();a.bindTexture(b,f),a.texParameteri(b,10241,9728),a.texParameteri(b,10240,9728);for(let g=0;g<d;g++)a.texImage2D(c+g,0,6408,1,1,0,6408,5121,e);return f}let N={};function O(b){!0!==j[b]&&(a.enable(b),j[b]=!0)}function P(b){!1!==j[b]&&(a.disable(b),j[b]=!1)}N[3553]=M(3553,3553,1),N[34067]=M(34067,34069,6),e.setClear(0,0,0,1),f.setClear(1),i.setClear(0),O(2929),f.setFunc(3),U(!1),V(1),O(2884),T(0);let Q={100:32774,101:32778,102:32779};if(d)Q[103]=32775,Q[104]=32776;else{let R=b.get("EXT_blend_minmax");null!==R&&(Q[103]=R.MIN_EXT,Q[104]=R.MAX_EXT)}let S={200:0,201:1,202:768,204:770,210:776,208:774,206:772,203:769,205:771,209:775,207:773};function T(b,c,d,e,f,g,h,i){if(0===b){!0===o&&(P(3042),o=!1);return}if(!1===o&&(O(3042),o=!0),5!==b){if(b!==p||i!==w){if((100!==q||100!==t)&&(a.blendEquation(32774),q=100,t=100),i)switch(b){case 1:a.blendFuncSeparate(1,771,1,771);break;case 2:a.blendFunc(1,1);break;case 3:a.blendFuncSeparate(0,769,0,1);break;case 4:a.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",b)}else switch(b){case 1:a.blendFuncSeparate(770,771,1,771);break;case 2:a.blendFunc(770,1);break;case 3:a.blendFuncSeparate(0,769,0,1);break;case 4:a.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",b)}r=null,s=null,u=null,v=null,p=b,w=i}return}f=f||c,g=g||d,h=h||e,(c!==q||f!==t)&&(a.blendEquationSeparate(Q[c],Q[f]),q=c,t=f),(d!==r||e!==s||g!==u||h!==v)&&(a.blendFuncSeparate(S[d],S[e],S[g],S[h]),r=d,s=e,u=g,v=h),p=b,w=null}function U(b){x!==b&&(b?a.frontFace(2304):a.frontFace(2305),x=b)}function V(b){0!==b?(O(2884),b!==y&&(1===b?a.cullFace(1029):2===b?a.cullFace(1028):a.cullFace(1032))):P(2884),y=b}function W(b,c,d){b?(O(32823),(A!==c||B!==d)&&(a.polygonOffset(c,d),A=c,B=d)):P(32823)}function X(b){void 0===b&&(b=33984+C-1),G!==b&&(a.activeTexture(b),G=b)}return{buffers:{color:e,depth:f,stencil:i},enable:O,disable:P,bindFramebuffer:function(b,c){return k[b]!==c&&(a.bindFramebuffer(b,c),k[b]=c,d&&(36009===b&&(k[36160]=c),36160===b&&(k[36009]=c)),!0)},drawBuffers:function(d,e){let f=m,g=!1;if(d){if(void 0===(f=l.get(e))&&(f=[],l.set(e,f)),d.isWebGLMultipleRenderTargets){let h=d.texture;if(f.length!==h.length||36064!==f[0]){for(let i=0,j=h.length;i<j;i++)f[i]=36064+i;f.length=h.length,g=!0}}else 36064!==f[0]&&(f[0]=36064,g=!0)}else 1029!==f[0]&&(f[0]=1029,g=!0);g&&(c.isWebGL2?a.drawBuffers(f):b.get("WEBGL_draw_buffers").drawBuffersWEBGL(f))},useProgram:function(b){return n!==b&&(a.useProgram(b),n=b,!0)},setBlending:T,setMaterial:function(a,b){a.side===h?P(2884):O(2884);let c=a.side===g;b&&(c=!c),U(c),1===a.blending&& !1===a.transparent?T(0):T(a.blending,a.blendEquation,a.blendSrc,a.blendDst,a.blendEquationAlpha,a.blendSrcAlpha,a.blendDstAlpha,a.premultipliedAlpha),f.setFunc(a.depthFunc),f.setTest(a.depthTest),f.setMask(a.depthWrite),e.setMask(a.colorWrite);let d=a.stencilWrite;i.setTest(d),d&&(i.setMask(a.stencilWriteMask),i.setFunc(a.stencilFunc,a.stencilRef,a.stencilFuncMask),i.setOp(a.stencilFail,a.stencilZFail,a.stencilZPass)),W(a.polygonOffset,a.polygonOffsetFactor,a.polygonOffsetUnits),!0===a.alphaToCoverage?O(32926):P(32926)},setFlipSided:U,setCullFace:V,setLineWidth:function(b){b!==z&&(D&&a.lineWidth(b),z=b)},setPolygonOffset:W,setScissorTest:function(a){a?O(3089):P(3089)},activeTexture:X,bindTexture:function(b,c){null===G&&X();let d=H[G];void 0===d&&(d={type:void 0,texture:void 0},H[G]=d),(d.type!==b||d.texture!==c)&&(a.bindTexture(b,c||N[b]),d.type=b,d.texture=c)},unbindTexture:function(){let b=H[G];void 0!==b&& void 0!==b.type&&(a.bindTexture(b.type,null),b.type=void 0,b.texture=void 0)},compressedTexImage2D:function(){try{a.compressedTexImage2D.apply(a,arguments)}catch(b){console.error("THREE.WebGLState:",b)}},texImage2D:function(){try{a.texImage2D.apply(a,arguments)}catch(b){console.error("THREE.WebGLState:",b)}},texImage3D:function(){try{a.texImage3D.apply(a,arguments)}catch(b){console.error("THREE.WebGLState:",b)}},texStorage2D:function(){try{a.texStorage2D.apply(a,arguments)}catch(b){console.error("THREE.WebGLState:",b)}},texStorage3D:function(){try{a.texStorage3D.apply(a,arguments)}catch(b){console.error("THREE.WebGLState:",b)}},texSubImage2D:function(){try{a.texSubImage2D.apply(a,arguments)}catch(b){console.error("THREE.WebGLState:",b)}},texSubImage3D:function(){try{a.texSubImage3D.apply(a,arguments)}catch(b){console.error("THREE.WebGLState:",b)}},compressedTexSubImage2D:function(){try{a.compressedTexSubImage2D.apply(a,arguments)}catch(b){console.error("THREE.WebGLState:",b)}},scissor:function(b){!1===K.equals(b)&&(a.scissor(b.x,b.y,b.z,b.w),K.copy(b))},viewport:function(b){!1===L.equals(b)&&(a.viewport(b.x,b.y,b.z,b.w),L.copy(b))},reset:function(){a.disable(3042),a.disable(2884),a.disable(2929),a.disable(32823),a.disable(3089),a.disable(2960),a.disable(32926),a.blendEquation(32774),a.blendFunc(1,0),a.blendFuncSeparate(1,0,1,0),a.colorMask(!0,!0,!0,!0),a.clearColor(0,0,0,0),a.depthMask(!0),a.depthFunc(513),a.clearDepth(1),a.stencilMask(4294967295),a.stencilFunc(519,0,4294967295),a.stencilOp(7680,7680,7680),a.clearStencil(0),a.cullFace(1029),a.frontFace(2305),a.polygonOffset(0,0),a.activeTexture(33984),a.bindFramebuffer(36160,null),!0===d&&(a.bindFramebuffer(36009,null),a.bindFramebuffer(36008,null)),a.useProgram(null),a.lineWidth(1),a.scissor(0,0,a.canvas.width,a.canvas.height),a.viewport(0,0,a.canvas.width,a.canvas.height),j={},G=null,H={},k={},l=new WeakMap,m=[],n=null,o=!1,p=null,q=null,r=null,s=null,t=null,u=null,v=null,w=!1,x=null,y=null,z=null,A=null,B=null,K.set(0,0,a.canvas.width,a.canvas.height),L.set(0,0,a.canvas.width,a.canvas.height),e.reset(),f.reset(),i.reset()}}}function en(a,b,c,d,e,f,g){let h=e.isWebGL2,r=e.maxTextures,s=e.maxCubemapSize,t=e.maxTextureSize,u=e.maxSamples,w=b.has("WEBGL_multisampled_render_to_texture")?b.get("WEBGL_multisampled_render_to_texture"):null,x=/OculusBrowser/g.test(navigator.userAgent),y=new WeakMap,z,A=new WeakMap,B=!1;try{B="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(C){}function D(a,b){return B?new OffscreenCanvas(a,b):V("canvas")}function E(a,b,c,d){let e=1;if((a.width>d||a.height>d)&&(e=d/Math.max(a.width,a.height)),e<1|| !0===b){if("undefined"!=typeof HTMLImageElement&&a instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&a instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&a instanceof ImageBitmap){let f=b?O:Math.floor,g=f(e*a.width),h=f(e*a.height);void 0===z&&(z=D(g,h));let i=c?D(g,h):z;i.width=g,i.height=h;let j=i.getContext("2d");return j.drawImage(a,0,0,g,h),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+a.width+"x"+a.height+") to ("+g+"x"+h+")."),i}"data"in a&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+a.width+"x"+a.height+").")}return a}function F(a){return M(a.width)&&M(a.height)}function G(a,b){return a.generateMipmaps&&b&&a.minFilter!==l&&a.minFilter!==o}function H(b){a.generateMipmap(b)}function I(c,d,e,f,g=!1){if(!1===h)return d;if(null!==c){if(void 0!==a[c])return a[c];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+c+"'")}let i=d;return 6403===d&&(5126===e&&(i=33326),5131===e&&(i=33325),5121===e&&(i=33321)),33319===d&&(5126===e&&(i=33328),5131===e&&(i=33327),5121===e&&(i=33323)),6408===d&&(5126===e&&(i=34836),5131===e&&(i=34842),5121===e&&(i=f===v&& !1===g?35907:32856),32819===e&&(i=32854),32820===e&&(i=32855)),(33325===i||33326===i||33327===i||33328===i||34842===i||34836===i)&&b.get("EXT_color_buffer_float"),i}function J(a,b,c){return!0===G(a,c)||a.isFramebufferTexture&&a.minFilter!==l&&a.minFilter!==o?Math.log2(Math.max(b.width,b.height))+1:void 0!==a.mipmaps&&a.mipmaps.length>0?a.mipmaps.length:a.isCompressedTexture&&Array.isArray(a.image)?b.mipmaps.length:1}function K(a){return a===l||a===m||a===n?9728:9729}function L(a){let b=a.target;b.removeEventListener("dispose",L),P(b),b.isVideoTexture&&y.delete(b)}function N(a){let b=a.target;b.removeEventListener("dispose",N),R(b)}function P(a){let b=d.get(a);if(void 0===b.__webglInit)return;let c=a.source,e=A.get(c);if(e){let f=e[b.__cacheKey];f.usedTimes--,0===f.usedTimes&&Q(a),0===Object.keys(e).length&&A.delete(c)}d.remove(a)}function Q(b){let c=d.get(b);a.deleteTexture(c.__webglTexture);let e=b.source,f=A.get(e);delete f[c.__cacheKey],g.memory.textures--}function R(b){let c=b.texture,e=d.get(b),f=d.get(c);if(void 0!==f.__webglTexture&&(a.deleteTexture(f.__webglTexture),g.memory.textures--),b.depthTexture&&b.depthTexture.dispose(),b.isWebGLCubeRenderTarget)for(let h=0;h<6;h++)a.deleteFramebuffer(e.__webglFramebuffer[h]),e.__webglDepthbuffer&&a.deleteRenderbuffer(e.__webglDepthbuffer[h]);else a.deleteFramebuffer(e.__webglFramebuffer),e.__webglDepthbuffer&&a.deleteRenderbuffer(e.__webglDepthbuffer),e.__webglMultisampledFramebuffer&&a.deleteFramebuffer(e.__webglMultisampledFramebuffer),e.__webglColorRenderbuffer&&a.deleteRenderbuffer(e.__webglColorRenderbuffer),e.__webglDepthRenderbuffer&&a.deleteRenderbuffer(e.__webglDepthRenderbuffer);if(b.isWebGLMultipleRenderTargets)for(let i=0,j=c.length;i<j;i++){let k=d.get(c[i]);k.__webglTexture&&(a.deleteTexture(k.__webglTexture),g.memory.textures--),d.remove(c[i])}d.remove(c),d.remove(b)}let S=0;function T(a,b){let e=d.get(a);if(a.isVideoTexture&&ad(a),!1===a.isRenderTargetTexture&&a.version>0&&e.__version!==a.version){let f=a.image;if(null===f)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(!1===f.complete)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{Z(e,a,b);return}}c.activeTexture(33984+b),c.bindTexture(3553,e.__webglTexture)}let U={[i]:10497,[j]:33071,[k]:33648},W={[l]:9728,[m]:9984,[n]:9986,[o]:9729,[p]:9985,[q]:9987};function X(c,f,g){if(g?(a.texParameteri(c,10242,U[f.wrapS]),a.texParameteri(c,10243,U[f.wrapT]),(32879===c||35866===c)&&a.texParameteri(c,32882,U[f.wrapR]),a.texParameteri(c,10240,W[f.magFilter]),a.texParameteri(c,10241,W[f.minFilter])):(a.texParameteri(c,10242,33071),a.texParameteri(c,10243,33071),(32879===c||35866===c)&&a.texParameteri(c,32882,33071),(f.wrapS!==j||f.wrapT!==j)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),a.texParameteri(c,10240,K(f.magFilter)),a.texParameteri(c,10241,K(f.minFilter)),f.minFilter!==l&&f.minFilter!==o&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),!0===b.has("EXT_texture_filter_anisotropic")){let i=b.get("EXT_texture_filter_anisotropic");(1015!==f.type|| !1!==b.has("OES_texture_float_linear"))&&(!1!==h||1016!==f.type|| !1!==b.has("OES_texture_half_float_linear"))&&(f.anisotropy>1||d.get(f).__currentAnisotropy)&&(a.texParameterf(c,i.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(f.anisotropy,e.getMaxAnisotropy())),d.get(f).__currentAnisotropy=f.anisotropy)}}function Y(b,c){let d=!1;void 0===b.__webglInit&&(b.__webglInit=!0,c.addEventListener("dispose",L));let e=c.source,f=A.get(e);void 0===f&&(f={},A.set(e,f));let h=function(a){let b=[];return b.push(a.wrapS),b.push(a.wrapT),b.push(a.magFilter),b.push(a.minFilter),b.push(a.anisotropy),b.push(a.internalFormat),b.push(a.format),b.push(a.type),b.push(a.generateMipmaps),b.push(a.premultiplyAlpha),b.push(a.flipY),b.push(a.unpackAlignment),b.push(a.encoding),b.join()}(c);if(h!==b.__cacheKey){void 0===f[h]&&(f[h]={texture:a.createTexture(),usedTimes:0},g.memory.textures++,d=!0),f[h].usedTimes++;let i=f[b.__cacheKey];void 0!==i&&(f[b.__cacheKey].usedTimes--,0===i.usedTimes&&Q(c)),b.__cacheKey=h,b.__webglTexture=f[h].texture}return d}function Z(b,d,e){let g=3553;d.isDataArrayTexture&&(g=35866),d.isData3DTexture&&(g=32879);let i=Y(b,d),k=d.source;if(c.activeTexture(33984+e),c.bindTexture(g,b.__webglTexture),k.version!==k.__currentVersion|| !0===i){var m;a.pixelStorei(37440,d.flipY),a.pixelStorei(37441,d.premultiplyAlpha),a.pixelStorei(3317,d.unpackAlignment),a.pixelStorei(37443,0);let n=(m=d,!h&&(m.wrapS!==j||m.wrapT!==j||m.minFilter!==l&&m.minFilter!==o)&& !1===F(d.image)),p=E(d.image,n,!1,t);p=ae(d,p);let q=F(p)||h,r=f.convert(d.format,d.encoding),s=f.convert(d.type),u=I(d.internalFormat,r,s,d.encoding,d.isVideoTexture);X(g,d,q);let v,w=d.mipmaps,x=h&& !0!==d.isVideoTexture,y=void 0===b.__version,z=J(d,p,q);if(d.isDepthTexture)u=6402,h?u=1015===d.type?36012:1014===d.type?33190:1020===d.type?35056:33189:1015===d.type&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),1026===d.format&&6402===u&&1012!==d.type&&1014!==d.type&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),d.type=1012,s=f.convert(d.type)),1027===d.format&&6402===u&&(u=34041,1020!==d.type&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),d.type=1020,s=f.convert(d.type))),x&&y?c.texStorage2D(3553,1,u,p.width,p.height):c.texImage2D(3553,0,u,p.width,p.height,0,r,s,null);else if(d.isDataTexture){if(w.length>0&&q){x&&y&&c.texStorage2D(3553,z,u,w[0].width,w[0].height);for(let A=0,B=w.length;A<B;A++)v=w[A],x?c.texSubImage2D(3553,A,0,0,v.width,v.height,r,s,v.data):c.texImage2D(3553,A,u,v.width,v.height,0,r,s,v.data);d.generateMipmaps=!1}else x?(y&&c.texStorage2D(3553,z,u,p.width,p.height),c.texSubImage2D(3553,0,0,0,p.width,p.height,r,s,p.data)):c.texImage2D(3553,0,u,p.width,p.height,0,r,s,p.data)}else if(d.isCompressedTexture){x&&y&&c.texStorage2D(3553,z,u,w[0].width,w[0].height);for(let C=0,D=w.length;C<D;C++)v=w[C],1023!==d.format?null!==r?x?c.compressedTexSubImage2D(3553,C,0,0,v.width,v.height,r,v.data):c.compressedTexImage2D(3553,C,u,v.width,v.height,0,v.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):x?c.texSubImage2D(3553,C,0,0,v.width,v.height,r,s,v.data):c.texImage2D(3553,C,u,v.width,v.height,0,r,s,v.data)}else if(d.isDataArrayTexture)x?(y&&c.texStorage3D(35866,z,u,p.width,p.height,p.depth),c.texSubImage3D(35866,0,0,0,0,p.width,p.height,p.depth,r,s,p.data)):c.texImage3D(35866,0,u,p.width,p.height,p.depth,0,r,s,p.data);else if(d.isData3DTexture)x?(y&&c.texStorage3D(32879,z,u,p.width,p.height,p.depth),c.texSubImage3D(32879,0,0,0,0,p.width,p.height,p.depth,r,s,p.data)):c.texImage3D(32879,0,u,p.width,p.height,p.depth,0,r,s,p.data);else if(d.isFramebufferTexture)x&&y?c.texStorage2D(3553,z,u,p.width,p.height):c.texImage2D(3553,0,u,p.width,p.height,0,r,s,null);else if(w.length>0&&q){x&&y&&c.texStorage2D(3553,z,u,w[0].width,w[0].height);for(let K=0,L=w.length;K<L;K++)v=w[K],x?c.texSubImage2D(3553,K,0,0,r,s,v):c.texImage2D(3553,K,u,r,s,v);d.generateMipmaps=!1}else x?(y&&c.texStorage2D(3553,z,u,p.width,p.height),c.texSubImage2D(3553,0,0,0,r,s,p)):c.texImage2D(3553,0,u,r,s,p);G(d,q)&&H(g),k.__currentVersion=k.version,d.onUpdate&&d.onUpdate(d)}b.__version=d.version}function $(b,e,g,h,i){let j=f.convert(g.format,g.encoding),k=f.convert(g.type),l=I(g.internalFormat,j,k,g.encoding),m=d.get(e);m.__hasExternalTextures||(32879===i||35866===i?c.texImage3D(i,0,l,e.width,e.height,e.depth,0,j,k,null):c.texImage2D(i,0,l,e.width,e.height,0,j,k,null)),c.bindFramebuffer(36160,b),ac(e)?w.framebufferTexture2DMultisampleEXT(36160,h,i,d.get(g).__webglTexture,0,ab(e)):a.framebufferTexture2D(36160,h,i,d.get(g).__webglTexture,0),c.bindFramebuffer(36160,null)}function _(b,c,d){if(a.bindRenderbuffer(36161,b),c.depthBuffer&&!c.stencilBuffer){let e=33189;if(d||ac(c)){let g=c.depthTexture;g&&g.isDepthTexture&&(1015===g.type?e=36012:1014===g.type&&(e=33190));let h=ab(c);ac(c)?w.renderbufferStorageMultisampleEXT(36161,h,e,c.width,c.height):a.renderbufferStorageMultisample(36161,h,e,c.width,c.height)}else a.renderbufferStorage(36161,e,c.width,c.height);a.framebufferRenderbuffer(36160,36096,36161,b)}else if(c.depthBuffer&&c.stencilBuffer){let i=ab(c);d&& !1===ac(c)?a.renderbufferStorageMultisample(36161,i,35056,c.width,c.height):ac(c)?w.renderbufferStorageMultisampleEXT(36161,i,35056,c.width,c.height):a.renderbufferStorage(36161,34041,c.width,c.height),a.framebufferRenderbuffer(36160,33306,36161,b)}else{let j=!0===c.isWebGLMultipleRenderTargets?c.texture[0]:c.texture,k=f.convert(j.format,j.encoding),l=f.convert(j.type),m=I(j.internalFormat,k,l,j.encoding),n=ab(c);d&& !1===ac(c)?a.renderbufferStorageMultisample(36161,n,m,c.width,c.height):ac(c)?w.renderbufferStorageMultisampleEXT(36161,n,m,c.width,c.height):a.renderbufferStorage(36161,m,c.width,c.height)}a.bindRenderbuffer(36161,null)}function aa(b){let e=d.get(b),f=!0===b.isWebGLCubeRenderTarget;if(b.depthTexture&&!e.__autoAllocateDepthBuffer){if(f)throw Error("target.depthTexture not supported in Cube render targets");!function(b,e){let f=e&&e.isWebGLCubeRenderTarget;if(f)throw Error("Depth Texture with cube render targets is not supported");if(c.bindFramebuffer(36160,b),!(e.depthTexture&&e.depthTexture.isDepthTexture))throw Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");d.get(e.depthTexture).__webglTexture&&e.depthTexture.image.width===e.width&&e.depthTexture.image.height===e.height||(e.depthTexture.image.width=e.width,e.depthTexture.image.height=e.height,e.depthTexture.needsUpdate=!0),T(e.depthTexture,0);let g=d.get(e.depthTexture).__webglTexture,h=ab(e);if(1026===e.depthTexture.format)ac(e)?w.framebufferTexture2DMultisampleEXT(36160,36096,3553,g,0,h):a.framebufferTexture2D(36160,36096,3553,g,0);else if(1027===e.depthTexture.format)ac(e)?w.framebufferTexture2DMultisampleEXT(36160,33306,3553,g,0,h):a.framebufferTexture2D(36160,33306,3553,g,0);else throw Error("Unknown depthTexture format")}(e.__webglFramebuffer,b)}else if(f){e.__webglDepthbuffer=[];for(let g=0;g<6;g++)c.bindFramebuffer(36160,e.__webglFramebuffer[g]),e.__webglDepthbuffer[g]=a.createRenderbuffer(),_(e.__webglDepthbuffer[g],b,!1)}else c.bindFramebuffer(36160,e.__webglFramebuffer),e.__webglDepthbuffer=a.createRenderbuffer(),_(e.__webglDepthbuffer,b,!1);c.bindFramebuffer(36160,null)}function ab(a){return Math.min(u,a.samples)}function ac(a){let c=d.get(a);return h&&a.samples>0&& !0===b.has("WEBGL_multisampled_render_to_texture")&& !1!==c.__useRenderToTexture}function ad(a){let b=g.render.frame;y.get(a)!==b&&(y.set(a,b),a.update())}function ae(a,c){let d=a.encoding,e=a.format,f=a.type;return!0===a.isCompressedTexture|| !0===a.isVideoTexture||1035===a.format||3e3!==d&&(d===v?!1===h?!0===b.has("EXT_sRGB")&&1023===e?(a.format=1035,a.minFilter=o,a.generateMipmaps=!1):c=ag.sRGBToLinear(c):(1023!==e||1009!==f)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture encoding:",d)),c}this.allocateTextureUnit=function(){let a=S;return a>=r&&console.warn("THREE.WebGLTextures: Trying to use "+a+" texture units while this GPU supports only "+r),S+=1,a},this.resetTextureUnits=function(){S=0},this.setTexture2D=T,this.setTexture2DArray=function(a,b){let e=d.get(a);if(a.version>0&&e.__version!==a.version){Z(e,a,b);return}c.activeTexture(33984+b),c.bindTexture(35866,e.__webglTexture)},this.setTexture3D=function(a,b){let e=d.get(a);if(a.version>0&&e.__version!==a.version){Z(e,a,b);return}c.activeTexture(33984+b),c.bindTexture(32879,e.__webglTexture)},this.setTextureCube=function(b,e){let g=d.get(b);if(b.version>0&&g.__version!==b.version){(function b(d,e,g){if(6!==e.image.length)return;let i=Y(d,e),j=e.source;if(c.activeTexture(33984+g),c.bindTexture(34067,d.__webglTexture),j.version!==j.__currentVersion|| !0===i){a.pixelStorei(37440,e.flipY),a.pixelStorei(37441,e.premultiplyAlpha),a.pixelStorei(3317,e.unpackAlignment),a.pixelStorei(37443,0);let k=e.isCompressedTexture||e.image[0].isCompressedTexture,l=e.image[0]&&e.image[0].isDataTexture,m=[];for(let n=0;n<6;n++)k||l?m[n]=l?e.image[n].image:e.image[n]:m[n]=E(e.image[n],!1,!0,s),m[n]=ae(e,m[n]);let o=m[0],p=F(o)||h,q=f.convert(e.format,e.encoding),r=f.convert(e.type),t=I(e.internalFormat,q,r,e.encoding),u=h&& !0!==e.isVideoTexture,v=void 0===d.__version,w=J(e,o,p);X(34067,e,p);let x;if(k){u&&v&&c.texStorage2D(34067,w,t,o.width,o.height);for(let y=0;y<6;y++){x=m[y].mipmaps;for(let z=0;z<x.length;z++){let A=x[z];1023!==e.format?null!==q?u?c.compressedTexSubImage2D(34069+y,z,0,0,A.width,A.height,q,A.data):c.compressedTexImage2D(34069+y,z,t,A.width,A.height,0,A.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):u?c.texSubImage2D(34069+y,z,0,0,A.width,A.height,q,r,A.data):c.texImage2D(34069+y,z,t,A.width,A.height,0,q,r,A.data)}}}else{x=e.mipmaps,u&&v&&(x.length>0&&w++,c.texStorage2D(34067,w,t,m[0].width,m[0].height));for(let B=0;B<6;B++)if(l){u?c.texSubImage2D(34069+B,0,0,0,m[B].width,m[B].height,q,r,m[B].data):c.texImage2D(34069+B,0,t,m[B].width,m[B].height,0,q,r,m[B].data);for(let C=0;C<x.length;C++){let D=x[C],K=D.image[B].image;u?c.texSubImage2D(34069+B,C+1,0,0,K.width,K.height,q,r,K.data):c.texImage2D(34069+B,C+1,t,K.width,K.height,0,q,r,K.data)}}else{u?c.texSubImage2D(34069+B,0,0,0,q,r,m[B]):c.texImage2D(34069+B,0,t,q,r,m[B]);for(let L=0;L<x.length;L++){let M=x[L];u?c.texSubImage2D(34069+B,L+1,0,0,q,r,M.image[B]):c.texImage2D(34069+B,L+1,t,q,r,M.image[B])}}}G(e,p)&&H(34067),j.__currentVersion=j.version,e.onUpdate&&e.onUpdate(e)}d.__version=e.version})(g,b,e);return}c.activeTexture(33984+e),c.bindTexture(34067,g.__webglTexture)},this.rebindTextures=function(a,b,c){let e=d.get(a);void 0!==b&&$(e.__webglFramebuffer,a,a.texture,36064,3553),void 0!==c&&aa(a)},this.setupRenderTarget=function(b){let i=b.texture,j=d.get(b),k=d.get(i);b.addEventListener("dispose",N),!0!==b.isWebGLMultipleRenderTargets&&(void 0===k.__webglTexture&&(k.__webglTexture=a.createTexture()),k.__version=i.version,g.memory.textures++);let l=!0===b.isWebGLCubeRenderTarget,m=!0===b.isWebGLMultipleRenderTargets,n=F(b)||h;if(l){j.__webglFramebuffer=[];for(let o=0;o<6;o++)j.__webglFramebuffer[o]=a.createFramebuffer()}else if(j.__webglFramebuffer=a.createFramebuffer(),m){if(e.drawBuffers){let p=b.texture;for(let q=0,r=p.length;q<r;q++){let s=d.get(p[q]);void 0===s.__webglTexture&&(s.__webglTexture=a.createTexture(),g.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.")}else if(h&&b.samples>0&& !1===ac(b)){j.__webglMultisampledFramebuffer=a.createFramebuffer(),j.__webglColorRenderbuffer=a.createRenderbuffer(),a.bindRenderbuffer(36161,j.__webglColorRenderbuffer);let t=f.convert(i.format,i.encoding),u=f.convert(i.type),v=I(i.internalFormat,t,u,i.encoding),w=ab(b);a.renderbufferStorageMultisample(36161,w,v,b.width,b.height),c.bindFramebuffer(36160,j.__webglMultisampledFramebuffer),a.framebufferRenderbuffer(36160,36064,36161,j.__webglColorRenderbuffer),a.bindRenderbuffer(36161,null),b.depthBuffer&&(j.__webglDepthRenderbuffer=a.createRenderbuffer(),_(j.__webglDepthRenderbuffer,b,!0)),c.bindFramebuffer(36160,null)}if(l){c.bindTexture(34067,k.__webglTexture),X(34067,i,n);for(let x=0;x<6;x++)$(j.__webglFramebuffer[x],b,i,36064,34069+x);G(i,n)&&H(34067),c.unbindTexture()}else if(m){let y=b.texture;for(let z=0,A=y.length;z<A;z++){let B=y[z],C=d.get(B);c.bindTexture(3553,C.__webglTexture),X(3553,B,n),$(j.__webglFramebuffer,b,B,36064+z,3553),G(B,n)&&H(3553)}c.unbindTexture()}else{let D=3553;(b.isWebGL3DRenderTarget||b.isWebGLArrayRenderTarget)&&(h?D=b.isWebGL3DRenderTarget?32879:35866:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),c.bindTexture(D,k.__webglTexture),X(D,i,n),$(j.__webglFramebuffer,b,i,36064,D),G(i,n)&&H(D),c.unbindTexture()}b.depthBuffer&&aa(b)},this.updateRenderTargetMipmap=function(a){let b=F(a)||h,e=!0===a.isWebGLMultipleRenderTargets?a.texture:[a.texture];for(let f=0,g=e.length;f<g;f++){let i=e[f];if(G(i,b)){let j=a.isWebGLCubeRenderTarget?34067:3553,k=d.get(i).__webglTexture;c.bindTexture(j,k),H(j),c.unbindTexture()}}},this.updateMultisampleRenderTarget=function(b){if(h&&b.samples>0&& !1===ac(b)){let e=b.width,f=b.height,g=16384,i=[36064],j=b.stencilBuffer?33306:36096;b.depthBuffer&&i.push(j);let k=d.get(b),l=void 0!==k.__ignoreDepthValues&&k.__ignoreDepthValues;!1===l&&(b.depthBuffer&&(g|=256),b.stencilBuffer&&(g|=1024)),c.bindFramebuffer(36008,k.__webglMultisampledFramebuffer),c.bindFramebuffer(36009,k.__webglFramebuffer),!0===l&&(a.invalidateFramebuffer(36008,[j]),a.invalidateFramebuffer(36009,[j])),a.blitFramebuffer(0,0,e,f,0,0,e,f,g,9728),x&&a.invalidateFramebuffer(36008,i),c.bindFramebuffer(36008,null),c.bindFramebuffer(36009,k.__webglMultisampledFramebuffer)}},this.setupDepthRenderbuffer=aa,this.setupFrameBufferTexture=$,this.useMultisampledRTT=ac}function eo(a,b,c){let d=c.isWebGL2;return{convert:function(a,c=null){let e;if(1009===a)return 5121;if(1017===a)return 32819;if(1018===a)return 32820;if(1010===a)return 5120;if(1011===a)return 5122;if(1012===a)return 5123;if(1013===a)return 5124;if(1014===a)return 5125;if(1015===a)return 5126;if(1016===a)return d?5131:null!==(e=b.get("OES_texture_half_float"))?e.HALF_FLOAT_OES:null;if(1021===a)return 6406;if(1023===a)return 6408;if(1024===a)return 6409;if(1025===a)return 6410;if(1026===a)return 6402;if(1027===a)return 34041;if(1028===a)return 6403;if(1022===a)return console.warn("THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228"),6408;if(1035===a)return null!==(e=b.get("EXT_sRGB"))?e.SRGB_ALPHA_EXT:null;if(1029===a)return 36244;if(1030===a)return 33319;if(1031===a)return 33320;if(1033===a)return 36249;if(33776===a||33777===a||33778===a||33779===a){if(c===v){if(null===(e=b.get("WEBGL_compressed_texture_s3tc_srgb")))return null;if(33776===a)return e.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(33777===a)return e.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(33778===a)return e.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(33779===a)return e.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else{if(null===(e=b.get("WEBGL_compressed_texture_s3tc")))return null;if(33776===a)return e.COMPRESSED_RGB_S3TC_DXT1_EXT;if(33777===a)return e.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(33778===a)return e.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(33779===a)return e.COMPRESSED_RGBA_S3TC_DXT5_EXT}}if(35840===a||35841===a||35842===a||35843===a){if(null===(e=b.get("WEBGL_compressed_texture_pvrtc")))return null;if(35840===a)return e.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(35841===a)return e.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(35842===a)return e.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(35843===a)return e.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(36196===a)return null!==(e=b.get("WEBGL_compressed_texture_etc1"))?e.COMPRESSED_RGB_ETC1_WEBGL:null;if(37492===a||37496===a){if(null===(e=b.get("WEBGL_compressed_texture_etc")))return null;if(37492===a)return c===v?e.COMPRESSED_SRGB8_ETC2:e.COMPRESSED_RGB8_ETC2;if(37496===a)return c===v?e.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:e.COMPRESSED_RGBA8_ETC2_EAC}if(37808===a||37809===a||37810===a||37811===a||37812===a||37813===a||37814===a||37815===a||37816===a||37817===a||37818===a||37819===a||37820===a||37821===a){if(null===(e=b.get("WEBGL_compressed_texture_astc")))return null;if(37808===a)return c===v?e.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:e.COMPRESSED_RGBA_ASTC_4x4_KHR;if(37809===a)return c===v?e.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:e.COMPRESSED_RGBA_ASTC_5x4_KHR;if(37810===a)return c===v?e.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:e.COMPRESSED_RGBA_ASTC_5x5_KHR;if(37811===a)return c===v?e.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:e.COMPRESSED_RGBA_ASTC_6x5_KHR;if(37812===a)return c===v?e.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:e.COMPRESSED_RGBA_ASTC_6x6_KHR;if(37813===a)return c===v?e.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:e.COMPRESSED_RGBA_ASTC_8x5_KHR;if(37814===a)return c===v?e.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:e.COMPRESSED_RGBA_ASTC_8x6_KHR;if(37815===a)return c===v?e.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:e.COMPRESSED_RGBA_ASTC_8x8_KHR;if(37816===a)return c===v?e.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:e.COMPRESSED_RGBA_ASTC_10x5_KHR;if(37817===a)return c===v?e.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:e.COMPRESSED_RGBA_ASTC_10x6_KHR;if(37818===a)return c===v?e.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:e.COMPRESSED_RGBA_ASTC_10x8_KHR;if(37819===a)return c===v?e.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:e.COMPRESSED_RGBA_ASTC_10x10_KHR;if(37820===a)return c===v?e.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:e.COMPRESSED_RGBA_ASTC_12x10_KHR;if(37821===a)return c===v?e.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:e.COMPRESSED_RGBA_ASTC_12x12_KHR}if(36492===a){if(null===(e=b.get("EXT_texture_compression_bptc")))return null;if(36492===a)return c===v?e.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:e.COMPRESSED_RGBA_BPTC_UNORM_EXT}if(1020===a)return d?34042:null!==(e=b.get("WEBGL_depth_texture"))?e.UNSIGNED_INT_24_8_WEBGL:null}}}ek.prototype.isMeshDistanceMaterial=!0;class ep extends b8{constructor(a=[]){super(),this.cameras=a}}ep.prototype.isArrayCamera=!0;class eq extends bi{constructor(){super(),this.type="Group"}}eq.prototype.isGroup=!0;let er={type:"move"};class es{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return null===this._hand&&(this._hand=new eq,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return null===this._targetRay&&(this._targetRay=new eq,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new aq,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new aq),this._targetRay}getGripSpace(){return null===this._grip&&(this._grip=new eq,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new aq,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new aq),this._grip}dispatchEvent(a){return null!==this._targetRay&&this._targetRay.dispatchEvent(a),null!==this._grip&&this._grip.dispatchEvent(a),null!==this._hand&&this._hand.dispatchEvent(a),this}disconnect(a){return this.dispatchEvent({type:"disconnected",data:a}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}update(a,b,c){let d=null,e=null,f=null,g=this._targetRay,h=this._grip,i=this._hand;if(a&&"visible-blurred"!==b.session.visibilityState){if(null!==g&&null!==(d=b.getPose(a.targetRaySpace,c))&&(g.matrix.fromArray(d.transform.matrix),g.matrix.decompose(g.position,g.rotation,g.scale),d.linearVelocity?(g.hasLinearVelocity=!0,g.linearVelocity.copy(d.linearVelocity)):g.hasLinearVelocity=!1,d.angularVelocity?(g.hasAngularVelocity=!0,g.angularVelocity.copy(d.angularVelocity)):g.hasAngularVelocity=!1,this.dispatchEvent(er)),i&&a.hand){for(let j of(f=!0,a.hand.values())){let k=b.getJointPose(j,c);if(void 0===i.joints[j.jointName]){let l=new eq;l.matrixAutoUpdate=!1,l.visible=!1,i.joints[j.jointName]=l,i.add(l)}let m=i.joints[j.jointName];null!==k&&(m.matrix.fromArray(k.transform.matrix),m.matrix.decompose(m.position,m.rotation,m.scale),m.jointRadius=k.radius),m.visible=null!==k}let n=i.joints["index-finger-tip"],o=i.joints["thumb-tip"],p=n.position.distanceTo(o.position),q=.02,r=.005;i.inputState.pinching&&p>q+r?(i.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:a.handedness,target:this})):!i.inputState.pinching&&p<=q-r&&(i.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:a.handedness,target:this}))}else null!==h&&a.gripSpace&&null!==(e=b.getPose(a.gripSpace,c))&&(h.matrix.fromArray(e.transform.matrix),h.matrix.decompose(h.position,h.rotation,h.scale),e.linearVelocity?(h.hasLinearVelocity=!0,h.linearVelocity.copy(e.linearVelocity)):h.hasLinearVelocity=!1,e.angularVelocity?(h.hasAngularVelocity=!0,h.angularVelocity.copy(e.angularVelocity)):h.hasAngularVelocity=!1)}return null!==g&&(g.visible=null!==d),null!==h&&(h.visible=null!==e),null!==i&&(i.visible=null!==f),this}}class et extends ak{constructor(a,b,c,d,e,f,g,h,i,j){if(1026!==(j=void 0!==j?j:1026)&&1027!==j)throw Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===c&&1026===j&&(c=1012),void 0===c&&1027===j&&(c=1020),super(null,d,e,f,g,h,j,c,i),this.image={width:a,height:b},this.magFilter=void 0!==g?g:l,this.minFilter=void 0!==h?h:l,this.flipY=!1,this.generateMipmaps=!1}}et.prototype.isDepthTexture=!0;class eu extends A{constructor(a,b){super();let c=this,d=null,e=1,f=null,g="local-floor",h=null,i=null,j=null,k=null,l=null,m=b.getContextAttributes(),n=null,o=null,p=[],q=new Map,r=new b8;r.layers.enable(1),r.viewport=new al;let s=new b8;s.layers.enable(2),s.viewport=new al;let t=[r,s],u=new ep;u.layers.enable(1),u.layers.enable(2);let w=null,x=null;function y(a){let b=q.get(a.inputSource);b&&b.dispatchEvent({type:a.type,data:a.inputSource})}function z(){q.forEach(function(a,b){a.disconnect(b)}),q.clear(),w=null,x=null,a.setRenderTarget(n),k=null,j=null,i=null,d=null,o=null,F.stop(),c.isPresenting=!1,c.dispatchEvent({type:"sessionend"})}function A(a){let b=d.inputSources;for(let c=0;c<p.length;c++)q.set(b[c],p[c]);for(let e=0;e<a.removed.length;e++){let f=a.removed[e],g=q.get(f);g&&(g.dispatchEvent({type:"disconnected",data:f}),q.delete(f))}for(let h=0;h<a.added.length;h++){let i=a.added[h],j=q.get(i);j&&j.dispatchEvent({type:"connected",data:i})}}this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(a){let b=p[a];return void 0===b&&(b=new es,p[a]=b),b.getTargetRaySpace()},this.getControllerGrip=function(a){let b=p[a];return void 0===b&&(b=new es,p[a]=b),b.getGripSpace()},this.getHand=function(a){let b=p[a];return void 0===b&&(b=new es,p[a]=b),b.getHandSpace()},this.setFramebufferScaleFactor=function(a){e=a,!0===c.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(a){g=a,!0===c.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return f},this.getBaseLayer=function(){return null!==j?j:k},this.getBinding=function(){return i},this.getFrame=function(){return l},this.getSession=function(){return d},this.setSession=async function(h){if(null!==(d=h)){if(n=a.getRenderTarget(),d.addEventListener("select",y),d.addEventListener("selectstart",y),d.addEventListener("selectend",y),d.addEventListener("squeeze",y),d.addEventListener("squeezestart",y),d.addEventListener("squeezeend",y),d.addEventListener("end",z),d.addEventListener("inputsourceschange",A),!0!==m.xrCompatible&&await b.makeXRCompatible(),void 0===d.renderState.layers|| !1===a.capabilities.isWebGL2){let l={antialias:void 0!==d.renderState.layers||m.antialias,alpha:m.alpha,depth:m.depth,stencil:m.stencil,framebufferScaleFactor:e};k=new XRWebGLLayer(d,b,l),d.updateRenderState({baseLayer:k}),o=new am(k.framebufferWidth,k.framebufferHeight,{format:1023,type:1009,encoding:a.outputEncoding})}else{let p=null,q=null,r=null;m.depth&&(r=m.stencil?35056:33190,p=m.stencil?1027:1026,q=m.stencil?1020:1012);let s={colorFormat:a.outputEncoding===v?35907:32856,depthFormat:r,scaleFactor:e};j=(i=new XRWebGLBinding(d,b)).createProjectionLayer(s),d.updateRenderState({layers:[j]}),o=new am(j.textureWidth,j.textureHeight,{format:1023,type:1009,depthTexture:new et(j.textureWidth,j.textureHeight,q,void 0,void 0,void 0,void 0,void 0,void 0,p),stencilBuffer:m.stencil,encoding:a.outputEncoding,samples:m.antialias?4:0});let t=a.properties.get(o);t.__ignoreDepthValues=j.ignoreDepthValues}o.isXRRenderTarget=!0,this.setFoveation(1),f=await d.requestReferenceSpace(g),F.setContext(d),F.start(),c.isPresenting=!0,c.dispatchEvent({type:"sessionstart"})}};let B=new aq,C=new aq;function D(a,b){null===b?a.matrixWorld.copy(a.matrix):a.matrixWorld.multiplyMatrices(b.matrixWorld,a.matrix),a.matrixWorldInverse.copy(a.matrixWorld).invert()}this.updateCamera=function(a){if(null===d)return;u.near=s.near=r.near=a.near,u.far=s.far=r.far=a.far,(w!==u.near||x!==u.far)&&(d.updateRenderState({depthNear:u.near,depthFar:u.far}),w=u.near,x=u.far);let b=a.parent,c=u.cameras;D(u,b);for(let e=0;e<c.length;e++)D(c[e],b);u.matrixWorld.decompose(u.position,u.quaternion,u.scale),a.position.copy(u.position),a.quaternion.copy(u.quaternion),a.scale.copy(u.scale),a.matrix.copy(u.matrix),a.matrixWorld.copy(u.matrixWorld);let f=a.children;for(let g=0,h=f.length;g<h;g++)f[g].updateMatrixWorld(!0);2===c.length?function(a,b,c){B.setFromMatrixPosition(b.matrixWorld),C.setFromMatrixPosition(c.matrixWorld);let d=B.distanceTo(C),e=b.projectionMatrix.elements,f=c.projectionMatrix.elements,g=e[14]/(e[10]-1),h=e[14]/(e[10]+1),i=(e[9]+1)/e[5],j=(e[9]-1)/e[5],k=(e[8]-1)/e[0],l=(f[8]+1)/f[0],m=d/(-k+l),n=-(m*k);b.matrixWorld.decompose(a.position,a.quaternion,a.scale),a.translateX(n),a.translateZ(m),a.matrixWorld.compose(a.position,a.quaternion,a.scale),a.matrixWorldInverse.copy(a.matrixWorld).invert();let o=g+m,p=h+m;a.projectionMatrix.makePerspective(g*k-n,g*l+(d-n),i*h/p*o,j*h/p*o,o,p)}(u,r,s):u.projectionMatrix.copy(r.projectionMatrix)},this.getCamera=function(){return u},this.getFoveation=function(){return null!==j?j.fixedFoveation:null!==k?k.fixedFoveation:void 0},this.setFoveation=function(a){null!==j&&(j.fixedFoveation=a),null!==k&& void 0!==k.fixedFoveation&&(k.fixedFoveation=a)};let E=null,F=new cj;F.setAnimationLoop(function(b,c){if(h=c.getViewerPose(f),l=c,null!==h){let e=h.views;null!==k&&(a.setRenderTargetFramebuffer(o,k.framebuffer),a.setRenderTarget(o));let g=!1;e.length!==u.cameras.length&&(u.cameras.length=0,g=!0);for(let m=0;m<e.length;m++){let n=e[m],q=null;if(null!==k)q=k.getViewport(n);else{let r=i.getViewSubImage(j,n);q=r.viewport,0===m&&(a.setRenderTargetTextures(o,r.colorTexture,j.ignoreDepthValues?void 0:r.depthStencilTexture),a.setRenderTarget(o))}let s=t[m];s.matrix.fromArray(n.transform.matrix),s.projectionMatrix.fromArray(n.projectionMatrix),s.viewport.set(q.x,q.y,q.width,q.height),0===m&&u.matrix.copy(s.matrix),!0===g&&u.cameras.push(s)}}let v=d.inputSources;for(let w=0;w<p.length;w++){let x=p[w],y=v[w];x.update(y,c,f)}E&&E(b,c),l=null}),this.setAnimationLoop=function(a){E=a},this.dispose=function(){}}}function ev(a,b){function c(c,d){c.opacity.value=d.opacity,d.color&&c.diffuse.value.copy(d.color),d.emissive&&c.emissive.value.copy(d.emissive).multiplyScalar(d.emissiveIntensity),d.map&&(c.map.value=d.map),d.alphaMap&&(c.alphaMap.value=d.alphaMap),d.bumpMap&&(c.bumpMap.value=d.bumpMap,c.bumpScale.value=d.bumpScale,d.side===g&&(c.bumpScale.value*=-1)),d.displacementMap&&(c.displacementMap.value=d.displacementMap,c.displacementScale.value=d.displacementScale,c.displacementBias.value=d.displacementBias),d.emissiveMap&&(c.emissiveMap.value=d.emissiveMap),d.normalMap&&(c.normalMap.value=d.normalMap,c.normalScale.value.copy(d.normalScale),d.side===g&&c.normalScale.value.negate()),d.specularMap&&(c.specularMap.value=d.specularMap),d.alphaTest>0&&(c.alphaTest.value=d.alphaTest);let e=b.get(d).envMap;if(e&&(c.envMap.value=e,c.flipEnvMap.value=e.isCubeTexture&& !1===e.isRenderTargetTexture?-1:1,c.reflectivity.value=d.reflectivity,c.ior.value=d.ior,c.refractionRatio.value=d.refractionRatio),d.lightMap){c.lightMap.value=d.lightMap;let f=!0!==a.physicallyCorrectLights?Math.PI:1;c.lightMapIntensity.value=d.lightMapIntensity*f}d.aoMap&&(c.aoMap.value=d.aoMap,c.aoMapIntensity.value=d.aoMapIntensity);let h;d.map?h=d.map:d.specularMap?h=d.specularMap:d.displacementMap?h=d.displacementMap:d.normalMap?h=d.normalMap:d.bumpMap?h=d.bumpMap:d.roughnessMap?h=d.roughnessMap:d.metalnessMap?h=d.metalnessMap:d.alphaMap?h=d.alphaMap:d.emissiveMap?h=d.emissiveMap:d.clearcoatMap?h=d.clearcoatMap:d.clearcoatNormalMap?h=d.clearcoatNormalMap:d.clearcoatRoughnessMap?h=d.clearcoatRoughnessMap:d.specularIntensityMap?h=d.specularIntensityMap:d.specularColorMap?h=d.specularColorMap:d.transmissionMap?h=d.transmissionMap:d.thicknessMap?h=d.thicknessMap:d.sheenColorMap?h=d.sheenColorMap:d.sheenRoughnessMap&&(h=d.sheenRoughnessMap),void 0!==h&&(h.isWebGLRenderTarget&&(h=h.texture),!0===h.matrixAutoUpdate&&h.updateMatrix(),c.uvTransform.value.copy(h.matrix));let i;d.aoMap?i=d.aoMap:d.lightMap&&(i=d.lightMap),void 0!==i&&(i.isWebGLRenderTarget&&(i=i.texture),!0===i.matrixAutoUpdate&&i.updateMatrix(),c.uv2Transform.value.copy(i.matrix))}return{refreshFogUniforms:function(a,b){a.fogColor.value.copy(b.color),b.isFog?(a.fogNear.value=b.near,a.fogFar.value=b.far):b.isFogExp2&&(a.fogDensity.value=b.density)},refreshMaterialUniforms:function(a,d,e,f,h){var i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C;let D,E;d.isMeshBasicMaterial?c(a,d):d.isMeshLambertMaterial?c(a,d):d.isMeshToonMaterial?(c(a,d),i=a,(j=d).gradientMap&&(i.gradientMap.value=j.gradientMap)):d.isMeshPhongMaterial?(c(a,d),k=a,l=d,k.specular.value.copy(l.specular),k.shininess.value=Math.max(l.shininess,1e-4)):d.isMeshStandardMaterial?(c(a,d),function a(c,d){c.roughness.value=d.roughness,c.metalness.value=d.metalness,d.roughnessMap&&(c.roughnessMap.value=d.roughnessMap),d.metalnessMap&&(c.metalnessMap.value=d.metalnessMap);let e=b.get(d).envMap;e&&(c.envMapIntensity.value=d.envMapIntensity)}(a,d),d.isMeshPhysicalMaterial&&(m=a,n=d,o=h,m.ior.value=n.ior,n.sheen>0&&(m.sheenColor.value.copy(n.sheenColor).multiplyScalar(n.sheen),m.sheenRoughness.value=n.sheenRoughness,n.sheenColorMap&&(m.sheenColorMap.value=n.sheenColorMap),n.sheenRoughnessMap&&(m.sheenRoughnessMap.value=n.sheenRoughnessMap)),n.clearcoat>0&&(m.clearcoat.value=n.clearcoat,m.clearcoatRoughness.value=n.clearcoatRoughness,n.clearcoatMap&&(m.clearcoatMap.value=n.clearcoatMap),n.clearcoatRoughnessMap&&(m.clearcoatRoughnessMap.value=n.clearcoatRoughnessMap),n.clearcoatNormalMap&&(m.clearcoatNormalScale.value.copy(n.clearcoatNormalScale),m.clearcoatNormalMap.value=n.clearcoatNormalMap,n.side===g&&m.clearcoatNormalScale.value.negate())),n.transmission>0&&(m.transmission.value=n.transmission,m.transmissionSamplerMap.value=o.texture,m.transmissionSamplerSize.value.set(o.width,o.height),n.transmissionMap&&(m.transmissionMap.value=n.transmissionMap),m.thickness.value=n.thickness,n.thicknessMap&&(m.thicknessMap.value=n.thicknessMap),m.attenuationDistance.value=n.attenuationDistance,m.attenuationColor.value.copy(n.attenuationColor)),m.specularIntensity.value=n.specularIntensity,m.specularColor.value.copy(n.specularColor),n.specularIntensityMap&&(m.specularIntensityMap.value=n.specularIntensityMap),n.specularColorMap&&(m.specularColorMap.value=n.specularColorMap))):d.isMeshMatcapMaterial?(c(a,d),p=a,(q=d).matcap&&(p.matcap.value=q.matcap)):d.isMeshDepthMaterial?c(a,d):d.isMeshDistanceMaterial?(c(a,d),r=a,s=d,r.referencePosition.value.copy(s.referencePosition),r.nearDistance.value=s.nearDistance,r.farDistance.value=s.farDistance):d.isMeshNormalMaterial?c(a,d):d.isLineBasicMaterial?(t=a,u=d,t.diffuse.value.copy(u.color),t.opacity.value=u.opacity,d.isLineDashedMaterial&&(v=a,w=d,v.dashSize.value=w.dashSize,v.totalSize.value=w.dashSize+w.gapSize,v.scale.value=w.scale)):d.isPointsMaterial?(x=a,y=d,z=e,A=f,x.diffuse.value.copy(y.color),x.opacity.value=y.opacity,x.size.value=y.size*z,x.scale.value=.5*A,y.map&&(x.map.value=y.map),y.alphaMap&&(x.alphaMap.value=y.alphaMap),y.alphaTest>0&&(x.alphaTest.value=y.alphaTest),y.map?D=y.map:y.alphaMap&&(D=y.alphaMap),void 0!==D&&(!0===D.matrixAutoUpdate&&D.updateMatrix(),x.uvTransform.value.copy(D.matrix))):d.isSpriteMaterial?(B=a,C=d,B.diffuse.value.copy(C.color),B.opacity.value=C.opacity,B.rotation.value=C.rotation,C.map&&(B.map.value=C.map),C.alphaMap&&(B.alphaMap.value=C.alphaMap),C.alphaTest>0&&(B.alphaTest.value=C.alphaTest),C.map?E=C.map:C.alphaMap&&(E=C.alphaMap),void 0!==E&&(!0===E.matrixAutoUpdate&&E.updateMatrix(),B.uvTransform.value.copy(E.matrix))):d.isShadowMaterial?(a.color.value.copy(d.color),a.opacity.value=d.opacity):d.isShaderMaterial&&(d.uniformsNeedUpdate=!1)}}}function ew(a={}){let b=void 0!==a.canvas?a.canvas:function(){let a=V("canvas");return a.style.display="block",a}(),c=void 0!==a.context?a.context:null,d=void 0===a.depth||a.depth,e=void 0===a.stencil||a.stencil,i=void 0!==a.antialias&&a.antialias,j=void 0===a.premultipliedAlpha||a.premultipliedAlpha,k=void 0!==a.preserveDrawingBuffer&&a.preserveDrawingBuffer,l=void 0!==a.powerPreference?a.powerPreference:"default",m=void 0!==a.failIfMajorPerformanceCaveat&&a.failIfMajorPerformanceCaveat,n;n=void 0!==a.context?c.getContextAttributes().alpha:void 0!==a.alpha&&a.alpha;let o=null,p=null,r=[],s=[];this.domElement=b,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=3e3,this.physicallyCorrectLights=!1,this.toneMapping=0,this.toneMappingExposure=1;let t=this,u=!1,v=0,w=0,x=null,y=-1,z=null,A=new al,B=new al,C=null,D=b.width,E=b.height,F=1,G=null,H=null,I=new al(0,0,D,E),J=new al(0,0,D,E),K=!1,L=new ci,M=!1,N=!1,P=null,R=new aV,S=new Q,T=new aq,U={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function W(){return null===x?F:1}let X=c;function Y(a,c){for(let d=0;d<a.length;d++){let e=a[d],f=b.getContext(e,c);if(null!==f)return f}return null}try{let Z={alpha:!0,depth:d,stencil:e,antialias:i,premultipliedAlpha:j,preserveDrawingBuffer:k,powerPreference:l,failIfMajorPerformanceCaveat:m};if("setAttribute"in b&&b.setAttribute("data-engine","three.js r139"),b.addEventListener("webglcontextlost",aC,!1),b.addEventListener("webglcontextrestored",aD,!1),null===X){let $=["webgl2","webgl","experimental-webgl"];if(!0===t.isWebGL1Renderer&&$.shift(),X=Y($,Z),null===X){if(Y($))throw Error("Error creating WebGL context with your selected attributes.");throw Error("Error creating WebGL context.")}}void 0===X.getShaderPrecisionFormat&&(X.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(_){throw console.error("THREE.WebGLRenderer: "+_.message),_}let aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,an,ao,ap,ar,as,at,au,av,aw,ax,ay,az;function aA(){aa=new cM(X),ab=new cs(X,aa,a),aa.init(ab),ay=new eo(X,aa,ab),ac=new em(X,aa,ab),ad=new cP(X),ae=new d8,af=new en(X,aa,ac,ae,ab,ay,ad),ag=new cu(t),ah=new cL(t),ai=new ck(X,ab),az=new cq(X,aa,ai,ab),aj=new cN(X,ai,ad,az),ak=new cU(X,aj,ai,ad),av=new cT(X,ab,af),as=new ct(ae),an=new d7(t,ag,ah,aa,ab,az,as),ao=new ev(t,ae),ap=new ec,ar=new ei(aa,ab),au=new cp(t,ag,ac,ak,n,j),at=new el(t,ak,ab),aw=new cr(X,aa,ad,ab),ax=new cO(X,aa,ad,ab),ad.programs=an.programs,t.capabilities=ab,t.extensions=aa,t.properties=ae,t.renderLists=ap,t.shadowMap=at,t.state=ac,t.info=ad}aA();let aB=new eu(t,X);function aC(a){a.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),u=!0}function aD(){console.log("THREE.WebGLRenderer: Context Restored."),u=!1;let a=ad.autoReset,b=at.enabled,c=at.autoUpdate,d=at.needsUpdate,e=at.type;aA(),ad.autoReset=a,at.enabled=b,at.autoUpdate=c,at.needsUpdate=d,at.type=e}function aE(a){let b=a.target;b.removeEventListener("dispose",aE),aF(b)}function aF(a){aG(a),ae.remove(a)}function aG(a){let b=ae.get(a).programs;void 0!==b&&(b.forEach(function(a){an.releaseProgram(a)}),a.isShaderMaterial&&an.releaseShaderCache(a))}this.xr=aB,this.getContext=function(){return X},this.getContextAttributes=function(){return X.getContextAttributes()},this.forceContextLoss=function(){let a=aa.get("WEBGL_lose_context");a&&a.loseContext()},this.forceContextRestore=function(){let a=aa.get("WEBGL_lose_context");a&&a.restoreContext()},this.getPixelRatio=function(){return F},this.setPixelRatio=function(a){void 0!==a&&(F=a,this.setSize(D,E,!1))},this.getSize=function(a){return a.set(D,E)},this.setSize=function(a,c,d){if(aB.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}D=a,E=c,b.width=Math.floor(a*F),b.height=Math.floor(c*F),!1!==d&&(b.style.width=a+"px",b.style.height=c+"px"),this.setViewport(0,0,a,c)},this.getDrawingBufferSize=function(a){return a.set(D*F,E*F).floor()},this.setDrawingBufferSize=function(a,c,d){D=a,E=c,F=d,b.width=Math.floor(a*d),b.height=Math.floor(c*d),this.setViewport(0,0,a,c)},this.getCurrentViewport=function(a){return a.copy(A)},this.getViewport=function(a){return a.copy(I)},this.setViewport=function(a,b,c,d){a.isVector4?I.set(a.x,a.y,a.z,a.w):I.set(a,b,c,d),ac.viewport(A.copy(I).multiplyScalar(F).floor())},this.getScissor=function(a){return a.copy(J)},this.setScissor=function(a,b,c,d){a.isVector4?J.set(a.x,a.y,a.z,a.w):J.set(a,b,c,d),ac.scissor(B.copy(J).multiplyScalar(F).floor())},this.getScissorTest=function(){return K},this.setScissorTest=function(a){ac.setScissorTest(K=a)},this.setOpaqueSort=function(a){G=a},this.setTransparentSort=function(a){H=a},this.getClearColor=function(a){return a.copy(au.getClearColor())},this.setClearColor=function(){au.setClearColor.apply(au,arguments)},this.getClearAlpha=function(){return au.getClearAlpha()},this.setClearAlpha=function(){au.setClearAlpha.apply(au,arguments)},this.clear=function(a=!0,b=!0,c=!0){let d=0;a&&(d|=16384),b&&(d|=256),c&&(d|=1024),X.clear(d)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){b.removeEventListener("webglcontextlost",aC,!1),b.removeEventListener("webglcontextrestored",aD,!1),ap.dispose(),ar.dispose(),ae.dispose(),ag.dispose(),ah.dispose(),ak.dispose(),az.dispose(),an.dispose(),aB.dispose(),aB.removeEventListener("sessionstart",aI),aB.removeEventListener("sessionend",aJ),P&&(P.dispose(),P=null),aK.stop()},this.renderBufferDirect=function(a,b,c,d,e,f){null===b&&(b=U);let g=e.isMesh&&0>e.matrixWorld.determinant(),h=aS(a,b,c,d,e);ac.setMaterial(d,g);let i=c.index,j=c.attributes.position;if(null===i){if(void 0===j||0===j.count)return}else if(0===i.count)return;let k=1;!0===d.wireframe&&(i=aj.getWireframeAttribute(c),k=2),az.setup(e,d,h,c,i);let l,m=aw;null!==i&&(l=ai.get(i),(m=ax).setIndex(l));let n=null!==i?i.count:j.count,o=c.drawRange.start*k,p=c.drawRange.count*k,q=null!==f?f.start*k:0,r=null!==f?f.count*k:1/0,s=Math.max(o,q),t=Math.max(0,Math.min(n,o+p,q+r)-1-s+1);if(0!==t){if(e.isMesh)!0===d.wireframe?(ac.setLineWidth(d.wireframeLinewidth*W()),m.setMode(1)):m.setMode(4);else if(e.isLine){let u=d.linewidth;void 0===u&&(u=1),ac.setLineWidth(u*W()),e.isLineSegments?m.setMode(1):e.isLineLoop?m.setMode(2):m.setMode(3)}else e.isPoints?m.setMode(0):e.isSprite&&m.setMode(4);if(e.isInstancedMesh)m.renderInstances(s,t,e.count);else if(c.isInstancedBufferGeometry){let v=Math.min(c.instanceCount,c._maxInstanceCount);m.renderInstances(s,t,v)}else m.render(s,t)}},this.compile=function(a,b){(p=ar.get(a)).init(),s.push(p),a.traverseVisible(function(a){a.isLight&&a.layers.test(b.layers)&&(p.pushLight(a),a.castShadow&&p.pushShadow(a))}),p.setupLights(t.physicallyCorrectLights),a.traverse(function(b){let c=b.material;if(c){if(Array.isArray(c))for(let d=0;d<c.length;d++){let e=c[d];aQ(e,a,b)}else aQ(c,a,b)}}),s.pop(),p=null};let aH=null;function aI(){aK.stop()}function aJ(){aK.start()}let aK=new cj;function aL(a,b,c,d){if(!1===a.visible)return;let e=a.layers.test(b.layers);if(e){if(a.isGroup)c=a.renderOrder;else if(a.isLOD)!0===a.autoUpdate&&a.update(b);else if(a.isLight)p.pushLight(a),a.castShadow&&p.pushShadow(a);else if(a.isSprite){if(!a.frustumCulled||L.intersectsSprite(a)){d&&T.setFromMatrixPosition(a.matrixWorld).applyMatrix4(R);let f=ak.update(a),g=a.material;g.visible&&o.push(a,f,g,c,T.z,null)}}else if((a.isMesh||a.isLine||a.isPoints)&&(a.isSkinnedMesh&&a.skeleton.frame!==ad.render.frame&&(a.skeleton.update(),a.skeleton.frame=ad.render.frame),!a.frustumCulled||L.intersectsObject(a))){d&&T.setFromMatrixPosition(a.matrixWorld).applyMatrix4(R);let h=ak.update(a),i=a.material;if(Array.isArray(i)){let j=h.groups;for(let k=0,l=j.length;k<l;k++){let m=j[k],n=i[m.materialIndex];n&&n.visible&&o.push(a,h,n,c,T.z,m)}}else i.visible&&o.push(a,h,i,c,T.z,null)}}let q=a.children;for(let r=0,s=q.length;r<s;r++)aL(q[r],b,c,d)}function aM(a,b,c,d){let e=a.opaque,f=a.transmissive,g=a.transparent;p.setupLightsView(c),f.length>0&&aN(e,b,c),d&&ac.viewport(A.copy(d)),e.length>0&&aO(e,b,c),f.length>0&&aO(f,b,c),g.length>0&&aO(g,b,c),ac.buffers.depth.setTest(!0),ac.buffers.depth.setMask(!0),ac.buffers.color.setMask(!0),ac.setPolygonOffset(!1)}function aN(a,b,c){let d=ab.isWebGL2;null===P&&(P=new am(1,1,{generateMipmaps:!0,type:null!==ay.convert(1016)?1016:1009,minFilter:q,samples:d&& !0===i?4:0})),t.getDrawingBufferSize(S),d?P.setSize(S.x,S.y):P.setSize(O(S.x),O(S.y));let e=t.getRenderTarget();t.setRenderTarget(P),t.clear();let f=t.toneMapping;t.toneMapping=0,aO(a,b,c),t.toneMapping=f,af.updateMultisampleRenderTarget(P),af.updateRenderTargetMipmap(P),t.setRenderTarget(e)}function aO(a,b,c){let d=!0===b.isScene?b.overrideMaterial:null;for(let e=0,f=a.length;e<f;e++){let g=a[e],h=g.object,i=g.geometry,j=null===d?g.material:d,k=g.group;h.layers.test(c.layers)&&aP(h,b,c,i,j,k)}}function aP(a,b,c,d,e,i){a.onBeforeRender(t,b,c,d,e,i),a.modelViewMatrix.multiplyMatrices(c.matrixWorldInverse,a.matrixWorld),a.normalMatrix.getNormalMatrix(a.modelViewMatrix),e.onBeforeRender(t,b,c,d,a,i),!0===e.transparent&&e.side===h?(e.side=g,e.needsUpdate=!0,t.renderBufferDirect(c,b,d,e,a,i),e.side=f,e.needsUpdate=!0,t.renderBufferDirect(c,b,d,e,a,i),e.side=h):t.renderBufferDirect(c,b,d,e,a,i),a.onAfterRender(t,b,c,d,e,i)}function aQ(a,b,c){!0!==b.isScene&&(b=U);let d=ae.get(a),e=p.state.lights,f=p.state.shadowsArray,g=e.state.version,h=an.getParameters(a,e.state,f,b,c),i=an.getProgramCacheKey(h),j=d.programs;d.environment=a.isMeshStandardMaterial?b.environment:null,d.fog=b.fog,d.envMap=(a.isMeshStandardMaterial?ah:ag).get(a.envMap||d.environment),void 0===j&&(a.addEventListener("dispose",aE),j=new Map,d.programs=j);let k=j.get(i);if(void 0!==k){if(d.currentProgram===k&&d.lightsStateVersion===g)return aR(a,h),k}else h.uniforms=an.getUniforms(a),a.onBuild(c,h,t),a.onBeforeCompile(h,t),k=an.acquireProgram(h,i),j.set(i,k),d.uniforms=h.uniforms;let l=d.uniforms;(a.isShaderMaterial||a.isRawShaderMaterial)&& !0!==a.clipping||(l.clippingPlanes=as.uniform),aR(a,h),d.needsLights=aU(a),d.lightsStateVersion=g,d.needsLights&&(l.ambientLightColor.value=e.state.ambient,l.lightProbe.value=e.state.probe,l.directionalLights.value=e.state.directional,l.directionalLightShadows.value=e.state.directionalShadow,l.spotLights.value=e.state.spot,l.spotLightShadows.value=e.state.spotShadow,l.rectAreaLights.value=e.state.rectArea,l.ltc_1.value=e.state.rectAreaLTC1,l.ltc_2.value=e.state.rectAreaLTC2,l.pointLights.value=e.state.point,l.pointLightShadows.value=e.state.pointShadow,l.hemisphereLights.value=e.state.hemi,l.directionalShadowMap.value=e.state.directionalShadowMap,l.directionalShadowMatrix.value=e.state.directionalShadowMatrix,l.spotShadowMap.value=e.state.spotShadowMap,l.spotShadowMatrix.value=e.state.spotShadowMatrix,l.pointShadowMap.value=e.state.pointShadowMap,l.pointShadowMatrix.value=e.state.pointShadowMatrix);let m=k.getUniforms(),n=dP.seqWithValue(m.seq,l);return d.currentProgram=k,d.uniformsList=n,k}function aR(a,b){let c=ae.get(a);c.outputEncoding=b.outputEncoding,c.instancing=b.instancing,c.skinning=b.skinning,c.morphTargets=b.morphTargets,c.morphNormals=b.morphNormals,c.morphColors=b.morphColors,c.morphTargetsCount=b.morphTargetsCount,c.numClippingPlanes=b.numClippingPlanes,c.numIntersection=b.numClipIntersection,c.vertexAlphas=b.vertexAlphas,c.vertexTangents=b.vertexTangents,c.toneMapping=b.toneMapping}function aS(a,b,c,d,e){!0!==b.isScene&&(b=U),af.resetTextureUnits();let f=b.fog,g=d.isMeshStandardMaterial?b.environment:null,h=null===x?t.outputEncoding:!0===x.isXRRenderTarget?x.texture.encoding:3e3,i=(d.isMeshStandardMaterial?ah:ag).get(d.envMap||g),j=!0===d.vertexColors&&!!c.attributes.color&&4===c.attributes.color.itemSize,k=!!d.normalMap&&!!c.attributes.tangent,l=!!c.morphAttributes.position,m=!!c.morphAttributes.normal,n=!!c.morphAttributes.color,o=d.toneMapped?t.toneMapping:0,q=c.morphAttributes.position||c.morphAttributes.normal||c.morphAttributes.color,r=void 0!==q?q.length:0,s=ae.get(d),u=p.state.lights;if(!0===M&&(!0===N||a!==z)){let v=a===z&&d.id===y;as.setState(d,a,v)}let w=!1;d.version===s.__version?s.needsLights&&s.lightsStateVersion!==u.state.version?w=!0:s.outputEncoding!==h?w=!0:e.isInstancedMesh&& !1===s.instancing?w=!0:e.isInstancedMesh|| !0!==s.instancing?e.isSkinnedMesh&& !1===s.skinning?w=!0:e.isSkinnedMesh|| !0!==s.skinning?s.envMap!==i?w=!0:d.fog&&s.fog!==f?w=!0:void 0!==s.numClippingPlanes&&(s.numClippingPlanes!==as.numPlanes||s.numIntersection!==as.numIntersection)?w=!0:s.vertexAlphas!==j?w=!0:s.vertexTangents!==k?w=!0:s.morphTargets!==l?w=!0:s.morphNormals!==m?w=!0:s.morphColors!==n?w=!0:s.toneMapping!==o?w=!0:!0===ab.isWebGL2&&s.morphTargetsCount!==r&&(w=!0):w=!0:w=!0:(w=!0,s.__version=d.version);let A=s.currentProgram;!0===w&&(A=aQ(d,b,e));let B=!1,C=!1,D=!1,G=A.getUniforms(),H=s.uniforms;if(ac.useProgram(A.program)&&(B=!0,C=!0,D=!0),d.id!==y&&(y=d.id,C=!0),B||z!==a){if(G.setValue(X,"projectionMatrix",a.projectionMatrix),ab.logarithmicDepthBuffer&&G.setValue(X,"logDepthBufFC",2/(Math.log(a.far+1)/Math.LN2)),z!==a&&(z=a,C=!0,D=!0),d.isShaderMaterial||d.isMeshPhongMaterial||d.isMeshToonMaterial||d.isMeshStandardMaterial||d.envMap){let I=G.map.cameraPosition;void 0!==I&&I.setValue(X,T.setFromMatrixPosition(a.matrixWorld))}(d.isMeshPhongMaterial||d.isMeshToonMaterial||d.isMeshLambertMaterial||d.isMeshBasicMaterial||d.isMeshStandardMaterial||d.isShaderMaterial)&&G.setValue(X,"isOrthographic",!0===a.isOrthographicCamera),(d.isMeshPhongMaterial||d.isMeshToonMaterial||d.isMeshLambertMaterial||d.isMeshBasicMaterial||d.isMeshStandardMaterial||d.isShaderMaterial||d.isShadowMaterial||e.isSkinnedMesh)&&G.setValue(X,"viewMatrix",a.matrixWorldInverse)}if(e.isSkinnedMesh){G.setOptional(X,e,"bindMatrix"),G.setOptional(X,e,"bindMatrixInverse");let J=e.skeleton;J&&(ab.floatVertexTextures?(null===J.boneTexture&&J.computeBoneTexture(),G.setValue(X,"boneTexture",J.boneTexture,af),G.setValue(X,"boneTextureSize",J.boneTextureSize)):G.setOptional(X,J,"boneMatrices"))}let K=c.morphAttributes;return(void 0!==K.position|| void 0!==K.normal|| void 0!==K.color&& !0===ab.isWebGL2)&&av.update(e,c,d,A),(C||s.receiveShadow!==e.receiveShadow)&&(s.receiveShadow=e.receiveShadow,G.setValue(X,"receiveShadow",e.receiveShadow)),C&&(G.setValue(X,"toneMappingExposure",t.toneMappingExposure),s.needsLights&&aT(H,D),f&&d.fog&&ao.refreshFogUniforms(H,f),ao.refreshMaterialUniforms(H,d,F,E,P),dP.upload(X,s.uniformsList,H,af)),d.isShaderMaterial&& !0===d.uniformsNeedUpdate&&(dP.upload(X,s.uniformsList,H,af),d.uniformsNeedUpdate=!1),d.isSpriteMaterial&&G.setValue(X,"center",e.center),G.setValue(X,"modelViewMatrix",e.modelViewMatrix),G.setValue(X,"normalMatrix",e.normalMatrix),G.setValue(X,"modelMatrix",e.matrixWorld),A}function aT(a,b){a.ambientLightColor.needsUpdate=b,a.lightProbe.needsUpdate=b,a.directionalLights.needsUpdate=b,a.directionalLightShadows.needsUpdate=b,a.pointLights.needsUpdate=b,a.pointLightShadows.needsUpdate=b,a.spotLights.needsUpdate=b,a.spotLightShadows.needsUpdate=b,a.rectAreaLights.needsUpdate=b,a.hemisphereLights.needsUpdate=b}function aU(a){return a.isMeshLambertMaterial||a.isMeshToonMaterial||a.isMeshPhongMaterial||a.isMeshStandardMaterial||a.isShadowMaterial||a.isShaderMaterial&& !0===a.lights}aK.setAnimationLoop(function(a){aH&&aH(a)}),"undefined"!=typeof self&&aK.setContext(self),this.setAnimationLoop=function(a){aH=a,aB.setAnimationLoop(a),null===a?aK.stop():aK.start()},aB.addEventListener("sessionstart",aI),aB.addEventListener("sessionend",aJ),this.render=function(a,b){if(void 0!==b&& !0!==b.isCamera){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(!0===u)return;!0===a.autoUpdate&&a.updateMatrixWorld(),null===b.parent&&b.updateMatrixWorld(),!0===aB.enabled&& !0===aB.isPresenting&&(!0===aB.cameraAutoUpdate&&aB.updateCamera(b),b=aB.getCamera()),!0===a.isScene&&a.onBeforeRender(t,a,b,x),(p=ar.get(a,s.length)).init(),s.push(p),R.multiplyMatrices(b.projectionMatrix,b.matrixWorldInverse),L.setFromProjectionMatrix(R),N=this.localClippingEnabled,M=as.init(this.clippingPlanes,N,b),(o=ap.get(a,r.length)).init(),r.push(o),aL(a,b,0,t.sortObjects),o.finish(),!0===t.sortObjects&&o.sort(G,H),!0===M&&as.beginShadows();let c=p.state.shadowsArray;if(at.render(c,a,b),!0===M&&as.endShadows(),!0===this.info.autoReset&&this.info.reset(),au.render(o,a),p.setupLights(t.physicallyCorrectLights),b.isArrayCamera){let d=b.cameras;for(let e=0,f=d.length;e<f;e++){let g=d[e];aM(o,a,g,g.viewport)}}else aM(o,a,b);null!==x&&(af.updateMultisampleRenderTarget(x),af.updateRenderTargetMipmap(x)),!0===a.isScene&&a.onAfterRender(t,a,b),az.resetDefaultState(),y=-1,z=null,s.pop(),p=s.length>0?s[s.length-1]:null,r.pop(),o=r.length>0?r[r.length-1]:null},this.getActiveCubeFace=function(){return v},this.getActiveMipmapLevel=function(){return w},this.getRenderTarget=function(){return x},this.setRenderTargetTextures=function(a,b,c){ae.get(a.texture).__webglTexture=b,ae.get(a.depthTexture).__webglTexture=c;let d=ae.get(a);d.__hasExternalTextures=!0,d.__hasExternalTextures&&(d.__autoAllocateDepthBuffer=void 0===c,d.__autoAllocateDepthBuffer|| !0!==aa.has("WEBGL_multisampled_render_to_texture")||(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),d.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(a,b){let c=ae.get(a);c.__webglFramebuffer=b,c.__useDefaultFramebuffer=void 0===b},this.setRenderTarget=function(a,b=0,c=0){x=a,v=b,w=c;let d=!0;if(a){let e=ae.get(a);void 0!==e.__useDefaultFramebuffer?(ac.bindFramebuffer(36160,null),d=!1):void 0===e.__webglFramebuffer?af.setupRenderTarget(a):e.__hasExternalTextures&&af.rebindTextures(a,ae.get(a.texture).__webglTexture,ae.get(a.depthTexture).__webglTexture)}let f=null,g=!1,h=!1;if(a){let i=a.texture;(i.isData3DTexture||i.isDataArrayTexture)&&(h=!0);let j=ae.get(a).__webglFramebuffer;a.isWebGLCubeRenderTarget?(f=j[b],g=!0):f=ab.isWebGL2&&a.samples>0&& !1===af.useMultisampledRTT(a)?ae.get(a).__webglMultisampledFramebuffer:j,A.copy(a.viewport),B.copy(a.scissor),C=a.scissorTest}else A.copy(I).multiplyScalar(F).floor(),B.copy(J).multiplyScalar(F).floor(),C=K;let k=ac.bindFramebuffer(36160,f);if(k&&ab.drawBuffers&&d&&ac.drawBuffers(a,f),ac.viewport(A),ac.scissor(B),ac.setScissorTest(C),g){let l=ae.get(a.texture);X.framebufferTexture2D(36160,36064,34069+b,l.__webglTexture,c)}else if(h){let m=ae.get(a.texture),n=b||0;X.framebufferTextureLayer(36160,36064,m.__webglTexture,c||0,n)}y=-1},this.readRenderTargetPixels=function(a,b,c,d,e,f,g){if(!(a&&a.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let h=ae.get(a).__webglFramebuffer;if(a.isWebGLCubeRenderTarget&& void 0!==g&&(h=h[g]),h){ac.bindFramebuffer(36160,h);try{let i=a.texture,j=i.format,k=i.type;if(1023!==j&&ay.convert(j)!==X.getParameter(35739)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}let l=1016===k&&(aa.has("EXT_color_buffer_half_float")||ab.isWebGL2&&aa.has("EXT_color_buffer_float"));if(1009!==k&&ay.convert(k)!==X.getParameter(35738)&&!(1015===k&&(ab.isWebGL2||aa.has("OES_texture_float")||aa.has("WEBGL_color_buffer_float")))&&!l){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}b>=0&&b<=a.width-d&&c>=0&&c<=a.height-e&&X.readPixels(b,c,d,e,ay.convert(j),ay.convert(k),f)}finally{let m=null!==x?ae.get(x).__webglFramebuffer:null;ac.bindFramebuffer(36160,m)}}},this.copyFramebufferToTexture=function(a,b,c=0){if(!0!==b.isFramebufferTexture){console.error("THREE.WebGLRenderer: copyFramebufferToTexture() can only be used with FramebufferTexture.");return}let d=Math.pow(2,-c),e=Math.floor(b.image.width*d),f=Math.floor(b.image.height*d);af.setTexture2D(b,0),X.copyTexSubImage2D(3553,c,0,0,a.x,a.y,e,f),ac.unbindTexture()},this.copyTextureToTexture=function(a,b,c,d=0){let e=b.image.width,f=b.image.height,g=ay.convert(c.format),h=ay.convert(c.type);af.setTexture2D(c,0),X.pixelStorei(37440,c.flipY),X.pixelStorei(37441,c.premultiplyAlpha),X.pixelStorei(3317,c.unpackAlignment),b.isDataTexture?X.texSubImage2D(3553,d,a.x,a.y,e,f,g,h,b.image.data):b.isCompressedTexture?X.compressedTexSubImage2D(3553,d,a.x,a.y,b.mipmaps[0].width,b.mipmaps[0].height,g,b.mipmaps[0].data):X.texSubImage2D(3553,d,a.x,a.y,g,h,b.image),0===d&&c.generateMipmaps&&X.generateMipmap(3553),ac.unbindTexture()},this.copyTextureToTexture3D=function(a,b,c,d,e=0){if(t.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}let f=a.max.x-a.min.x+1,g=a.max.y-a.min.y+1,h=a.max.z-a.min.z+1,i=ay.convert(d.format),j=ay.convert(d.type),k;if(d.isData3DTexture)af.setTexture3D(d,0),k=32879;else if(d.isDataArrayTexture)af.setTexture2DArray(d,0),k=35866;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}X.pixelStorei(37440,d.flipY),X.pixelStorei(37441,d.premultiplyAlpha),X.pixelStorei(3317,d.unpackAlignment);let l=X.getParameter(3314),m=X.getParameter(32878),n=X.getParameter(3316),o=X.getParameter(3315),p=X.getParameter(32877),q=c.isCompressedTexture?c.mipmaps[0]:c.image;X.pixelStorei(3314,q.width),X.pixelStorei(32878,q.height),X.pixelStorei(3316,a.min.x),X.pixelStorei(3315,a.min.y),X.pixelStorei(32877,a.min.z),c.isDataTexture||c.isData3DTexture?X.texSubImage3D(k,e,b.x,b.y,b.z,f,g,h,i,j,q.data):c.isCompressedTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),X.compressedTexSubImage3D(k,e,b.x,b.y,b.z,f,g,h,i,q.data)):X.texSubImage3D(k,e,b.x,b.y,b.z,f,g,h,i,j,q),X.pixelStorei(3314,l),X.pixelStorei(32878,m),X.pixelStorei(3316,n),X.pixelStorei(3315,o),X.pixelStorei(32877,p),0===e&&d.generateMipmaps&&X.generateMipmap(k),ac.unbindTexture()},this.initTexture=function(a){af.setTexture2D(a,0),ac.unbindTexture()},this.resetState=function(){v=0,w=0,x=null,ac.reset(),az.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}ew.prototype.isWebGLRenderer=!0,(class extends ew{}).prototype.isWebGL1Renderer=!0;class ex{constructor(a,b=25e-5){this.name="",this.color=new ae(a),this.density=b}clone(){return new ex(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}ex.prototype.isFogExp2=!0;class ey{constructor(a,b=1,c=1e3){this.name="",this.color=new ae(a),this.near=b,this.far=c}clone(){return new ey(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}ey.prototype.isFog=!0;class ez extends bi{constructor(){super(),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(a,b){return super.copy(a,b),null!==a.background&&(this.background=a.background.clone()),null!==a.environment&&(this.environment=a.environment.clone()),null!==a.fog&&(this.fog=a.fog.clone()),null!==a.overrideMaterial&&(this.overrideMaterial=a.overrideMaterial.clone()),this.autoUpdate=a.autoUpdate,this.matrixAutoUpdate=a.matrixAutoUpdate,this}toJSON(a){let b=super.toJSON(a);return null!==this.fog&&(b.object.fog=this.fog.toJSON()),b}}ez.prototype.isScene=!0;class eA{constructor(a,b){this.array=a,this.stride=b,this.count=void 0!==a?a.length/b:0,this.usage=35044,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=G()}onUploadCallback(){}set needsUpdate(a){!0===a&&this.version++}setUsage(a){return this.usage=a,this}copy(a){return this.array=new a.array.constructor(a.array),this.count=a.count,this.stride=a.stride,this.usage=a.usage,this}copyAt(a,b,c){a*=this.stride,c*=b.stride;for(let d=0,e=this.stride;d<e;d++)this.array[a+d]=b.array[c+d];return this}set(a,b=0){return this.array.set(a,b),this}clone(a){void 0===a.arrayBuffers&&(a.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=G()),void 0===a.arrayBuffers[this.array.buffer._uuid]&&(a.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);let b=new this.array.constructor(a.arrayBuffers[this.array.buffer._uuid]),c=new this.constructor(b,this.stride);return c.setUsage(this.usage),c}onUpload(a){return this.onUploadCallback=a,this}toJSON(a){return void 0===a.arrayBuffers&&(a.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=G()),void 0===a.arrayBuffers[this.array.buffer._uuid]&&(a.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}eA.prototype.isInterleavedBuffer=!0;let eB=new aq;class eC{constructor(a,b,c,d=!1){this.name="",this.data=a,this.itemSize=b,this.offset=c,this.normalized=!0===d}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(a){this.data.needsUpdate=a}applyMatrix4(a){for(let b=0,c=this.data.count;b<c;b++)eB.fromBufferAttribute(this,b),eB.applyMatrix4(a),this.setXYZ(b,eB.x,eB.y,eB.z);return this}applyNormalMatrix(a){for(let b=0,c=this.count;b<c;b++)eB.fromBufferAttribute(this,b),eB.applyNormalMatrix(a),this.setXYZ(b,eB.x,eB.y,eB.z);return this}transformDirection(a){for(let b=0,c=this.count;b<c;b++)eB.fromBufferAttribute(this,b),eB.transformDirection(a),this.setXYZ(b,eB.x,eB.y,eB.z);return this}setX(a,b){return this.data.array[a*this.data.stride+this.offset]=b,this}setY(a,b){return this.data.array[a*this.data.stride+this.offset+1]=b,this}setZ(a,b){return this.data.array[a*this.data.stride+this.offset+2]=b,this}setW(a,b){return this.data.array[a*this.data.stride+this.offset+3]=b,this}getX(a){return this.data.array[a*this.data.stride+this.offset]}getY(a){return this.data.array[a*this.data.stride+this.offset+1]}getZ(a){return this.data.array[a*this.data.stride+this.offset+2]}getW(a){return this.data.array[a*this.data.stride+this.offset+3]}setXY(a,b,c){return a=a*this.data.stride+this.offset,this.data.array[a+0]=b,this.data.array[a+1]=c,this}setXYZ(a,b,c,d){return a=a*this.data.stride+this.offset,this.data.array[a+0]=b,this.data.array[a+1]=c,this.data.array[a+2]=d,this}setXYZW(a,b,c,d,e){return a=a*this.data.stride+this.offset,this.data.array[a+0]=b,this.data.array[a+1]=c,this.data.array[a+2]=d,this.data.array[a+3]=e,this}clone(a){if(void 0!==a)return void 0===a.interleavedBuffers&&(a.interleavedBuffers={}),void 0===a.interleavedBuffers[this.data.uuid]&&(a.interleavedBuffers[this.data.uuid]=this.data.clone(a)),new eC(a.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized);{console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");let b=[];for(let c=0;c<this.count;c++){let d=c*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)b.push(this.data.array[d+e])}return new bz(new this.array.constructor(b),this.itemSize,this.normalized)}}toJSON(a){if(void 0!==a)return void 0===a.interleavedBuffers&&(a.interleavedBuffers={}),void 0===a.interleavedBuffers[this.data.uuid]&&(a.interleavedBuffers[this.data.uuid]=this.data.toJSON(a)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized};{console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");let b=[];for(let c=0;c<this.count;c++){let d=c*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)b.push(this.data.array[d+e])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:b,normalized:this.normalized}}}}eC.prototype.isInterleavedBufferAttribute=!0;class eD extends bv{constructor(a){super(),this.type="SpriteMaterial",this.color=new ae(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(a)}copy(a){return super.copy(a),this.color.copy(a.color),this.map=a.map,this.alphaMap=a.alphaMap,this.rotation=a.rotation,this.sizeAttenuation=a.sizeAttenuation,this}}eD.prototype.isSpriteMaterial=!0;let eE,eF=new aq,eG=new aq,eH=new aq,eI=new Q,eJ=new Q,eK=new aV,eL=new aq,eM=new aq,eN=new aq,eO=new Q,eP=new Q,eQ=new Q;function eR(a,b,c,d,e,f){eI.subVectors(a,c).addScalar(.5).multiply(d),void 0!==e?(eJ.x=f*eI.x-e*eI.y,eJ.y=e*eI.x+f*eI.y):eJ.copy(eI),a.copy(b),a.x+=eJ.x,a.y+=eJ.y,a.applyMatrix4(eK)}(class a extends bi{constructor(a){if(super(),this.type="Sprite",void 0===eE){eE=new bK;let b=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),c=new eA(b,5);eE.setIndex([0,1,2,0,2,3]),eE.setAttribute("position",new eC(c,3,0,!1)),eE.setAttribute("uv",new eC(c,2,3,!1))}this.geometry=eE,this.material=void 0!==a?a:new eD,this.center=new Q(.5,.5)}raycast(a,b){null===a.camera&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),eG.setFromMatrixScale(this.matrixWorld),eK.copy(a.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(a.camera.matrixWorldInverse,this.matrixWorld),eH.setFromMatrixPosition(this.modelViewMatrix),a.camera.isPerspectiveCamera&& !1===this.material.sizeAttenuation&&eG.multiplyScalar(-eH.z);let c=this.material.rotation,d,e;0!==c&&(e=Math.cos(c),d=Math.sin(c));let f=this.center;eR(eL.set(-.5,-.5,0),eH,f,eG,d,e),eR(eM.set(.5,-.5,0),eH,f,eG,d,e),eR(eN.set(.5,.5,0),eH,f,eG,d,e),eO.set(0,0),eP.set(1,0),eQ.set(1,1);let g=a.ray.intersectTriangle(eL,eM,eN,!1,eF);if(null===g&&(eR(eM.set(-.5,.5,0),eH,f,eG,d,e),eP.set(0,1),null===(g=a.ray.intersectTriangle(eL,eN,eM,!1,eF))))return;let h=a.ray.origin.distanceTo(eF);h<a.near||h>a.far||b.push({distance:h,point:eF.clone(),uv:bt.getUV(eF,eL,eM,eN,eO,eP,eQ,new Q),face:null,object:this})}copy(a){return super.copy(a),void 0!==a.center&&this.center.copy(a.center),this.material=a.material,this}}).prototype.isSprite=!0;let eS=new aq,eT=new aq,eU=new aq,eV=new al,eW=new al,eX=new aq,eY=new aV;class eZ extends b0{constructor(a,b){super(a,b),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new aV,this.bindMatrixInverse=new aV}copy(a){return super.copy(a),this.bindMode=a.bindMode,this.bindMatrix.copy(a.bindMatrix),this.bindMatrixInverse.copy(a.bindMatrixInverse),this.skeleton=a.skeleton,this}bind(a,b){this.skeleton=a,void 0===b&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),b=this.matrixWorld),this.bindMatrix.copy(b),this.bindMatrixInverse.copy(b).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){let a=new al,b=this.geometry.attributes.skinWeight;for(let c=0,d=b.count;c<d;c++){a.fromBufferAttribute(b,c);let e=1/a.manhattanLength();e!==1/0?a.multiplyScalar(e):a.set(1,0,0,0),b.setXYZW(c,a.x,a.y,a.z,a.w)}}updateMatrixWorld(a){super.updateMatrixWorld(a),"attached"===this.bindMode?this.bindMatrixInverse.copy(this.matrixWorld).invert():"detached"===this.bindMode?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}boneTransform(a,b){let c=this.skeleton,d=this.geometry;eV.fromBufferAttribute(d.attributes.skinIndex,a),eW.fromBufferAttribute(d.attributes.skinWeight,a),eU.copy(b).applyMatrix4(this.bindMatrix),b.set(0,0,0);for(let e=0;e<4;e++){let f=eW.getComponent(e);if(0!==f){let g=eV.getComponent(e);eY.multiplyMatrices(c.bones[g].matrixWorld,c.boneInverses[g]),b.addScaledVector(eX.copy(eU).applyMatrix4(eY),f)}}return b.applyMatrix4(this.bindMatrixInverse)}}eZ.prototype.isSkinnedMesh=!0;class e$ extends bi{constructor(){super(),this.type="Bone"}}e$.prototype.isBone=!0;class e_ extends ak{constructor(a=null,b=1,c=1,d,e,f,g,h,i=l,j=l,k,m){super(null,f,g,h,i,j,d,e,k,m),this.image={data:a,width:b,height:c},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}e_.prototype.isDataTexture=!0;let e0=new aV,e1=new aV;class e2{constructor(a=[],b=[]){this.uuid=G(),this.bones=a.slice(0),this.boneInverses=b,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.frame=-1,this.init()}init(){let a=this.bones,b=this.boneInverses;if(this.boneMatrices=new Float32Array(16*a.length),0===b.length)this.calculateInverses();else if(a.length!==b.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let c=0,d=this.bones.length;c<d;c++)this.boneInverses.push(new aV)}}calculateInverses(){this.boneInverses.length=0;for(let a=0,b=this.bones.length;a<b;a++){let c=new aV;this.bones[a]&&c.copy(this.bones[a].matrixWorld).invert(),this.boneInverses.push(c)}}pose(){for(let a=0,b=this.bones.length;a<b;a++){let c=this.bones[a];c&&c.matrixWorld.copy(this.boneInverses[a]).invert()}for(let d=0,e=this.bones.length;d<e;d++){let f=this.bones[d];f&&(f.parent&&f.parent.isBone?(f.matrix.copy(f.parent.matrixWorld).invert(),f.matrix.multiply(f.matrixWorld)):f.matrix.copy(f.matrixWorld),f.matrix.decompose(f.position,f.quaternion,f.scale))}}update(){let a=this.bones,b=this.boneInverses,c=this.boneMatrices,d=this.boneTexture;for(let e=0,f=a.length;e<f;e++){let g=a[e]?a[e].matrixWorld:e1;e0.multiplyMatrices(g,b[e]),e0.toArray(c,16*e)}null!==d&&(d.needsUpdate=!0)}clone(){return new e2(this.bones,this.boneInverses)}computeBoneTexture(){let a=Math.sqrt(4*this.bones.length);a=Math.max(a=N(a),4);let b=new Float32Array(a*a*4);b.set(this.boneMatrices);let c=new e_(b,a,a,1023,1015);return c.needsUpdate=!0,this.boneMatrices=b,this.boneTexture=c,this.boneTextureSize=a,this}getBoneByName(a){for(let b=0,c=this.bones.length;b<c;b++){let d=this.bones[b];if(d.name===a)return d}}dispose(){null!==this.boneTexture&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(a,b){this.uuid=a.uuid;for(let c=0,d=a.bones.length;c<d;c++){let e=a.bones[c],f=b[e];void 0===f&&(console.warn("THREE.Skeleton: No bone found with UUID:",e),f=new e$),this.bones.push(f),this.boneInverses.push(new aV().fromArray(a.boneInverses[c]))}return this.init(),this}toJSON(){let a={metadata:{version:4.5,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};a.uuid=this.uuid;let b=this.bones,c=this.boneInverses;for(let d=0,e=b.length;d<e;d++){let f=b[d];a.bones.push(f.uuid);let g=c[d];a.boneInverses.push(g.toArray())}return a}}class e3 extends bz{constructor(a,b,c,d=1){"number"==typeof c&&(d=c,c=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),super(a,b,c),this.meshPerAttribute=d}copy(a){return super.copy(a),this.meshPerAttribute=a.meshPerAttribute,this}toJSON(){let a=super.toJSON();return a.meshPerAttribute=this.meshPerAttribute,a.isInstancedBufferAttribute=!0,a}}e3.prototype.isInstancedBufferAttribute=!0;let e4=new aV,e5=new aV,e6=[],e7=new b0;(class a extends b0{constructor(a,b,c){super(a,b),this.instanceMatrix=new e3(new Float32Array(16*c),16),this.instanceColor=null,this.count=c,this.frustumCulled=!1}copy(a){return super.copy(a),this.instanceMatrix.copy(a.instanceMatrix),null!==a.instanceColor&&(this.instanceColor=a.instanceColor.clone()),this.count=a.count,this}getColorAt(a,b){b.fromArray(this.instanceColor.array,3*a)}getMatrixAt(a,b){b.fromArray(this.instanceMatrix.array,16*a)}raycast(a,b){let c=this.matrixWorld,d=this.count;if(e7.geometry=this.geometry,e7.material=this.material,void 0!==e7.material)for(let e=0;e<d;e++){this.getMatrixAt(e,e4),e5.multiplyMatrices(c,e4),e7.matrixWorld=e5,e7.raycast(a,e6);for(let f=0,g=e6.length;f<g;f++){let h=e6[f];h.instanceId=e,h.object=this,b.push(h)}e6.length=0}}setColorAt(a,b){null===this.instanceColor&&(this.instanceColor=new e3(new Float32Array(3*this.instanceMatrix.count),3)),b.toArray(this.instanceColor.array,3*a)}setMatrixAt(a,b){b.toArray(this.instanceMatrix.array,16*a)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}).prototype.isInstancedMesh=!0;class e8 extends bv{constructor(a){super(),this.type="LineBasicMaterial",this.color=new ae(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.setValues(a)}copy(a){return super.copy(a),this.color.copy(a.color),this.linewidth=a.linewidth,this.linecap=a.linecap,this.linejoin=a.linejoin,this}}e8.prototype.isLineBasicMaterial=!0;let e9=new aq,fa=new aq,fb=new aV,fc=new aU,fd=new aM;class fe extends bi{constructor(a=new bK,b=new e8){super(),this.type="Line",this.geometry=a,this.material=b,this.updateMorphTargets()}copy(a){return super.copy(a),this.material=a.material,this.geometry=a.geometry,this}computeLineDistances(){let a=this.geometry;if(a.isBufferGeometry){if(null===a.index){let b=a.attributes.position,c=[0];for(let d=1,e=b.count;d<e;d++)e9.fromBufferAttribute(b,d-1),fa.fromBufferAttribute(b,d),c[d]=c[d-1],c[d]+=e9.distanceTo(fa);a.setAttribute("lineDistance",new bC(c,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.")}else a.isGeometry&&console.error("THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}raycast(a,b){let c=this.geometry,d=this.matrixWorld,e=a.params.Line.threshold,f=c.drawRange;if(null===c.boundingSphere&&c.computeBoundingSphere(),fd.copy(c.boundingSphere),fd.applyMatrix4(d),fd.radius+=e,!1===a.ray.intersectsSphere(fd))return;fb.copy(d).invert(),fc.copy(a.ray).applyMatrix4(fb);let g=e/((this.scale.x+this.scale.y+this.scale.z)/3),h=g*g,i=new aq,j=new aq,k=new aq,l=new aq,m=this.isLineSegments?2:1;if(c.isBufferGeometry){let n=c.index,o=c.attributes,p=o.position;if(null!==n){let q=Math.max(0,f.start),r=Math.min(n.count,f.start+f.count);for(let s=q,t=r-1;s<t;s+=m){let u=n.getX(s),v=n.getX(s+1);i.fromBufferAttribute(p,u),j.fromBufferAttribute(p,v);let w=fc.distanceSqToSegment(i,j,l,k);if(w>h)continue;l.applyMatrix4(this.matrixWorld);let x=a.ray.origin.distanceTo(l);x<a.near||x>a.far||b.push({distance:x,point:k.clone().applyMatrix4(this.matrixWorld),index:s,face:null,faceIndex:null,object:this})}}else{let y=Math.max(0,f.start),z=Math.min(p.count,f.start+f.count);for(let A=y,B=z-1;A<B;A+=m){i.fromBufferAttribute(p,A),j.fromBufferAttribute(p,A+1);let C=fc.distanceSqToSegment(i,j,l,k);if(C>h)continue;l.applyMatrix4(this.matrixWorld);let D=a.ray.origin.distanceTo(l);D<a.near||D>a.far||b.push({distance:D,point:k.clone().applyMatrix4(this.matrixWorld),index:A,face:null,faceIndex:null,object:this})}}}else c.isGeometry&&console.error("THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){let a=this.geometry;if(a.isBufferGeometry){let b=a.morphAttributes,c=Object.keys(b);if(c.length>0){let d=b[c[0]];if(void 0!==d){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,f=d.length;e<f;e++){let g=d[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[g]=e}}}}else{let h=a.morphTargets;void 0!==h&&h.length>0&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}fe.prototype.isLine=!0;let ff=new aq,fg=new aq;class fh extends fe{constructor(a,b){super(a,b),this.type="LineSegments"}computeLineDistances(){let a=this.geometry;if(a.isBufferGeometry){if(null===a.index){let b=a.attributes.position,c=[];for(let d=0,e=b.count;d<e;d+=2)ff.fromBufferAttribute(b,d),fg.fromBufferAttribute(b,d+1),c[d]=0===d?0:c[d-1],c[d+1]=c[d]+ff.distanceTo(fg);a.setAttribute("lineDistance",new bC(c,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.")}else a.isGeometry&&console.error("THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}}fh.prototype.isLineSegments=!0;class fi extends fe{constructor(a,b){super(a,b),this.type="LineLoop"}}fi.prototype.isLineLoop=!0;class fj extends bv{constructor(a){super(),this.type="PointsMaterial",this.color=new ae(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.setValues(a)}copy(a){return super.copy(a),this.color.copy(a.color),this.map=a.map,this.alphaMap=a.alphaMap,this.size=a.size,this.sizeAttenuation=a.sizeAttenuation,this}}fj.prototype.isPointsMaterial=!0;let fk=new aV,fl=new aU,fm=new aM,fn=new aq;class fo extends bi{constructor(a=new bK,b=new fj){super(),this.type="Points",this.geometry=a,this.material=b,this.updateMorphTargets()}copy(a){return super.copy(a),this.material=a.material,this.geometry=a.geometry,this}raycast(a,b){let c=this.geometry,d=this.matrixWorld,e=a.params.Points.threshold,f=c.drawRange;if(null===c.boundingSphere&&c.computeBoundingSphere(),fm.copy(c.boundingSphere),fm.applyMatrix4(d),fm.radius+=e,!1===a.ray.intersectsSphere(fm))return;fk.copy(d).invert(),fl.copy(a.ray).applyMatrix4(fk);let g=e/((this.scale.x+this.scale.y+this.scale.z)/3),h=g*g;if(c.isBufferGeometry){let i=c.index,j=c.attributes,k=j.position;if(null!==i){let l=Math.max(0,f.start),m=Math.min(i.count,f.start+f.count);for(let n=l,o=m;n<o;n++){let p=i.getX(n);fn.fromBufferAttribute(k,p),fp(fn,p,h,d,a,b,this)}}else{let q=Math.max(0,f.start),r=Math.min(k.count,f.start+f.count);for(let s=q,t=r;s<t;s++)fn.fromBufferAttribute(k,s),fp(fn,s,h,d,a,b,this)}}else console.error("THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){let a=this.geometry;if(a.isBufferGeometry){let b=a.morphAttributes,c=Object.keys(b);if(c.length>0){let d=b[c[0]];if(void 0!==d){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,f=d.length;e<f;e++){let g=d[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[g]=e}}}}else{let h=a.morphTargets;void 0!==h&&h.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}function fp(a,b,c,d,e,f,g){let h=fl.distanceSqToPoint(a);if(h<c){let i=new aq;fl.closestPointToPoint(a,i),i.applyMatrix4(d);let j=e.ray.origin.distanceTo(i);if(j<e.near||j>e.far)return;f.push({distance:j,distanceToRay:Math.sqrt(h),point:i,index:b,face:null,object:g})}}fo.prototype.isPoints=!0,(class extends ak{constructor(a,b,c,d,e,f,g,h,i){super(a,b,c,d,e,f,g,h,i),this.minFilter=void 0!==f?f:o,this.magFilter=void 0!==e?e:o,this.generateMipmaps=!1;let j=this;function k(){j.needsUpdate=!0,a.requestVideoFrameCallback(k)}"requestVideoFrameCallback"in a&&a.requestVideoFrameCallback(k)}clone(){return new this.constructor(this.image).copy(this)}update(){let a=this.image;!1=="requestVideoFrameCallback"in a&&a.readyState>=a.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}).prototype.isVideoTexture=!0,(class extends ak{constructor(a,b,c){super({width:a,height:b}),this.format=c,this.magFilter=l,this.minFilter=l,this.generateMipmaps=!1,this.needsUpdate=!0}}).prototype.isFramebufferTexture=!0;(class a extends ak{constructor(a,b,c,d,e,f,g,h,i,j,k,l){super(null,f,g,h,i,j,d,e,k,l),this.image={width:b,height:c},this.mipmaps=a,this.flipY=!1,this.generateMipmaps=!1}}).prototype.isCompressedTexture=!0,(class extends ak{constructor(a,b,c,d,e,f,g,h,i){super(a,b,c,d,e,f,g,h,i),this.needsUpdate=!0}}).prototype.isCanvasTexture=!0;class fq{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(a,b){let c=this.getUtoTmapping(a);return this.getPoint(c,b)}getPoints(a=5){let b=[];for(let c=0;c<=a;c++)b.push(this.getPoint(c/a));return b}getSpacedPoints(a=5){let b=[];for(let c=0;c<=a;c++)b.push(this.getPointAt(c/a));return b}getLength(){let a=this.getLengths();return a[a.length-1]}getLengths(a=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===a+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;let b=[],c,d=this.getPoint(0),e=0;b.push(0);for(let f=1;f<=a;f++)b.push(e+=(c=this.getPoint(f/a)).distanceTo(d)),d=c;return this.cacheArcLengths=b,b}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(a,b){let c=this.getLengths(),d=0,e=c.length,f;f=b||a*c[e-1];let g=0,h=e-1,i;for(;g<=h;)if((i=c[d=Math.floor(g+(h-g)/2)]-f)<0)g=d+1;else if(i>0)h=d-1;else{h=d;break}if(c[d=h]===f)return d/(e-1);let j=c[d],k=c[d+1],l=(f-j)/(k-j),m=(d+l)/(e-1);return m}getTangent(a,b){let c=1e-4,d=a-c,e=a+c;d<0&&(d=0),e>1&&(e=1);let f=this.getPoint(d),g=this.getPoint(e),h=b||(f.isVector2?new Q:new aq);return h.copy(g).sub(f).normalize(),h}getTangentAt(a,b){let c=this.getUtoTmapping(a);return this.getTangent(c,b)}computeFrenetFrames(a,b){let c=new aq,d=[],e=[],f=[],g=new aq,h=new aV;for(let i=0;i<=a;i++){let j=i/a;d[i]=this.getTangentAt(j,new aq)}e[0]=new aq,f[0]=new aq;let k=Number.MAX_VALUE,l=Math.abs(d[0].x),m=Math.abs(d[0].y),n=Math.abs(d[0].z);l<=k&&(k=l,c.set(1,0,0)),m<=k&&(k=m,c.set(0,1,0)),n<=k&&c.set(0,0,1),g.crossVectors(d[0],c).normalize(),e[0].crossVectors(d[0],g),f[0].crossVectors(d[0],e[0]);for(let o=1;o<=a;o++){if(e[o]=e[o-1].clone(),f[o]=f[o-1].clone(),g.crossVectors(d[o-1],d[o]),g.length()>Number.EPSILON){g.normalize();let p=Math.acos(H(d[o-1].dot(d[o]),-1,1));e[o].applyMatrix4(h.makeRotationAxis(g,p))}f[o].crossVectors(d[o],e[o])}if(!0===b){let q=Math.acos(H(e[0].dot(e[a]),-1,1));q/=a,d[0].dot(g.crossVectors(e[0],e[a]))>0&&(q=-q);for(let r=1;r<=a;r++)e[r].applyMatrix4(h.makeRotationAxis(d[r],q*r)),f[r].crossVectors(d[r],e[r])}return{tangents:d,normals:e,binormals:f}}clone(){return new this.constructor().copy(this)}copy(a){return this.arcLengthDivisions=a.arcLengthDivisions,this}toJSON(){let a={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return a.arcLengthDivisions=this.arcLengthDivisions,a.type=this.type,a}fromJSON(a){return this.arcLengthDivisions=a.arcLengthDivisions,this}}class fr extends fq{constructor(a=0,b=0,c=1,d=1,e=0,f=2*Math.PI,g=!1,h=0){super(),this.type="EllipseCurve",this.aX=a,this.aY=b,this.xRadius=c,this.yRadius=d,this.aStartAngle=e,this.aEndAngle=f,this.aClockwise=g,this.aRotation=h}getPoint(a,b){let c=b||new Q,d=2*Math.PI,e=this.aEndAngle-this.aStartAngle,f=Math.abs(e)<Number.EPSILON;for(;e<0;)e+=d;for(;e>d;)e-=d;e<Number.EPSILON&&(e=f?0:d),!0!==this.aClockwise||f||(e===d?e=-d:e-=d);let g=this.aStartAngle+a*e,h=this.aX+this.xRadius*Math.cos(g),i=this.aY+this.yRadius*Math.sin(g);if(0!==this.aRotation){let j=Math.cos(this.aRotation),k=Math.sin(this.aRotation),l=h-this.aX,m=i-this.aY;h=l*j-m*k+this.aX,i=l*k+m*j+this.aY}return c.set(h,i)}copy(a){return super.copy(a),this.aX=a.aX,this.aY=a.aY,this.xRadius=a.xRadius,this.yRadius=a.yRadius,this.aStartAngle=a.aStartAngle,this.aEndAngle=a.aEndAngle,this.aClockwise=a.aClockwise,this.aRotation=a.aRotation,this}toJSON(){let a=super.toJSON();return a.aX=this.aX,a.aY=this.aY,a.xRadius=this.xRadius,a.yRadius=this.yRadius,a.aStartAngle=this.aStartAngle,a.aEndAngle=this.aEndAngle,a.aClockwise=this.aClockwise,a.aRotation=this.aRotation,a}fromJSON(a){return super.fromJSON(a),this.aX=a.aX,this.aY=a.aY,this.xRadius=a.xRadius,this.yRadius=a.yRadius,this.aStartAngle=a.aStartAngle,this.aEndAngle=a.aEndAngle,this.aClockwise=a.aClockwise,this.aRotation=a.aRotation,this}}fr.prototype.isEllipseCurve=!0;class fs extends fr{constructor(a,b,c,d,e,f){super(a,b,c,c,d,e,f),this.type="ArcCurve"}}function ft(){let a=0,b=0,c=0,d=0;function e(e,f,g,h){a=e,b=g,c=-3*e+3*f-2*g-h,d=2*e-2*f+g+h}return{initCatmullRom:function(a,b,c,d,f){e(b,c,f*(c-a),f*(d-b))},initNonuniformCatmullRom:function(a,b,c,d,f,g,h){let i=(b-a)/f-(c-a)/(f+g)+(c-b)/g,j=(c-b)/g-(d-b)/(g+h)+(d-c)/h;i*=g,j*=g,e(b,c,i,j)},calc:function(e){let f=e*e;return a+b*e+c*f+d*(f*e)}}}fs.prototype.isArcCurve=!0;let fu=new aq,fv=new ft,fw=new ft,fx=new ft;class fy extends fq{constructor(a=[],b=!1,c="centripetal",d=.5){super(),this.type="CatmullRomCurve3",this.points=a,this.closed=b,this.curveType=c,this.tension=d}getPoint(a,b=new aq){let c=b,d=this.points,e=d.length,f=(e-(this.closed?0:1))*a,g=Math.floor(f),h=f-g;this.closed?g+=g>0?0:(Math.floor(Math.abs(g)/e)+1)*e:0===h&&g===e-1&&(g=e-2,h=1);let i,j;this.closed||g>0?i=d[(g-1)%e]:(fu.subVectors(d[0],d[1]).add(d[0]),i=fu);let k=d[g%e],l=d[(g+1)%e];if(this.closed||g+2<e?j=d[(g+2)%e]:(fu.subVectors(d[e-1],d[e-2]).add(d[e-1]),j=fu),"centripetal"===this.curveType||"chordal"===this.curveType){let m="chordal"===this.curveType?.5:.25,n=Math.pow(i.distanceToSquared(k),m),o=Math.pow(k.distanceToSquared(l),m),p=Math.pow(l.distanceToSquared(j),m);o<1e-4&&(o=1),n<1e-4&&(n=o),p<1e-4&&(p=o),fv.initNonuniformCatmullRom(i.x,k.x,l.x,j.x,n,o,p),fw.initNonuniformCatmullRom(i.y,k.y,l.y,j.y,n,o,p),fx.initNonuniformCatmullRom(i.z,k.z,l.z,j.z,n,o,p)}else"catmullrom"===this.curveType&&(fv.initCatmullRom(i.x,k.x,l.x,j.x,this.tension),fw.initCatmullRom(i.y,k.y,l.y,j.y,this.tension),fx.initCatmullRom(i.z,k.z,l.z,j.z,this.tension));return c.set(fv.calc(h),fw.calc(h),fx.calc(h)),c}copy(a){super.copy(a),this.points=[];for(let b=0,c=a.points.length;b<c;b++){let d=a.points[b];this.points.push(d.clone())}return this.closed=a.closed,this.curveType=a.curveType,this.tension=a.tension,this}toJSON(){let a=super.toJSON();a.points=[];for(let b=0,c=this.points.length;b<c;b++){let d=this.points[b];a.points.push(d.toArray())}return a.closed=this.closed,a.curveType=this.curveType,a.tension=this.tension,a}fromJSON(a){super.fromJSON(a),this.points=[];for(let b=0,c=a.points.length;b<c;b++){let d=a.points[b];this.points.push(new aq().fromArray(d))}return this.closed=a.closed,this.curveType=a.curveType,this.tension=a.tension,this}}function fz(a,b,c,d,e){let f=(d-b)*.5,g=(e-c)*.5,h=a*a;return(2*c-2*d+f+g)*(a*h)+(-3*c+3*d-2*f-g)*h+f*a+c}fy.prototype.isCatmullRomCurve3=!0;function fA(a,b,c,d){var e,f,g,h;return function(a,b){let c=1-a;return c*c*b}(a,b)+(e=a,2*(1-e)*e*(f=c))+(g=a,g*g*(h=d))}function fB(a,b,c,d,e){var f,g,h,i;return function(a,b){let c=1-a;return c*c*c*b}(a,b)+function(a,b){let c=1-a;return 3*c*c*a*b}(a,c)+(f=a,3*(1-f)*f*f*(g=d))+(h=a,h*h*h*(i=e))}class fC extends fq{constructor(a=new Q,b=new Q,c=new Q,d=new Q){super(),this.type="CubicBezierCurve",this.v0=a,this.v1=b,this.v2=c,this.v3=d}getPoint(a,b=new Q){let c=b,d=this.v0,e=this.v1,f=this.v2,g=this.v3;return c.set(fB(a,d.x,e.x,f.x,g.x),fB(a,d.y,e.y,f.y,g.y)),c}copy(a){return super.copy(a),this.v0.copy(a.v0),this.v1.copy(a.v1),this.v2.copy(a.v2),this.v3.copy(a.v3),this}toJSON(){let a=super.toJSON();return a.v0=this.v0.toArray(),a.v1=this.v1.toArray(),a.v2=this.v2.toArray(),a.v3=this.v3.toArray(),a}fromJSON(a){return super.fromJSON(a),this.v0.fromArray(a.v0),this.v1.fromArray(a.v1),this.v2.fromArray(a.v2),this.v3.fromArray(a.v3),this}}fC.prototype.isCubicBezierCurve=!0;class fD extends fq{constructor(a=new aq,b=new aq,c=new aq,d=new aq){super(),this.type="CubicBezierCurve3",this.v0=a,this.v1=b,this.v2=c,this.v3=d}getPoint(a,b=new aq){let c=b,d=this.v0,e=this.v1,f=this.v2,g=this.v3;return c.set(fB(a,d.x,e.x,f.x,g.x),fB(a,d.y,e.y,f.y,g.y),fB(a,d.z,e.z,f.z,g.z)),c}copy(a){return super.copy(a),this.v0.copy(a.v0),this.v1.copy(a.v1),this.v2.copy(a.v2),this.v3.copy(a.v3),this}toJSON(){let a=super.toJSON();return a.v0=this.v0.toArray(),a.v1=this.v1.toArray(),a.v2=this.v2.toArray(),a.v3=this.v3.toArray(),a}fromJSON(a){return super.fromJSON(a),this.v0.fromArray(a.v0),this.v1.fromArray(a.v1),this.v2.fromArray(a.v2),this.v3.fromArray(a.v3),this}}fD.prototype.isCubicBezierCurve3=!0;class fE extends fq{constructor(a=new Q,b=new Q){super(),this.type="LineCurve",this.v1=a,this.v2=b}getPoint(a,b=new Q){let c=b;return 1===a?c.copy(this.v2):(c.copy(this.v2).sub(this.v1),c.multiplyScalar(a).add(this.v1)),c}getPointAt(a,b){return this.getPoint(a,b)}getTangent(a,b){let c=b||new Q;return c.copy(this.v2).sub(this.v1).normalize(),c}copy(a){return super.copy(a),this.v1.copy(a.v1),this.v2.copy(a.v2),this}toJSON(){let a=super.toJSON();return a.v1=this.v1.toArray(),a.v2=this.v2.toArray(),a}fromJSON(a){return super.fromJSON(a),this.v1.fromArray(a.v1),this.v2.fromArray(a.v2),this}}fE.prototype.isLineCurve=!0;class fF extends fq{constructor(a=new Q,b=new Q,c=new Q){super(),this.type="QuadraticBezierCurve",this.v0=a,this.v1=b,this.v2=c}getPoint(a,b=new Q){let c=b,d=this.v0,e=this.v1,f=this.v2;return c.set(fA(a,d.x,e.x,f.x),fA(a,d.y,e.y,f.y)),c}copy(a){return super.copy(a),this.v0.copy(a.v0),this.v1.copy(a.v1),this.v2.copy(a.v2),this}toJSON(){let a=super.toJSON();return a.v0=this.v0.toArray(),a.v1=this.v1.toArray(),a.v2=this.v2.toArray(),a}fromJSON(a){return super.fromJSON(a),this.v0.fromArray(a.v0),this.v1.fromArray(a.v1),this.v2.fromArray(a.v2),this}}fF.prototype.isQuadraticBezierCurve=!0;class fG extends fq{constructor(a=new aq,b=new aq,c=new aq){super(),this.type="QuadraticBezierCurve3",this.v0=a,this.v1=b,this.v2=c}getPoint(a,b=new aq){let c=b,d=this.v0,e=this.v1,f=this.v2;return c.set(fA(a,d.x,e.x,f.x),fA(a,d.y,e.y,f.y),fA(a,d.z,e.z,f.z)),c}copy(a){return super.copy(a),this.v0.copy(a.v0),this.v1.copy(a.v1),this.v2.copy(a.v2),this}toJSON(){let a=super.toJSON();return a.v0=this.v0.toArray(),a.v1=this.v1.toArray(),a.v2=this.v2.toArray(),a}fromJSON(a){return super.fromJSON(a),this.v0.fromArray(a.v0),this.v1.fromArray(a.v1),this.v2.fromArray(a.v2),this}}fG.prototype.isQuadraticBezierCurve3=!0;class fH extends fq{constructor(a=[]){super(),this.type="SplineCurve",this.points=a}getPoint(a,b=new Q){let c=b,d=this.points,e=(d.length-1)*a,f=Math.floor(e),g=e-f,h=d[0===f?f:f-1],i=d[f],j=d[f>d.length-2?d.length-1:f+1],k=d[f>d.length-3?d.length-1:f+2];return c.set(fz(g,h.x,i.x,j.x,k.x),fz(g,h.y,i.y,j.y,k.y)),c}copy(a){super.copy(a),this.points=[];for(let b=0,c=a.points.length;b<c;b++){let d=a.points[b];this.points.push(d.clone())}return this}toJSON(){let a=super.toJSON();a.points=[];for(let b=0,c=this.points.length;b<c;b++){let d=this.points[b];a.points.push(d.toArray())}return a}fromJSON(a){super.fromJSON(a),this.points=[];for(let b=0,c=a.points.length;b<c;b++){let d=a.points[b];this.points.push(new Q().fromArray(d))}return this}}fH.prototype.isSplineCurve=!0;var fI=Object.freeze({__proto__:null,ArcCurve:fs,CatmullRomCurve3:fy,CubicBezierCurve:fC,CubicBezierCurve3:fD,EllipseCurve:fr,LineCurve:fE,LineCurve3:class extends fq{constructor(a=new aq,b=new aq){super(),this.type="LineCurve3",this.isLineCurve3=!0,this.v1=a,this.v2=b}getPoint(a,b=new aq){let c=b;return 1===a?c.copy(this.v2):(c.copy(this.v2).sub(this.v1),c.multiplyScalar(a).add(this.v1)),c}getPointAt(a,b){return this.getPoint(a,b)}copy(a){return super.copy(a),this.v1.copy(a.v1),this.v2.copy(a.v2),this}toJSON(){let a=super.toJSON();return a.v1=this.v1.toArray(),a.v2=this.v2.toArray(),a}fromJSON(a){return super.fromJSON(a),this.v1.fromArray(a.v1),this.v2.fromArray(a.v2),this}},QuadraticBezierCurve:fF,QuadraticBezierCurve3:fG,SplineCurve:fH});class fJ extends fq{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(a){this.curves.push(a)}closePath(){let a=this.curves[0].getPoint(0),b=this.curves[this.curves.length-1].getPoint(1);a.equals(b)||this.curves.push(new fE(b,a))}getPoint(a,b){let c=a*this.getLength(),d=this.getCurveLengths(),e=0;for(;e<d.length;){if(d[e]>=c){let f=d[e]-c,g=this.curves[e],h=g.getLength(),i=0===h?0:1-f/h;return g.getPointAt(i,b)}e++}return null}getLength(){let a=this.getCurveLengths();return a[a.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;let a=[],b=0;for(let c=0,d=this.curves.length;c<d;c++)a.push(b+=this.curves[c].getLength());return this.cacheLengths=a,a}getSpacedPoints(a=40){let b=[];for(let c=0;c<=a;c++)b.push(this.getPoint(c/a));return this.autoClose&&b.push(b[0]),b}getPoints(a=12){let b=[],c;for(let d=0,e=this.curves;d<e.length;d++){let f=e[d],g=f.isEllipseCurve?2*a:f.isLineCurve||f.isLineCurve3?1:f.isSplineCurve?a*f.points.length:a,h=f.getPoints(g);for(let i=0;i<h.length;i++){let j=h[i];c&&c.equals(j)||(b.push(j),c=j)}}return this.autoClose&&b.length>1&&!b[b.length-1].equals(b[0])&&b.push(b[0]),b}copy(a){super.copy(a),this.curves=[];for(let b=0,c=a.curves.length;b<c;b++){let d=a.curves[b];this.curves.push(d.clone())}return this.autoClose=a.autoClose,this}toJSON(){let a=super.toJSON();a.autoClose=this.autoClose,a.curves=[];for(let b=0,c=this.curves.length;b<c;b++){let d=this.curves[b];a.curves.push(d.toJSON())}return a}fromJSON(a){super.fromJSON(a),this.autoClose=a.autoClose,this.curves=[];for(let b=0,c=a.curves.length;b<c;b++){let d=a.curves[b];this.curves.push(new fI[d.type]().fromJSON(d))}return this}}class fK extends fJ{constructor(a){super(),this.type="Path",this.currentPoint=new Q,a&&this.setFromPoints(a)}setFromPoints(a){this.moveTo(a[0].x,a[0].y);for(let b=1,c=a.length;b<c;b++)this.lineTo(a[b].x,a[b].y);return this}moveTo(a,b){return this.currentPoint.set(a,b),this}lineTo(a,b){let c=new fE(this.currentPoint.clone(),new Q(a,b));return this.curves.push(c),this.currentPoint.set(a,b),this}quadraticCurveTo(a,b,c,d){let e=new fF(this.currentPoint.clone(),new Q(a,b),new Q(c,d));return this.curves.push(e),this.currentPoint.set(c,d),this}bezierCurveTo(a,b,c,d,e,f){let g=new fC(this.currentPoint.clone(),new Q(a,b),new Q(c,d),new Q(e,f));return this.curves.push(g),this.currentPoint.set(e,f),this}splineThru(a){let b=[this.currentPoint.clone()].concat(a),c=new fH(b);return this.curves.push(c),this.currentPoint.copy(a[a.length-1]),this}arc(a,b,c,d,e,f){let g=this.currentPoint.x,h=this.currentPoint.y;return this.absarc(a+g,b+h,c,d,e,f),this}absarc(a,b,c,d,e,f){return this.absellipse(a,b,c,c,d,e,f),this}ellipse(a,b,c,d,e,f,g,h){let i=this.currentPoint.x,j=this.currentPoint.y;return this.absellipse(a+i,b+j,c,d,e,f,g,h),this}absellipse(a,b,c,d,e,f,g,h){let i=new fr(a,b,c,d,e,f,g,h);if(this.curves.length>0){let j=i.getPoint(0);j.equals(this.currentPoint)||this.lineTo(j.x,j.y)}this.curves.push(i);let k=i.getPoint(1);return this.currentPoint.copy(k),this}copy(a){return super.copy(a),this.currentPoint.copy(a.currentPoint),this}toJSON(){let a=super.toJSON();return a.currentPoint=this.currentPoint.toArray(),a}fromJSON(a){return super.fromJSON(a),this.currentPoint.fromArray(a.currentPoint),this}}class fL extends bK{constructor(a=[new Q(0,.5),new Q(.5,0),new Q(0,-.5)],b=12,c=0,d=2*Math.PI){super(),this.type="LatheGeometry",this.parameters={points:a,segments:b,phiStart:c,phiLength:d},b=Math.floor(b),d=H(d,0,2*Math.PI);let e=[],f=[],g=[],h=[],i=[],j=1/b,k=new aq,l=new Q,m=new aq,n=new aq,o=new aq,p=0,q=0;for(let r=0;r<=a.length-1;r++)switch(r){case 0:p=a[r+1].x-a[r].x,q=a[r+1].y-a[r].y,m.x=1*q,m.y=-p,m.z=0*q,o.copy(m),m.normalize(),h.push(m.x,m.y,m.z);break;case a.length-1:h.push(o.x,o.y,o.z);break;default:p=a[r+1].x-a[r].x,q=a[r+1].y-a[r].y,m.x=1*q,m.y=-p,m.z=0*q,n.copy(m),m.x+=o.x,m.y+=o.y,m.z+=o.z,m.normalize(),h.push(m.x,m.y,m.z),o.copy(n)}for(let s=0;s<=b;s++){let t=c+s*j*d,u=Math.sin(t),v=Math.cos(t);for(let w=0;w<=a.length-1;w++){k.x=a[w].x*u,k.y=a[w].y,k.z=a[w].x*v,f.push(k.x,k.y,k.z),l.x=s/b,l.y=w/(a.length-1),g.push(l.x,l.y);let x=h[3*w+0]*u,y=h[3*w+1],z=h[3*w+0]*v;i.push(x,y,z)}}for(let A=0;A<b;A++)for(let B=0;B<a.length-1;B++){let C=B+A*a.length,D=C,E=C+a.length,F=C+a.length+1,G=C+1;e.push(D,E,G),e.push(F,G,E)}this.setIndex(e),this.setAttribute("position",new bC(f,3)),this.setAttribute("uv",new bC(g,2)),this.setAttribute("normal",new bC(i,3))}static fromJSON(a){return new fL(a.points,a.segments,a.phiStart,a.phiLength)}}class fM extends fL{constructor(a=1,b=1,c=4,d=8){let e=new fK;e.absarc(0,-b/2,a,1.5*Math.PI,0),e.absarc(0,b/2,a,0,.5*Math.PI),super(e.getPoints(c),d),this.type="CapsuleGeometry",this.parameters={radius:a,height:b,capSegments:c,radialSegments:d}}static fromJSON(a){return new fM(a.radius,a.length,a.capSegments,a.radialSegments)}}class fN extends bK{constructor(a=1,b=8,c=0,d=2*Math.PI){super(),this.type="CircleGeometry",this.parameters={radius:a,segments:b,thetaStart:c,thetaLength:d},b=Math.max(3,b);let e=[],f=[],g=[],h=[],i=new aq,j=new Q;f.push(0,0,0),g.push(0,0,1),h.push(.5,.5);for(let k=0,l=3;k<=b;k++,l+=3){let m=c+k/b*d;i.x=a*Math.cos(m),i.y=a*Math.sin(m),f.push(i.x,i.y,i.z),g.push(0,0,1),j.x=(f[l]/a+1)/2,j.y=(f[l+1]/a+1)/2,h.push(j.x,j.y)}for(let n=1;n<=b;n++)e.push(n,n+1,0);this.setIndex(e),this.setAttribute("position",new bC(f,3)),this.setAttribute("normal",new bC(g,3)),this.setAttribute("uv",new bC(h,2))}static fromJSON(a){return new fN(a.radius,a.segments,a.thetaStart,a.thetaLength)}}class fO extends bK{constructor(a=1,b=1,c=1,d=8,e=1,f=!1,g=0,h=2*Math.PI){super(),this.type="CylinderGeometry",this.parameters={radiusTop:a,radiusBottom:b,height:c,radialSegments:d,heightSegments:e,openEnded:f,thetaStart:g,thetaLength:h};let i=this;d=Math.floor(d),e=Math.floor(e);let j=[],k=[],l=[],m=[],n=0,o=[],p=c/2,q=0;function r(c){let e=n,f=new Q,o=new aq,r=0,s=!0===c?a:b,t=!0===c?1:-1;for(let u=1;u<=d;u++)k.push(0,p*t,0),l.push(0,t,0),m.push(.5,.5),n++;let v=n;for(let w=0;w<=d;w++){let x=w/d,y=x*h+g,z=Math.cos(y),A=Math.sin(y);o.x=s*A,o.y=p*t,o.z=s*z,k.push(o.x,o.y,o.z),l.push(0,t,0),f.x=.5*z+.5,f.y=.5*A*t+.5,m.push(f.x,f.y),n++}for(let B=0;B<d;B++){let C=e+B,D=v+B;!0===c?j.push(D,D+1,C):j.push(D+1,D,C),r+=3}i.addGroup(q,r,!0===c?1:2),q+=r}(function(){let f=new aq,r=new aq,s=0,t=(b-a)/c;for(let u=0;u<=e;u++){let v=[],w=u/e,x=w*(b-a)+a;for(let y=0;y<=d;y++){let z=y/d,A=z*h+g,B=Math.sin(A),C=Math.cos(A);r.x=x*B,r.y=-w*c+p,r.z=x*C,k.push(r.x,r.y,r.z),f.set(B,t,C).normalize(),l.push(f.x,f.y,f.z),m.push(z,1-w),v.push(n++)}o.push(v)}for(let D=0;D<d;D++)for(let E=0;E<e;E++){let F=o[E][D],G=o[E+1][D],H=o[E+1][D+1],I=o[E][D+1];j.push(F,G,I),j.push(G,H,I),s+=6}i.addGroup(q,s,0),q+=s})(),!1===f&&(a>0&&r(!0),b>0&&r(!1)),this.setIndex(j),this.setAttribute("position",new bC(k,3)),this.setAttribute("normal",new bC(l,3)),this.setAttribute("uv",new bC(m,2))}static fromJSON(a){return new fO(a.radiusTop,a.radiusBottom,a.height,a.radialSegments,a.heightSegments,a.openEnded,a.thetaStart,a.thetaLength)}}class fP extends fO{constructor(a=1,b=1,c=8,d=1,e=!1,f=0,g=2*Math.PI){super(0,a,b,c,d,e,f,g),this.type="ConeGeometry",this.parameters={radius:a,height:b,radialSegments:c,heightSegments:d,openEnded:e,thetaStart:f,thetaLength:g}}static fromJSON(a){return new fP(a.radius,a.height,a.radialSegments,a.heightSegments,a.openEnded,a.thetaStart,a.thetaLength)}}class fQ extends bK{constructor(a=[],b=[],c=1,d=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:a,indices:b,radius:c,detail:d};let e=[],f=[];function g(a,b,c,d){let e=d+1,f=[];for(let g=0;g<=e;g++){f[g]=[];let h=a.clone().lerp(c,g/e),j=b.clone().lerp(c,g/e),k=e-g;for(let l=0;l<=k;l++)0===l&&g===e?f[g][l]=h:f[g][l]=h.clone().lerp(j,l/k)}for(let m=0;m<e;m++)for(let n=0;n<2*(e-m)-1;n++){let o=Math.floor(n/2);n%2==0?(i(f[m][o+1]),i(f[m+1][o]),i(f[m][o])):(i(f[m][o+1]),i(f[m+1][o+1]),i(f[m+1][o]))}}function h(){for(let a=0;a<f.length;a+=6){let b=f[a+0],c=f[a+2],d=f[a+4],e=Math.max(b,c,d),g=Math.min(b,c,d);e>.9&&g<.1&&(b<.2&&(f[a+0]+=1),c<.2&&(f[a+2]+=1),d<.2&&(f[a+4]+=1))}}function i(a){e.push(a.x,a.y,a.z)}function j(b,c){let d=3*b;c.x=a[d+0],c.y=a[d+1],c.z=a[d+2]}function k(){let a=new aq,b=new aq,c=new aq,d=new aq,g=new Q,h=new Q,i=new Q;for(let j=0,k=0;j<e.length;j+=9,k+=6){a.set(e[j+0],e[j+1],e[j+2]),b.set(e[j+3],e[j+4],e[j+5]),c.set(e[j+6],e[j+7],e[j+8]),g.set(f[k+0],f[k+1]),h.set(f[k+2],f[k+3]),i.set(f[k+4],f[k+5]),d.copy(a).add(b).add(c).divideScalar(3);let n=m(d);l(g,k+0,a,n),l(h,k+2,b,n),l(i,k+4,c,n)}}function l(a,b,c,d){d<0&&1===a.x&&(f[b]=a.x-1),0===c.x&&0===c.z&&(f[b]=d/2/Math.PI+.5)}function m(a){return Math.atan2(a.z,-a.x)}function n(a){return Math.atan2(-a.y,Math.sqrt(a.x*a.x+a.z*a.z))}(function(a){let c=new aq,d=new aq,e=new aq;for(let f=0;f<b.length;f+=3)j(b[f+0],c),j(b[f+1],d),j(b[f+2],e),g(c,d,e,a)})(d),function(a){let b=new aq;for(let c=0;c<e.length;c+=3)b.x=e[c+0],b.y=e[c+1],b.z=e[c+2],b.normalize().multiplyScalar(a),e[c+0]=b.x,e[c+1]=b.y,e[c+2]=b.z}(c),function(){let a=new aq;for(let b=0;b<e.length;b+=3){a.x=e[b+0],a.y=e[b+1],a.z=e[b+2];let c=m(a)/2/Math.PI+.5,d=n(a)/Math.PI+.5;f.push(c,1-d)}k(),h()}(),this.setAttribute("position",new bC(e,3)),this.setAttribute("normal",new bC(e.slice(),3)),this.setAttribute("uv",new bC(f,2)),0===d?this.computeVertexNormals():this.normalizeNormals()}static fromJSON(a){return new fQ(a.vertices,a.indices,a.radius,a.details)}}class fR extends fQ{constructor(a=1,b=0){let c=(1+Math.sqrt(5))/2,d=1/c;super([-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-d,-c,0,-d,c,0,d,-c,0,d,c,-d,-c,0,-d,c,0,d,-c,0,d,c,0,-c,0,-d,c,0,-d,-c,0,d,c,0,d],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],a,b),this.type="DodecahedronGeometry",this.parameters={radius:a,detail:b}}static fromJSON(a){return new fR(a.radius,a.detail)}}let fS=new aq,fT=new aq,fU=new aq,fV=new bt;class fW extends fK{constructor(a){super(a),this.uuid=G(),this.type="Shape",this.holes=[]}getPointsHoles(a){let b=[];for(let c=0,d=this.holes.length;c<d;c++)b[c]=this.holes[c].getPoints(a);return b}extractPoints(a){return{shape:this.getPoints(a),holes:this.getPointsHoles(a)}}copy(a){super.copy(a),this.holes=[];for(let b=0,c=a.holes.length;b<c;b++){let d=a.holes[b];this.holes.push(d.clone())}return this}toJSON(){let a=super.toJSON();a.uuid=this.uuid,a.holes=[];for(let b=0,c=this.holes.length;b<c;b++){let d=this.holes[b];a.holes.push(d.toJSON())}return a}fromJSON(a){super.fromJSON(a),this.uuid=a.uuid,this.holes=[];for(let b=0,c=a.holes.length;b<c;b++){let d=a.holes[b];this.holes.push(new fK().fromJSON(d))}return this}}let fX={triangulate:function(a,b,c=2){let d=b&&b.length,e=d?b[0]*c:a.length,f=fY(a,0,e,c,!0),g=[];if(!f||f.next===f.prev)return g;let h,i,j,k,l,m,n;if(d&&(f=f3(a,b,f,c)),a.length>80*c){h=j=a[0],i=k=a[1];for(let o=c;o<e;o+=c)l=a[o],m=a[o+1],l<h&&(h=l),m<i&&(i=m),l>j&&(j=l),m>k&&(k=m);n=0!==(n=Math.max(j-h,k-i))?1/n:0}return f$(f,g,c,h,i,n),g}};function fY(a,b,c,d,e){let f,g;if(e===gq(a,b,c,d)>0)for(f=b;f<c;f+=d)g=gn(f,a[f],a[f+1],g);else for(f=c-d;f>=b;f-=d)g=gn(f,a[f],a[f+1],g);return g&&gf(g,g.next)&&(go(g),g=g.next),g}function fZ(a,b){if(!a)return a;b||(b=a);let c=a,d;do if(d=!1,!c.steiner&&(gf(c,c.next)||0===ge(c.prev,c,c.next))){if(go(c),(c=b=c.prev)===c.next)break;d=!0}else c=c.next;while(d||c!==b);return b}function f$(a,b,c,d,e,f,g){if(!a)return;!g&&f&&f8(a,d,e,f);let h=a,i,j;for(;a.prev!==a.next;){if(i=a.prev,j=a.next,f?f0(a,d,e,f):f_(a)){b.push(i.i/c),b.push(a.i/c),b.push(j.i/c),go(a),a=j.next,h=j.next;continue}if((a=j)===h){g?1===g?(a=f1(fZ(a),b,c),f$(a,b,c,d,e,f,2)):2===g&&f2(a,b,c,d,e,f):f$(fZ(a),b,c,d,e,f,1);break}}}function f_(a){let b=a.prev,c=a,d=a.next;if(ge(b,c,d)>=0)return!1;let e=a.next.next;for(;e!==a.prev;){if(gc(b.x,b.y,c.x,c.y,d.x,d.y,e.x,e.y)&&ge(e.prev,e,e.next)>=0)return!1;e=e.next}return!0}function f0(a,b,c,d){let e=a.prev,f=a,g=a.next;if(ge(e,f,g)>=0)return!1;let h=e.x<f.x?e.x<g.x?e.x:g.x:f.x<g.x?f.x:g.x,i=e.y<f.y?e.y<g.y?e.y:g.y:f.y<g.y?f.y:g.y,j=e.x>f.x?e.x>g.x?e.x:g.x:f.x>g.x?f.x:g.x,k=e.y>f.y?e.y>g.y?e.y:g.y:f.y>g.y?f.y:g.y,l=ga(h,i,b,c,d),m=ga(j,k,b,c,d),n=a.prevZ,o=a.nextZ;for(;n&&n.z>=l&&o&&o.z<=m;){if(n!==a.prev&&n!==a.next&&gc(e.x,e.y,f.x,f.y,g.x,g.y,n.x,n.y)&&ge(n.prev,n,n.next)>=0||(n=n.prevZ,o!==a.prev&&o!==a.next&&gc(e.x,e.y,f.x,f.y,g.x,g.y,o.x,o.y)&&ge(o.prev,o,o.next)>=0))return!1;o=o.nextZ}for(;n&&n.z>=l;){if(n!==a.prev&&n!==a.next&&gc(e.x,e.y,f.x,f.y,g.x,g.y,n.x,n.y)&&ge(n.prev,n,n.next)>=0)return!1;n=n.prevZ}for(;o&&o.z<=m;){if(o!==a.prev&&o!==a.next&&gc(e.x,e.y,f.x,f.y,g.x,g.y,o.x,o.y)&&ge(o.prev,o,o.next)>=0)return!1;o=o.nextZ}return!0}function f1(a,b,c){let d=a;do{let e=d.prev,f=d.next.next;!gf(e,f)&&gg(e,d,d.next,f)&&gk(e,f)&&gk(f,e)&&(b.push(e.i/c),b.push(d.i/c),b.push(f.i/c),go(d),go(d.next),d=a=f),d=d.next}while(d!==a);return fZ(d)}function f2(a,b,c,d,e,f){let g=a;do{let h=g.next.next;for(;h!==g.prev;){if(g.i!==h.i&&gd(g,h)){let i=gm(g,h);g=fZ(g,g.next),i=fZ(i,i.next),f$(g,b,c,d,e,f),f$(i,b,c,d,e,f);return}h=h.next}g=g.next}while(g!==a)}function f3(a,b,c,d){let e=[],f,g,h,i,j;for(f=0,g=b.length;f<g;f++)h=b[f]*d,i=f<g-1?b[f+1]*d:a.length,j=fY(a,h,i,d,!1),j===j.next&&(j.steiner=!0),e.push(gb(j));for(e.sort(f4),f=0;f<e.length;f++)f5(e[f],c),c=fZ(c,c.next);return c}function f4(a,b){return a.x-b.x}function f5(a,b){if(b=f6(a,b)){let c=gm(b,a);fZ(b,b.next),fZ(c,c.next)}}function f6(a,b){let c=b,d=a.x,e=a.y,f=-1/0,g;do{if(e<=c.y&&e>=c.next.y&&c.next.y!==c.y){let h=c.x+(e-c.y)*(c.next.x-c.x)/(c.next.y-c.y);if(h<=d&&h>f){if(f=h,h===d){if(e===c.y)return c;if(e===c.next.y)return c.next}g=c.x<c.next.x?c:c.next}}c=c.next}while(c!==b);if(!g)return null;if(d===f)return g;let i=g,j=g.x,k=g.y,l=1/0,m;c=g;do d>=c.x&&c.x>=j&&d!==c.x&&gc(e<k?d:f,e,j,k,e<k?f:d,e,c.x,c.y)&&(m=Math.abs(e-c.y)/(d-c.x),gk(c,a)&&(m<l||m===l&&(c.x>g.x||c.x===g.x&&f7(g,c)))&&(g=c,l=m)),c=c.next;while(c!==i);return g}function f7(a,b){return 0>ge(a.prev,a,b.prev)&&0>ge(b.next,a,a.next)}function f8(a,b,c,d){let e=a;do null===e.z&&(e.z=ga(e.x,e.y,b,c,d)),e.prevZ=e.prev,e.nextZ=e.next,e=e.next;while(e!==a);e.prevZ.nextZ=null,e.prevZ=null,f9(e)}function f9(a){let b,c,d,e,f,g,h,i,j=1;do{for(c=a,a=null,f=null,g=0;c;){for(g++,d=c,h=0,b=0;b<j&&(h++,d=d.nextZ);b++);for(i=j;h>0||i>0&&d;)0!==h&&(0===i||!d||c.z<=d.z)?(e=c,c=c.nextZ,h--):(e=d,d=d.nextZ,i--),f?f.nextZ=e:a=e,e.prevZ=f,f=e;c=d}f.nextZ=null,j*=2}while(g>1);return a}function ga(a,b,c,d,e){return a=32767*(a-c)*e,b=32767*(b-d)*e,a=(a|a<<8)&16711935,a=(a|a<<4)&252645135,a=(a|a<<2)&858993459,a=(a|a<<1)&1431655765,b=(b|b<<8)&16711935,b=(b|b<<4)&252645135,b=(b|b<<2)&858993459,b=(b|b<<1)&1431655765,a|b<<1}function gb(a){let b=a,c=a;do(b.x<c.x||b.x===c.x&&b.y<c.y)&&(c=b),b=b.next;while(b!==a);return c}function gc(a,b,c,d,e,f,g,h){return(e-g)*(b-h)-(a-g)*(f-h)>=0&&(a-g)*(d-h)-(c-g)*(b-h)>=0&&(c-g)*(f-h)-(e-g)*(d-h)>=0}function gd(a,b){return a.next.i!==b.i&&a.prev.i!==b.i&&!gj(a,b)&&(gk(a,b)&&gk(b,a)&&gl(a,b)&&(ge(a.prev,a,b.prev)||ge(a,b.prev,b))||gf(a,b)&&ge(a.prev,a,a.next)>0&&ge(b.prev,b,b.next)>0)}function ge(a,b,c){return(b.y-a.y)*(c.x-b.x)-(b.x-a.x)*(c.y-b.y)}function gf(a,b){return a.x===b.x&&a.y===b.y}function gg(a,b,c,d){let e=gi(ge(a,b,c)),f=gi(ge(a,b,d)),g=gi(ge(c,d,a)),h=gi(ge(c,d,b));return!!(e!==f&&g!==h||0===e&&gh(a,c,b)||0===f&&gh(a,d,b)||0===g&&gh(c,a,d)||0===h&&gh(c,b,d))}function gh(a,b,c){return b.x<=Math.max(a.x,c.x)&&b.x>=Math.min(a.x,c.x)&&b.y<=Math.max(a.y,c.y)&&b.y>=Math.min(a.y,c.y)}function gi(a){return a>0?1:a<0?-1:0}function gj(a,b){let c=a;do{if(c.i!==a.i&&c.next.i!==a.i&&c.i!==b.i&&c.next.i!==b.i&&gg(c,c.next,a,b))return!0;c=c.next}while(c!==a);return!1}function gk(a,b){return 0>ge(a.prev,a,a.next)?ge(a,b,a.next)>=0&&ge(a,a.prev,b)>=0:0>ge(a,b,a.prev)||0>ge(a,a.next,b)}function gl(a,b){let c=a,d=!1,e=(a.x+b.x)/2,f=(a.y+b.y)/2;do c.y>f!=c.next.y>f&&c.next.y!==c.y&&e<(c.next.x-c.x)*(f-c.y)/(c.next.y-c.y)+c.x&&(d=!d),c=c.next;while(c!==a);return d}function gm(a,b){let c=new gp(a.i,a.x,a.y),d=new gp(b.i,b.x,b.y),e=a.next,f=b.prev;return a.next=b,b.prev=a,c.next=e,e.prev=c,d.next=c,c.prev=d,f.next=d,d.prev=f,d}function gn(a,b,c,d){let e=new gp(a,b,c);return d?(e.next=d.next,e.prev=d,d.next.prev=e,d.next=e):(e.prev=e,e.next=e),e}function go(a){a.next.prev=a.prev,a.prev.next=a.next,a.prevZ&&(a.prevZ.nextZ=a.nextZ),a.nextZ&&(a.nextZ.prevZ=a.prevZ)}function gp(a,b,c){this.i=a,this.x=b,this.y=c,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function gq(a,b,c,d){let e=0;for(let f=b,g=c-d;f<c;f+=d)e+=(a[g]-a[f])*(a[f+1]+a[g+1]),g=f;return e}class gr{static area(a){let b=a.length,c=0;for(let d=b-1,e=0;e<b;d=e++)c+=a[d].x*a[e].y-a[e].x*a[d].y;return .5*c}static isClockWise(a){return 0>gr.area(a)}static triangulateShape(a,b){let c=[],d=[],e=[];gs(a),gt(c,a);let f=a.length;b.forEach(gs);for(let g=0;g<b.length;g++)d.push(f),f+=b[g].length,gt(c,b[g]);let h=fX.triangulate(c,d);for(let i=0;i<h.length;i+=3)e.push(h.slice(i,i+3));return e}}function gs(a){let b=a.length;b>2&&a[b-1].equals(a[0])&&a.pop()}function gt(a,b){for(let c=0;c<b.length;c++)a.push(b[c].x),a.push(b[c].y)}class gu extends bK{constructor(a=new fW([new Q(.5,.5),new Q(-.5,.5),new Q(-.5,-.5),new Q(.5,-.5)]),b={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:a,options:b},a=Array.isArray(a)?a:[a];let c=this,d=[],e=[];for(let f=0,g=a.length;f<g;f++){let h=a[f];i(h)}function i(a){let f=[],g=void 0!==b.curveSegments?b.curveSegments:12,h=void 0!==b.steps?b.steps:1,i=void 0!==b.depth?b.depth:1,j=void 0===b.bevelEnabled||b.bevelEnabled,k=void 0!==b.bevelThickness?b.bevelThickness:.2,l=void 0!==b.bevelSize?b.bevelSize:k-.1,m=void 0!==b.bevelOffset?b.bevelOffset:0,n=void 0!==b.bevelSegments?b.bevelSegments:3,o=b.extrudePath,p=void 0!==b.UVGenerator?b.UVGenerator:gv;void 0!==b.amount&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),i=b.amount);let q,r=!1,s,t,u,v;o&&(q=o.getSpacedPoints(h),r=!0,j=!1,s=o.computeFrenetFrames(h,!1),t=new aq,u=new aq,v=new aq),j||(n=0,k=0,l=0,m=0);let w=a.extractPoints(g),x=w.shape,y=w.holes,z=!gr.isClockWise(x);if(z){x=x.reverse();for(let A=0,B=y.length;A<B;A++){let C=y[A];gr.isClockWise(C)&&(y[A]=C.reverse())}}let D=gr.triangulateShape(x,y),E=x;for(let F=0,G=y.length;F<G;F++){let H=y[F];x=x.concat(H)}function I(a,b,c){return b||console.error("THREE.ExtrudeGeometry: vec does not exist"),b.clone().multiplyScalar(c).add(a)}let J=x.length,K=D.length;function L(a,b,c){let d,e,f,g=a.x-b.x,h=a.y-b.y,i=c.x-a.x,j=c.y-a.y,k=g*g+h*h,l=g*j-h*i;if(Math.abs(l)>Number.EPSILON){let m=Math.sqrt(k),n=Math.sqrt(i*i+j*j),o=b.x-h/m,p=b.y+g/m,q=c.x-j/n,r=c.y+i/n,s=((q-o)*j-(r-p)*i)/(g*j-h*i);d=o+g*s-a.x,e=p+h*s-a.y;let t=d*d+e*e;if(t<=2)return new Q(d,e);f=Math.sqrt(t/2)}else{let u=!1;g>Number.EPSILON?i>Number.EPSILON&&(u=!0):g< -Number.EPSILON?i< -Number.EPSILON&&(u=!0):Math.sign(h)===Math.sign(j)&&(u=!0),u?(d=-h,e=g,f=Math.sqrt(k)):(d=g,e=h,f=Math.sqrt(k/2))}return new Q(d/f,e/f)}let M=[];for(let N=0,O=E.length,P=O-1,R=N+1;N<O;N++,P++,R++)P===O&&(P=0),R===O&&(R=0),M[N]=L(E[N],E[P],E[R]);let S=[],T,U=M.concat();for(let V=0,W=y.length;V<W;V++){let X=y[V];T=[];for(let Y=0,Z=X.length,$=Z-1,_=Y+1;Y<Z;Y++,$++,_++)$===Z&&($=0),_===Z&&(_=0),T[Y]=L(X[Y],X[$],X[_]);S.push(T),U=U.concat(T)}for(let aa=0;aa<n;aa++){let ab=aa/n,ac=k*Math.cos(ab*Math.PI/2),ad=l*Math.sin(ab*Math.PI/2)+m;for(let ae=0,af=E.length;ae<af;ae++){let ag=I(E[ae],M[ae],ad);aI(ag.x,ag.y,-ac)}for(let ah=0,ai=y.length;ah<ai;ah++){let aj=y[ah];T=S[ah];for(let ak=0,al=aj.length;ak<al;ak++){let am=I(aj[ak],T[ak],ad);aI(am.x,am.y,-ac)}}}let an=l+m;for(let ao=0;ao<J;ao++){let ap=j?I(x[ao],U[ao],an):x[ao];r?(u.copy(s.normals[0]).multiplyScalar(ap.x),t.copy(s.binormals[0]).multiplyScalar(ap.y),v.copy(q[0]).add(u).add(t),aI(v.x,v.y,v.z)):aI(ap.x,ap.y,0)}for(let ar=1;ar<=h;ar++)for(let as=0;as<J;as++){let at=j?I(x[as],U[as],an):x[as];r?(u.copy(s.normals[ar]).multiplyScalar(at.x),t.copy(s.binormals[ar]).multiplyScalar(at.y),v.copy(q[ar]).add(u).add(t),aI(v.x,v.y,v.z)):aI(at.x,at.y,i/h*ar)}for(let au=n-1;au>=0;au--){let av=au/n,aw=k*Math.cos(av*Math.PI/2),ax=l*Math.sin(av*Math.PI/2)+m;for(let ay=0,az=E.length;ay<az;ay++){let aA=I(E[ay],M[ay],ax);aI(aA.x,aA.y,i+aw)}for(let aB=0,aC=y.length;aB<aC;aB++){let aD=y[aB];T=S[aB];for(let aE=0,aF=aD.length;aE<aF;aE++){let aG=I(aD[aE],T[aE],ax);r?aI(aG.x,aG.y+q[h-1].y,q[h-1].x+aw):aI(aG.x,aG.y,i+aw)}}}function aH(a,b){let c=a.length;for(;--c>=0;){let d=c,e=c-1;e<0&&(e=a.length-1);for(let f=0,g=h+2*n;f<g;f++){let i=J*f,j=J*(f+1),k=b+d+i,l=b+e+i,m=b+e+j,o=b+d+j;aK(k,l,m,o)}}}function aI(a,b,c){f.push(a),f.push(b),f.push(c)}function aJ(a,b,e){aL(a),aL(b),aL(e);let f=d.length/3,g=p.generateTopUV(c,d,f-3,f-2,f-1);aM(g[0]),aM(g[1]),aM(g[2])}function aK(a,b,e,f){aL(a),aL(b),aL(f),aL(b),aL(e),aL(f);let g=d.length/3,h=p.generateSideWallUV(c,d,g-6,g-3,g-2,g-1);aM(h[0]),aM(h[1]),aM(h[3]),aM(h[1]),aM(h[2]),aM(h[3])}function aL(a){d.push(f[3*a+0]),d.push(f[3*a+1]),d.push(f[3*a+2])}function aM(a){e.push(a.x),e.push(a.y)}(function(){let a=d.length/3;if(j){let b=0,e=J*b;for(let f=0;f<K;f++){let g=D[f];aJ(g[2]+e,g[1]+e,g[0]+e)}e=J*(b=h+2*n);for(let i=0;i<K;i++){let k=D[i];aJ(k[0]+e,k[1]+e,k[2]+e)}}else{for(let l=0;l<K;l++){let m=D[l];aJ(m[2],m[1],m[0])}for(let o=0;o<K;o++){let p=D[o];aJ(p[0]+J*h,p[1]+J*h,p[2]+J*h)}}c.addGroup(a,d.length/3-a,0)})(),function(){let a=d.length/3,b=0;aH(E,b),b+=E.length;for(let e=0,f=y.length;e<f;e++){let g=y[e];aH(g,b),b+=g.length}c.addGroup(a,d.length/3-a,1)}()}this.setAttribute("position",new bC(d,3)),this.setAttribute("uv",new bC(e,2)),this.computeVertexNormals()}toJSON(){let a=super.toJSON(),b=this.parameters.shapes,c=this.parameters.options;return gw(b,c,a)}static fromJSON(a,b){let c=[];for(let d=0,e=a.shapes.length;d<e;d++){let f=b[a.shapes[d]];c.push(f)}let g=a.options.extrudePath;return void 0!==g&&(a.options.extrudePath=new fI[g.type]().fromJSON(g)),new gu(c,a.options)}}let gv={generateTopUV:function(a,b,c,d,e){let f=b[3*c],g=b[3*c+1],h=b[3*d],i=b[3*d+1],j=b[3*e],k=b[3*e+1];return[new Q(f,g),new Q(h,i),new Q(j,k)]},generateSideWallUV:function(a,b,c,d,e,f){let g=b[3*c],h=b[3*c+1],i=b[3*c+2],j=b[3*d],k=b[3*d+1],l=b[3*d+2],m=b[3*e],n=b[3*e+1],o=b[3*e+2],p=b[3*f],q=b[3*f+1],r=b[3*f+2];return Math.abs(h-k)<Math.abs(g-j)?[new Q(g,1-i),new Q(j,1-l),new Q(m,1-o),new Q(p,1-r)]:[new Q(h,1-i),new Q(k,1-l),new Q(n,1-o),new Q(q,1-r)]}};function gw(a,b,c){if(c.shapes=[],Array.isArray(a))for(let d=0,e=a.length;d<e;d++){let f=a[d];c.shapes.push(f.uuid)}else c.shapes.push(a.uuid);return void 0!==b.extrudePath&&(c.options.extrudePath=b.extrudePath.toJSON()),c}class gx extends fQ{constructor(a=1,b=0){let c=(1+Math.sqrt(5))/2;super([-1,c,0,1,c,0,-1,-c,0,1,-c,0,0,-1,c,0,1,c,0,-1,-c,0,1,-c,c,0,-1,c,0,1,-c,0,-1,-c,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],a,b),this.type="IcosahedronGeometry",this.parameters={radius:a,detail:b}}static fromJSON(a){return new gx(a.radius,a.detail)}}class gy extends fQ{constructor(a=1,b=0){super([1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],a,b),this.type="OctahedronGeometry",this.parameters={radius:a,detail:b}}static fromJSON(a){return new gy(a.radius,a.detail)}}class gz extends bK{constructor(a=.5,b=1,c=8,d=1,e=0,f=2*Math.PI){super(),this.type="RingGeometry",this.parameters={innerRadius:a,outerRadius:b,thetaSegments:c,phiSegments:d,thetaStart:e,thetaLength:f},c=Math.max(3,c),d=Math.max(1,d);let g=[],h=[],i=[],j=[],k=a,l=(b-a)/d,m=new aq,n=new Q;for(let o=0;o<=d;o++){for(let p=0;p<=c;p++){let q=e+p/c*f;m.x=k*Math.cos(q),m.y=k*Math.sin(q),h.push(m.x,m.y,m.z),i.push(0,0,1),n.x=(m.x/b+1)/2,n.y=(m.y/b+1)/2,j.push(n.x,n.y)}k+=l}for(let r=0;r<d;r++){let s=r*(c+1);for(let t=0;t<c;t++){let u=t+s,v=u,w=u+c+1,x=u+c+2,y=u+1;g.push(v,w,y),g.push(w,x,y)}}this.setIndex(g),this.setAttribute("position",new bC(h,3)),this.setAttribute("normal",new bC(i,3)),this.setAttribute("uv",new bC(j,2))}static fromJSON(a){return new gz(a.innerRadius,a.outerRadius,a.thetaSegments,a.phiSegments,a.thetaStart,a.thetaLength)}}class gA extends bK{constructor(a=new fW([new Q(0,.5),new Q(-.5,-.5),new Q(.5,-.5)]),b=12){super(),this.type="ShapeGeometry",this.parameters={shapes:a,curveSegments:b};let c=[],d=[],e=[],f=[],g=0,h=0;if(!1===Array.isArray(a))j(a);else for(let i=0;i<a.length;i++)j(a[i]),this.addGroup(g,h,i),g+=h,h=0;function j(a){let g=d.length/3,i=a.extractPoints(b),j=i.shape,k=i.holes;!1===gr.isClockWise(j)&&(j=j.reverse());for(let l=0,m=k.length;l<m;l++){let n=k[l];!0===gr.isClockWise(n)&&(k[l]=n.reverse())}let o=gr.triangulateShape(j,k);for(let p=0,q=k.length;p<q;p++){let r=k[p];j=j.concat(r)}for(let s=0,t=j.length;s<t;s++){let u=j[s];d.push(u.x,u.y,0),e.push(0,0,1),f.push(u.x,u.y)}for(let v=0,w=o.length;v<w;v++){let x=o[v],y=x[0]+g,z=x[1]+g,A=x[2]+g;c.push(y,z,A),h+=3}}this.setIndex(c),this.setAttribute("position",new bC(d,3)),this.setAttribute("normal",new bC(e,3)),this.setAttribute("uv",new bC(f,2))}toJSON(){let a=super.toJSON(),b=this.parameters.shapes;return gB(b,a)}static fromJSON(a,b){let c=[];for(let d=0,e=a.shapes.length;d<e;d++){let f=b[a.shapes[d]];c.push(f)}return new gA(c,a.curveSegments)}}function gB(a,b){if(b.shapes=[],Array.isArray(a))for(let c=0,d=a.length;c<d;c++){let e=a[c];b.shapes.push(e.uuid)}else b.shapes.push(a.uuid);return b}class gC extends bK{constructor(a=1,b=32,c=16,d=0,e=2*Math.PI,f=0,g=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:a,widthSegments:b,heightSegments:c,phiStart:d,phiLength:e,thetaStart:f,thetaLength:g},b=Math.max(3,Math.floor(b)),c=Math.max(2,Math.floor(c));let h=Math.min(f+g,Math.PI),i=0,j=[],k=new aq,l=new aq,m=[],n=[],o=[],p=[];for(let q=0;q<=c;q++){let r=[],s=q/c,t=0;0==q&&0==f?t=.5/b:q==c&&h==Math.PI&&(t=-.5/b);for(let u=0;u<=b;u++){let v=u/b;k.x=-a*Math.cos(d+v*e)*Math.sin(f+s*g),k.y=a*Math.cos(f+s*g),k.z=a*Math.sin(d+v*e)*Math.sin(f+s*g),n.push(k.x,k.y,k.z),l.copy(k).normalize(),o.push(l.x,l.y,l.z),p.push(v+t,1-s),r.push(i++)}j.push(r)}for(let w=0;w<c;w++)for(let x=0;x<b;x++){let y=j[w][x+1],z=j[w][x],A=j[w+1][x],B=j[w+1][x+1];(0!==w||f>0)&&m.push(y,z,B),(w!==c-1||h<Math.PI)&&m.push(z,A,B)}this.setIndex(m),this.setAttribute("position",new bC(n,3)),this.setAttribute("normal",new bC(o,3)),this.setAttribute("uv",new bC(p,2))}static fromJSON(a){return new gC(a.radius,a.widthSegments,a.heightSegments,a.phiStart,a.phiLength,a.thetaStart,a.thetaLength)}}class gD extends fQ{constructor(a=1,b=0){super([1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],a,b),this.type="TetrahedronGeometry",this.parameters={radius:a,detail:b}}static fromJSON(a){return new gD(a.radius,a.detail)}}class gE extends bK{constructor(a=1,b=.4,c=8,d=6,e=2*Math.PI){super(),this.type="TorusGeometry",this.parameters={radius:a,tube:b,radialSegments:c,tubularSegments:d,arc:e},c=Math.floor(c),d=Math.floor(d);let f=[],g=[],h=[],i=[],j=new aq,k=new aq,l=new aq;for(let m=0;m<=c;m++)for(let n=0;n<=d;n++){let o=n/d*e,p=m/c*Math.PI*2;k.x=(a+b*Math.cos(p))*Math.cos(o),k.y=(a+b*Math.cos(p))*Math.sin(o),k.z=b*Math.sin(p),g.push(k.x,k.y,k.z),j.x=a*Math.cos(o),j.y=a*Math.sin(o),l.subVectors(k,j).normalize(),h.push(l.x,l.y,l.z),i.push(n/d),i.push(m/c)}for(let q=1;q<=c;q++)for(let r=1;r<=d;r++){let s=(d+1)*q+r-1,t=(d+1)*(q-1)+r-1,u=(d+1)*(q-1)+r,v=(d+1)*q+r;f.push(s,t,v),f.push(t,u,v)}this.setIndex(f),this.setAttribute("position",new bC(g,3)),this.setAttribute("normal",new bC(h,3)),this.setAttribute("uv",new bC(i,2))}static fromJSON(a){return new gE(a.radius,a.tube,a.radialSegments,a.tubularSegments,a.arc)}}class gF extends bK{constructor(a=1,b=.4,c=64,d=8,e=2,f=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:a,tube:b,tubularSegments:c,radialSegments:d,p:e,q:f},c=Math.floor(c),d=Math.floor(d);let g=[],h=[],i=[],j=[],k=new aq,l=new aq,m=new aq,n=new aq,o=new aq,p=new aq,q=new aq;for(let r=0;r<=c;++r){let s=r/c*e*Math.PI*2;D(s,e,f,a,m),D(s+.01,e,f,a,n),p.subVectors(n,m),q.addVectors(n,m),o.crossVectors(p,q),q.crossVectors(o,p),o.normalize(),q.normalize();for(let t=0;t<=d;++t){let u=t/d*Math.PI*2,v=-b*Math.cos(u),w=b*Math.sin(u);k.x=m.x+(v*q.x+w*o.x),k.y=m.y+(v*q.y+w*o.y),k.z=m.z+(v*q.z+w*o.z),h.push(k.x,k.y,k.z),l.subVectors(k,m).normalize(),i.push(l.x,l.y,l.z),j.push(r/c),j.push(t/d)}}for(let x=1;x<=c;x++)for(let y=1;y<=d;y++){let z=(d+1)*(x-1)+(y-1),A=(d+1)*x+(y-1),B=(d+1)*x+y,C=(d+1)*(x-1)+y;g.push(z,A,C),g.push(A,B,C)}function D(a,b,c,d,e){let f=c/b*a,g=Math.cos(f);e.x=d*(2+g)*.5*Math.cos(a),e.y=d*(2+g)*Math.sin(a)*.5,e.z=d*Math.sin(f)*.5}this.setIndex(g),this.setAttribute("position",new bC(h,3)),this.setAttribute("normal",new bC(i,3)),this.setAttribute("uv",new bC(j,2))}static fromJSON(a){return new gF(a.radius,a.tube,a.tubularSegments,a.radialSegments,a.p,a.q)}}class gG extends bK{constructor(a=new fG(new aq(-1,-1,0),new aq(-1,1,0),new aq(1,1,0)),b=64,c=1,d=8,e=!1){super(),this.type="TubeGeometry",this.parameters={path:a,tubularSegments:b,radius:c,radialSegments:d,closed:e};let f=a.computeFrenetFrames(b,e);this.tangents=f.tangents,this.normals=f.normals,this.binormals=f.binormals;let g=new aq,h=new aq,i=new Q,j=new aq,k=[],l=[],m=[],n=[];function o(e){j=a.getPointAt(e/b,j);let i=f.normals[e],m=f.binormals[e];for(let n=0;n<=d;n++){let o=n/d*Math.PI*2,p=Math.sin(o),q=-Math.cos(o);h.x=q*i.x+p*m.x,h.y=q*i.y+p*m.y,h.z=q*i.z+p*m.z,h.normalize(),l.push(h.x,h.y,h.z),g.x=j.x+c*h.x,g.y=j.y+c*h.y,g.z=j.z+c*h.z,k.push(g.x,g.y,g.z)}}function p(){for(let a=1;a<=b;a++)for(let c=1;c<=d;c++){let e=(d+1)*(a-1)+(c-1),f=(d+1)*a+(c-1),g=(d+1)*a+c,h=(d+1)*(a-1)+c;n.push(e,f,h),n.push(f,g,h)}}function q(){for(let a=0;a<=b;a++)for(let c=0;c<=d;c++)i.x=a/b,i.y=c/d,m.push(i.x,i.y)}(function(){for(let a=0;a<b;a++)o(a);o(!1===e?b:0),q(),p()})(),this.setIndex(n),this.setAttribute("position",new bC(k,3)),this.setAttribute("normal",new bC(l,3)),this.setAttribute("uv",new bC(m,2))}toJSON(){let a=super.toJSON();return a.path=this.parameters.path.toJSON(),a}static fromJSON(a){return new gG(new fI[a.path.type]().fromJSON(a.path),a.tubularSegments,a.radius,a.radialSegments,a.closed)}}function gH(a,b,c){let d=`${a.x},${a.y},${a.z}-${b.x},${b.y},${b.z}`,e=`${b.x},${b.y},${b.z}-${a.x},${a.y},${a.z}`;return!0!==c.has(d)&& !0!==c.has(e)&&(c.add(d),c.add(e),!0)}(class a extends bK{constructor(a=null,b=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:a,thresholdAngle:b},null!==a){let c=4,d=Math.pow(10,c),e=Math.cos(E*b),f=a.getIndex(),g=a.getAttribute("position"),h=f?f.count:g.count,i=[0,0,0],j=["a","b","c"],k=[,,,],l={},m=[];for(let n=0;n<h;n+=3){f?(i[0]=f.getX(n),i[1]=f.getX(n+1),i[2]=f.getX(n+2)):(i[0]=n,i[1]=n+1,i[2]=n+2);let{a:o,b:p,c:q}=fV;if(o.fromBufferAttribute(g,i[0]),p.fromBufferAttribute(g,i[1]),q.fromBufferAttribute(g,i[2]),fV.getNormal(fU),k[0]=`${Math.round(o.x*d)},${Math.round(o.y*d)},${Math.round(o.z*d)}`,k[1]=`${Math.round(p.x*d)},${Math.round(p.y*d)},${Math.round(p.z*d)}`,k[2]=`${Math.round(q.x*d)},${Math.round(q.y*d)},${Math.round(q.z*d)}`,k[0]!==k[1]&&k[1]!==k[2]&&k[2]!==k[0])for(let r=0;r<3;r++){let s=(r+1)%3,t=k[r],u=k[s],v=fV[j[r]],w=fV[j[s]],x=`${t}_${u}`,y=`${u}_${t}`;y in l&&l[y]?(fU.dot(l[y].normal)<=e&&(m.push(v.x,v.y,v.z),m.push(w.x,w.y,w.z)),l[y]=null):x in l||(l[x]={index0:i[r],index1:i[s],normal:fU.clone()})}}for(let z in l)if(l[z]){let{index0:A,index1:B}=l[z];fS.fromBufferAttribute(g,A),fT.fromBufferAttribute(g,B),m.push(fS.x,fS.y,fS.z),m.push(fT.x,fT.y,fT.z)}this.setAttribute("position",new bC(m,3))}}}),class a extends bK{constructor(a=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:a},null!==a){let b=[],c=new Set,d=new aq,e=new aq;if(null!==a.index){let f=a.attributes.position,g=a.index,h=a.groups;0===h.length&&(h=[{start:0,count:g.count,materialIndex:0}]);for(let i=0,j=h.length;i<j;++i){let k=h[i],l=k.start,m=k.count;for(let n=l,o=l+m;n<o;n+=3)for(let p=0;p<3;p++){let q=g.getX(n+p),r=g.getX(n+(p+1)%3);d.fromBufferAttribute(f,q),e.fromBufferAttribute(f,r),!0===gH(d,e,c)&&(b.push(d.x,d.y,d.z),b.push(e.x,e.y,e.z))}}}else{let s=a.attributes.position;for(let t=0,u=s.count/3;t<u;t++)for(let v=0;v<3;v++){let w=3*t+v,x=3*t+(v+1)%3;d.fromBufferAttribute(s,w),e.fromBufferAttribute(s,x),!0===gH(d,e,c)&&(b.push(d.x,d.y,d.z),b.push(e.x,e.y,e.z))}}this.setAttribute("position",new bC(b,3))}}};class gI extends bv{constructor(a){super(),this.type="ShadowMaterial",this.color=new ae(0),this.transparent=!0,this.setValues(a)}copy(a){return super.copy(a),this.color.copy(a.color),this}}gI.prototype.isShadowMaterial=!0;class gJ extends b6{constructor(a){super(a),this.type="RawShaderMaterial"}}gJ.prototype.isRawShaderMaterial=!0;class gK extends bv{constructor(a){super(),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new ae(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ae(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=w,this.normalScale=new Q(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.setValues(a)}copy(a){return super.copy(a),this.defines={STANDARD:""},this.color.copy(a.color),this.roughness=a.roughness,this.metalness=a.metalness,this.map=a.map,this.lightMap=a.lightMap,this.lightMapIntensity=a.lightMapIntensity,this.aoMap=a.aoMap,this.aoMapIntensity=a.aoMapIntensity,this.emissive.copy(a.emissive),this.emissiveMap=a.emissiveMap,this.emissiveIntensity=a.emissiveIntensity,this.bumpMap=a.bumpMap,this.bumpScale=a.bumpScale,this.normalMap=a.normalMap,this.normalMapType=a.normalMapType,this.normalScale.copy(a.normalScale),this.displacementMap=a.displacementMap,this.displacementScale=a.displacementScale,this.displacementBias=a.displacementBias,this.roughnessMap=a.roughnessMap,this.metalnessMap=a.metalnessMap,this.alphaMap=a.alphaMap,this.envMap=a.envMap,this.envMapIntensity=a.envMapIntensity,this.wireframe=a.wireframe,this.wireframeLinewidth=a.wireframeLinewidth,this.wireframeLinecap=a.wireframeLinecap,this.wireframeLinejoin=a.wireframeLinejoin,this.flatShading=a.flatShading,this}}gK.prototype.isMeshStandardMaterial=!0;class gL extends gK{constructor(a){super(),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new Q(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return H(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(a){this.ior=(1+.4*a)/(1-.4*a)}}),this.sheenColor=new ae(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=0,this.attenuationColor=new ae(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new ae(1,1,1),this.specularColorMap=null,this._sheen=0,this._clearcoat=0,this._transmission=0,this.setValues(a)}get sheen(){return this._sheen}set sheen(a){this._sheen>0!=a>0&&this.version++,this._sheen=a}get clearcoat(){return this._clearcoat}set clearcoat(a){this._clearcoat>0!=a>0&&this.version++,this._clearcoat=a}get transmission(){return this._transmission}set transmission(a){this._transmission>0!=a>0&&this.version++,this._transmission=a}copy(a){return super.copy(a),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=a.clearcoat,this.clearcoatMap=a.clearcoatMap,this.clearcoatRoughness=a.clearcoatRoughness,this.clearcoatRoughnessMap=a.clearcoatRoughnessMap,this.clearcoatNormalMap=a.clearcoatNormalMap,this.clearcoatNormalScale.copy(a.clearcoatNormalScale),this.ior=a.ior,this.sheen=a.sheen,this.sheenColor.copy(a.sheenColor),this.sheenColorMap=a.sheenColorMap,this.sheenRoughness=a.sheenRoughness,this.sheenRoughnessMap=a.sheenRoughnessMap,this.transmission=a.transmission,this.transmissionMap=a.transmissionMap,this.thickness=a.thickness,this.thicknessMap=a.thicknessMap,this.attenuationDistance=a.attenuationDistance,this.attenuationColor.copy(a.attenuationColor),this.specularIntensity=a.specularIntensity,this.specularIntensityMap=a.specularIntensityMap,this.specularColor.copy(a.specularColor),this.specularColorMap=a.specularColorMap,this}}gL.prototype.isMeshPhysicalMaterial=!0;class gM extends bv{constructor(a){super(),this.type="MeshPhongMaterial",this.color=new ae(16777215),this.specular=new ae(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ae(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=w,this.normalScale=new Q(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.setValues(a)}copy(a){return super.copy(a),this.color.copy(a.color),this.specular.copy(a.specular),this.shininess=a.shininess,this.map=a.map,this.lightMap=a.lightMap,this.lightMapIntensity=a.lightMapIntensity,this.aoMap=a.aoMap,this.aoMapIntensity=a.aoMapIntensity,this.emissive.copy(a.emissive),this.emissiveMap=a.emissiveMap,this.emissiveIntensity=a.emissiveIntensity,this.bumpMap=a.bumpMap,this.bumpScale=a.bumpScale,this.normalMap=a.normalMap,this.normalMapType=a.normalMapType,this.normalScale.copy(a.normalScale),this.displacementMap=a.displacementMap,this.displacementScale=a.displacementScale,this.displacementBias=a.displacementBias,this.specularMap=a.specularMap,this.alphaMap=a.alphaMap,this.envMap=a.envMap,this.combine=a.combine,this.reflectivity=a.reflectivity,this.refractionRatio=a.refractionRatio,this.wireframe=a.wireframe,this.wireframeLinewidth=a.wireframeLinewidth,this.wireframeLinecap=a.wireframeLinecap,this.wireframeLinejoin=a.wireframeLinejoin,this.flatShading=a.flatShading,this}}gM.prototype.isMeshPhongMaterial=!0;class gN extends bv{constructor(a){super(),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new ae(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ae(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=w,this.normalScale=new Q(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(a)}copy(a){return super.copy(a),this.color.copy(a.color),this.map=a.map,this.gradientMap=a.gradientMap,this.lightMap=a.lightMap,this.lightMapIntensity=a.lightMapIntensity,this.aoMap=a.aoMap,this.aoMapIntensity=a.aoMapIntensity,this.emissive.copy(a.emissive),this.emissiveMap=a.emissiveMap,this.emissiveIntensity=a.emissiveIntensity,this.bumpMap=a.bumpMap,this.bumpScale=a.bumpScale,this.normalMap=a.normalMap,this.normalMapType=a.normalMapType,this.normalScale.copy(a.normalScale),this.displacementMap=a.displacementMap,this.displacementScale=a.displacementScale,this.displacementBias=a.displacementBias,this.alphaMap=a.alphaMap,this.wireframe=a.wireframe,this.wireframeLinewidth=a.wireframeLinewidth,this.wireframeLinecap=a.wireframeLinecap,this.wireframeLinejoin=a.wireframeLinejoin,this}}gN.prototype.isMeshToonMaterial=!0;class gO extends bv{constructor(a){super(),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=w,this.normalScale=new Q(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.flatShading=!1,this.setValues(a)}copy(a){return super.copy(a),this.bumpMap=a.bumpMap,this.bumpScale=a.bumpScale,this.normalMap=a.normalMap,this.normalMapType=a.normalMapType,this.normalScale.copy(a.normalScale),this.displacementMap=a.displacementMap,this.displacementScale=a.displacementScale,this.displacementBias=a.displacementBias,this.wireframe=a.wireframe,this.wireframeLinewidth=a.wireframeLinewidth,this.flatShading=a.flatShading,this}}gO.prototype.isMeshNormalMaterial=!0;class gP extends bv{constructor(a){super(),this.type="MeshLambertMaterial",this.color=new ae(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ae(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(a)}copy(a){return super.copy(a),this.color.copy(a.color),this.map=a.map,this.lightMap=a.lightMap,this.lightMapIntensity=a.lightMapIntensity,this.aoMap=a.aoMap,this.aoMapIntensity=a.aoMapIntensity,this.emissive.copy(a.emissive),this.emissiveMap=a.emissiveMap,this.emissiveIntensity=a.emissiveIntensity,this.specularMap=a.specularMap,this.alphaMap=a.alphaMap,this.envMap=a.envMap,this.combine=a.combine,this.reflectivity=a.reflectivity,this.refractionRatio=a.refractionRatio,this.wireframe=a.wireframe,this.wireframeLinewidth=a.wireframeLinewidth,this.wireframeLinecap=a.wireframeLinecap,this.wireframeLinejoin=a.wireframeLinejoin,this}}gP.prototype.isMeshLambertMaterial=!0;class gQ extends bv{constructor(a){super(),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new ae(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=w,this.normalScale=new Q(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.setValues(a)}copy(a){return super.copy(a),this.defines={MATCAP:""},this.color.copy(a.color),this.matcap=a.matcap,this.map=a.map,this.bumpMap=a.bumpMap,this.bumpScale=a.bumpScale,this.normalMap=a.normalMap,this.normalMapType=a.normalMapType,this.normalScale.copy(a.normalScale),this.displacementMap=a.displacementMap,this.displacementScale=a.displacementScale,this.displacementBias=a.displacementBias,this.alphaMap=a.alphaMap,this.flatShading=a.flatShading,this}}gQ.prototype.isMeshMatcapMaterial=!0;class gR extends e8{constructor(a){super(),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(a)}copy(a){return super.copy(a),this.scale=a.scale,this.dashSize=a.dashSize,this.gapSize=a.gapSize,this}}gR.prototype.isLineDashedMaterial=!0;let gS={ShadowMaterial:gI,SpriteMaterial:eD,RawShaderMaterial:gJ,ShaderMaterial:b6,PointsMaterial:fj,MeshPhysicalMaterial:gL,MeshStandardMaterial:gK,MeshPhongMaterial:gM,MeshToonMaterial:gN,MeshNormalMaterial:gO,MeshLambertMaterial:gP,MeshDepthMaterial:ej,MeshDistanceMaterial:ek,MeshBasicMaterial:bw,MeshMatcapMaterial:gQ,LineDashedMaterial:gR,LineBasicMaterial:e8,Material:bv};bv.fromType=function(a){return new gS[a]};let gT={arraySlice:function(a,b,c){return gT.isTypedArray(a)?new a.constructor(a.subarray(b,void 0!==c?c:a.length)):a.slice(b,c)},convertArray:function(a,b,c){return a&&(c||a.constructor!==b)?"number"==typeof b.BYTES_PER_ELEMENT?new b(a):Array.prototype.slice.call(a):a},isTypedArray:function(a){return ArrayBuffer.isView(a)&&!(a instanceof DataView)},getKeyframeOrder:function(a){let b=a.length,c=Array(b);for(let d=0;d!==b;++d)c[d]=d;return c.sort(function(b,c){return a[b]-a[c]}),c},sortedArray:function(a,b,c){let d=a.length,e=new a.constructor(d);for(let f=0,g=0;g!==d;++f){let h=c[f]*b;for(let i=0;i!==b;++i)e[g++]=a[h+i]}return e},flattenJSON:function(a,b,c,d){let e=1,f=a[0];for(;void 0!==f&& void 0===f[d];)f=a[e++];if(void 0===f)return;let g=f[d];if(void 0!==g){if(Array.isArray(g))do void 0!==(g=f[d])&&(b.push(f.time),c.push.apply(c,g)),f=a[e++];while(void 0!==f);else if(void 0!==g.toArray)do void 0!==(g=f[d])&&(b.push(f.time),g.toArray(c,c.length)),f=a[e++];while(void 0!==f);else do void 0!==(g=f[d])&&(b.push(f.time),c.push(g)),f=a[e++];while(void 0!==f)}},subclip:function(a,b,c,d,e=30){let f=a.clone();f.name=b;let g=[];for(let h=0;h<f.tracks.length;++h){let i=f.tracks[h],j=i.getValueSize(),k=[],l=[];for(let m=0;m<i.times.length;++m){let n=i.times[m]*e;if(!(n<c)&&!(n>=d)){k.push(i.times[m]);for(let o=0;o<j;++o)l.push(i.values[m*j+o])}}0!==k.length&&(i.times=gT.convertArray(k,i.times.constructor),i.values=gT.convertArray(l,i.values.constructor),g.push(i))}f.tracks=g;let p=1/0;for(let q=0;q<f.tracks.length;++q)p>f.tracks[q].times[0]&&(p=f.tracks[q].times[0]);for(let r=0;r<f.tracks.length;++r)f.tracks[r].shift(-1*p);return f.resetDuration(),f},makeClipAdditive:function(a,b=0,c=a,d=30){d<=0&&(d=30);let e=c.tracks.length,f=b/d;for(let g=0;g<e;++g){let h=c.tracks[g],i=h.ValueTypeName;if("bool"===i||"string"===i)continue;let j=a.tracks.find(function(a){return a.name===h.name&&a.ValueTypeName===i});if(void 0===j)continue;let k=0,l=h.getValueSize();h.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(k=l/3);let m=0,n=j.getValueSize();j.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(m=n/3);let o=h.times.length-1,p;if(f<=h.times[0]){let q=k,r=l-k;p=gT.arraySlice(h.values,q,r)}else if(f>=h.times[o]){let s=o*l+k,t=s+l-k;p=gT.arraySlice(h.values,s,t)}else{let u=h.createInterpolant(),v=k,w=l-k;u.evaluate(f),p=gT.arraySlice(u.resultBuffer,v,w)}if("quaternion"===i){let x=new ap().fromArray(p).normalize().conjugate();x.toArray(p)}let y=j.times.length;for(let z=0;z<y;++z){let A=z*n+m;if("quaternion"===i)ap.multiplyQuaternionsFlat(j.values,A,p,0,j.values,A);else{let B=n-2*m;for(let C=0;C<B;++C)j.values[A+C]-=p[C]}}}return a.blendMode=2501,a}};class gU{constructor(a,b,c,d){this.parameterPositions=a,this._cachedIndex=0,this.resultBuffer=void 0!==d?d:new b.constructor(c),this.sampleValues=b,this.valueSize=c,this.settings=null,this.DefaultSettings_={}}evaluate(a){let b=this.parameterPositions,c=this._cachedIndex,d=b[c],e=b[c-1];validate_interval:{seek:{let f;linear_scan:{forward_scan:if(!(a<d)){for(let g=c+2;;){if(void 0===d){if(a<e)break forward_scan;return c=b.length,this._cachedIndex=c,this.afterEnd_(c-1,a,e)}if(c===g)break;if(e=d,a<(d=b[++c]))break seek}f=b.length;break linear_scan}if(!(a>=e)){let h=b[1];a<h&&(c=2,e=h);for(let i=c-2;;){if(void 0===e)return this._cachedIndex=0,this.beforeStart_(0,a,d);if(c===i)break;if(d=e,a>=(e=b[--c-1]))break seek}f=c,c=0;break linear_scan}break validate_interval}for(;c<f;){let j=c+f>>>1;a<b[j]?f=j:c=j+1}if(d=b[c],e=b[c-1],void 0===e)return this._cachedIndex=0,this.beforeStart_(0,a,d);if(void 0===d)return c=b.length,this._cachedIndex=c,this.afterEnd_(c-1,e,a)}this._cachedIndex=c,this.intervalChanged_(c,e,d)}return this.interpolate_(c,e,a,d)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(a){let b=this.resultBuffer,c=this.sampleValues,d=this.valueSize,e=a*d;for(let f=0;f!==d;++f)b[f]=c[e+f];return b}interpolate_(){throw Error("call to abstract method")}intervalChanged_(){}}gU.prototype.beforeStart_=gU.prototype.copySampleValue_,gU.prototype.afterEnd_=gU.prototype.copySampleValue_;class gV extends gU{constructor(a,b,c,d){super(a,b,c,d),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:2400,endingEnd:2400}}intervalChanged_(a,b,c){let d=this.parameterPositions,e=a-2,f=a+1,g=d[e],h=d[f];if(void 0===g)switch(this.getSettings_().endingStart){case 2401:e=a,g=2*b-c;break;case 2402:e=d.length-2,g=b+d[e]-d[e+1];break;default:e=a,g=c}if(void 0===h)switch(this.getSettings_().endingEnd){case 2401:f=a,h=2*c-b;break;case 2402:f=1,h=c+d[1]-d[0];break;default:f=a-1,h=b}let i=(c-b)*.5,j=this.valueSize;this._weightPrev=i/(b-g),this._weightNext=i/(h-c),this._offsetPrev=e*j,this._offsetNext=f*j}interpolate_(a,b,c,d){let e=this.resultBuffer,f=this.sampleValues,g=this.valueSize,h=a*g,i=h-g,j=this._offsetPrev,k=this._offsetNext,l=this._weightPrev,m=this._weightNext,n=(c-b)/(d-b),o=n*n,p=o*n,q=-l*p+2*l*o-l*n,r=(1+l)*p+(-1.5-2*l)*o+(-.5+l)*n+1,s=(-1-m)*p+(1.5+m)*o+.5*n,t=m*p-m*o;for(let u=0;u!==g;++u)e[u]=q*f[j+u]+r*f[i+u]+s*f[h+u]+t*f[k+u];return e}}class gW extends gU{constructor(a,b,c,d){super(a,b,c,d)}interpolate_(a,b,c,d){let e=this.resultBuffer,f=this.sampleValues,g=this.valueSize,h=a*g,i=h-g,j=(c-b)/(d-b),k=1-j;for(let l=0;l!==g;++l)e[l]=f[i+l]*k+f[h+l]*j;return e}}class gX extends gU{constructor(a,b,c,d){super(a,b,c,d)}interpolate_(a){return this.copySampleValue_(a-1)}}class gY{constructor(a,b,c,d){if(void 0===a)throw Error("THREE.KeyframeTrack: track name is undefined");if(void 0===b||0===b.length)throw Error("THREE.KeyframeTrack: no keyframes in track named "+a);this.name=a,this.times=gT.convertArray(b,this.TimeBufferType),this.values=gT.convertArray(c,this.ValueBufferType),this.setInterpolation(d||this.DefaultInterpolation)}static toJSON(a){let b=a.constructor,c;if(b.toJSON!==this.toJSON)c=b.toJSON(a);else{c={name:a.name,times:gT.convertArray(a.times,Array),values:gT.convertArray(a.values,Array)};let d=a.getInterpolation();d!==a.DefaultInterpolation&&(c.interpolation=d)}return c.type=a.ValueTypeName,c}InterpolantFactoryMethodDiscrete(a){return new gX(this.times,this.values,this.getValueSize(),a)}InterpolantFactoryMethodLinear(a){return new gW(this.times,this.values,this.getValueSize(),a)}InterpolantFactoryMethodSmooth(a){return new gV(this.times,this.values,this.getValueSize(),a)}setInterpolation(a){let b;switch(a){case r:b=this.InterpolantFactoryMethodDiscrete;break;case s:b=this.InterpolantFactoryMethodLinear;break;case 2302:b=this.InterpolantFactoryMethodSmooth}if(void 0===b){let c="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(a!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw Error(c)}return console.warn("THREE.KeyframeTrack:",c),this}return this.createInterpolant=b,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return r;case this.InterpolantFactoryMethodLinear:return s;case this.InterpolantFactoryMethodSmooth:return 2302}}getValueSize(){return this.values.length/this.times.length}shift(a){if(0!==a){let b=this.times;for(let c=0,d=b.length;c!==d;++c)b[c]+=a}return this}scale(a){if(1!==a){let b=this.times;for(let c=0,d=b.length;c!==d;++c)b[c]*=a}return this}trim(a,b){let c=this.times,d=c.length,e=0,f=d-1;for(;e!==d&&c[e]<a;)++e;for(;-1!==f&&c[f]>b;)--f;if(++f,0!==e||f!==d){e>=f&&(e=(f=Math.max(f,1))-1);let g=this.getValueSize();this.times=gT.arraySlice(c,e,f),this.values=gT.arraySlice(this.values,e*g,f*g)}return this}validate(){let a=!0,b=this.getValueSize();b-Math.floor(b)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),a=!1);let c=this.times,d=this.values,e=c.length;0===e&&(console.error("THREE.KeyframeTrack: Track is empty.",this),a=!1);let f=null;for(let g=0;g!==e;g++){let h=c[g];if("number"==typeof h&&isNaN(h)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,g,h),a=!1;break}if(null!==f&&f>h){console.error("THREE.KeyframeTrack: Out of order keys.",this,g,h,f),a=!1;break}f=h}if(void 0!==d&&gT.isTypedArray(d))for(let i=0,j=d.length;i!==j;++i){let k=d[i];if(isNaN(k)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,i,k),a=!1;break}}return a}optimize(){let a=gT.arraySlice(this.times),b=gT.arraySlice(this.values),c=this.getValueSize(),d=2302===this.getInterpolation(),e=a.length-1,f=1;for(let g=1;g<e;++g){let h=!1,i=a[g],j=a[g+1];if(i!==j&&(1!==g||i!==a[0])){if(d)h=!0;else{let k=g*c,l=k-c,m=k+c;for(let n=0;n!==c;++n){let o=b[k+n];if(o!==b[l+n]||o!==b[m+n]){h=!0;break}}}}if(h){if(g!==f){a[f]=a[g];let p=g*c,q=f*c;for(let r=0;r!==c;++r)b[q+r]=b[p+r]}++f}}if(e>0){a[f]=a[e];for(let s=e*c,t=f*c,u=0;u!==c;++u)b[t+u]=b[s+u];++f}return f!==a.length?(this.times=gT.arraySlice(a,0,f),this.values=gT.arraySlice(b,0,f*c)):(this.times=a,this.values=b),this}clone(){let a=gT.arraySlice(this.times,0),b=gT.arraySlice(this.values,0),c=this.constructor,d=new c(this.name,a,b);return d.createInterpolant=this.createInterpolant,d}}gY.prototype.TimeBufferType=Float32Array,gY.prototype.ValueBufferType=Float32Array,gY.prototype.DefaultInterpolation=s;class gZ extends gY{}gZ.prototype.ValueTypeName="bool",gZ.prototype.ValueBufferType=Array,gZ.prototype.DefaultInterpolation=r,gZ.prototype.InterpolantFactoryMethodLinear=void 0,gZ.prototype.InterpolantFactoryMethodSmooth=void 0;class g$ extends gY{}g$.prototype.ValueTypeName="color";class g_ extends gY{}g_.prototype.ValueTypeName="number";class g0 extends gU{constructor(a,b,c,d){super(a,b,c,d)}interpolate_(a,b,c,d){let e=this.resultBuffer,f=this.sampleValues,g=this.valueSize,h=(c-b)/(d-b),i=a*g;for(let j=i+g;i!==j;i+=4)ap.slerpFlat(e,0,f,i-g,f,i,h);return e}}class g1 extends gY{InterpolantFactoryMethodLinear(a){return new g0(this.times,this.values,this.getValueSize(),a)}}g1.prototype.ValueTypeName="quaternion",g1.prototype.DefaultInterpolation=s,g1.prototype.InterpolantFactoryMethodSmooth=void 0;class g2 extends gY{}g2.prototype.ValueTypeName="string",g2.prototype.ValueBufferType=Array,g2.prototype.DefaultInterpolation=r,g2.prototype.InterpolantFactoryMethodLinear=void 0,g2.prototype.InterpolantFactoryMethodSmooth=void 0;class g3 extends gY{}g3.prototype.ValueTypeName="vector";class g4{constructor(a,b=-1,c,d=2500){this.name=a,this.tracks=c,this.duration=b,this.blendMode=d,this.uuid=G(),this.duration<0&&this.resetDuration()}static parse(a){let b=[],c=a.tracks,d=1/(a.fps||1);for(let e=0,f=c.length;e!==f;++e)b.push(g5(c[e]).scale(d));let g=new this(a.name,a.duration,b,a.blendMode);return g.uuid=a.uuid,g}static toJSON(a){let b=[],c=a.tracks,d={name:a.name,duration:a.duration,tracks:b,uuid:a.uuid,blendMode:a.blendMode};for(let e=0,f=c.length;e!==f;++e)b.push(gY.toJSON(c[e]));return d}static CreateFromMorphTargetSequence(a,b,c,d){let e=b.length,f=[];for(let g=0;g<e;g++){let h=[],i=[];h.push((g+e-1)%e,g,(g+1)%e),i.push(0,1,0);let j=gT.getKeyframeOrder(h);h=gT.sortedArray(h,1,j),i=gT.sortedArray(i,1,j),d||0!==h[0]||(h.push(e),i.push(i[0])),f.push(new g_(".morphTargetInfluences["+b[g].name+"]",h,i).scale(1/c))}return new this(a,-1,f)}static findByName(a,b){let c=a;if(!Array.isArray(a)){let d=a;c=d.geometry&&d.geometry.animations||d.animations}for(let e=0;e<c.length;e++)if(c[e].name===b)return c[e];return null}static CreateClipsFromMorphTargetSequences(a,b,c){let d={},e=/^([\w-]*?)([\d]+)$/;for(let f=0,g=a.length;f<g;f++){let h=a[f],i=h.name.match(e);if(i&&i.length>1){let j=i[1],k=d[j];k||(d[j]=k=[]),k.push(h)}}let l=[];for(let m in d)l.push(this.CreateFromMorphTargetSequence(m,d[m],b,c));return l}static parseAnimation(a,b){if(!a)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;let c=function(a,b,c,d,e){if(0!==c.length){let f=[],g=[];gT.flattenJSON(c,f,g,d),0!==f.length&&e.push(new a(b,f,g))}},d=[],e=a.name||"default",f=a.fps||30,g=a.blendMode,h=a.length|| -1,i=a.hierarchy||[];for(let j=0;j<i.length;j++){let k=i[j].keys;if(k&&0!==k.length){if(k[0].morphTargets){let l={},m;for(m=0;m<k.length;m++)if(k[m].morphTargets)for(let n=0;n<k[m].morphTargets.length;n++)l[k[m].morphTargets[n]]=-1;for(let o in l){let p=[],q=[];for(let r=0;r!==k[m].morphTargets.length;++r){let s=k[m];p.push(s.time),q.push(s.morphTarget===o?1:0)}d.push(new g_(".morphTargetInfluence["+o+"]",p,q))}h=l.length*f}else{let t=".bones["+b[j].name+"]";c(g3,t+".position",k,"pos",d),c(g1,t+".quaternion",k,"rot",d),c(g3,t+".scale",k,"scl",d)}}}if(0===d.length)return null;let u=new this(e,h,d,g);return u}resetDuration(){let a=this.tracks,b=0;for(let c=0,d=a.length;c!==d;++c){let e=this.tracks[c];b=Math.max(b,e.times[e.times.length-1])}return this.duration=b,this}trim(){for(let a=0;a<this.tracks.length;a++)this.tracks[a].trim(0,this.duration);return this}validate(){let a=!0;for(let b=0;b<this.tracks.length;b++)a=a&&this.tracks[b].validate();return a}optimize(){for(let a=0;a<this.tracks.length;a++)this.tracks[a].optimize();return this}clone(){let a=[];for(let b=0;b<this.tracks.length;b++)a.push(this.tracks[b].clone());return new this.constructor(this.name,this.duration,a,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function g5(a){if(void 0===a.type)throw Error("THREE.KeyframeTrack: track type undefined, can not parse");let b=function(a){switch(a.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return g_;case"vector":case"vector2":case"vector3":case"vector4":return g3;case"color":return g$;case"quaternion":return g1;case"bool":case"boolean":return gZ;case"string":return g2}throw Error("THREE.KeyframeTrack: Unsupported typeName: "+a)}(a.type);if(void 0===a.times){let c=[],d=[];gT.flattenJSON(a.keys,c,d,"value"),a.times=c,a.values=d}return void 0!==b.parse?b.parse(a):new b(a.name,a.times,a.values,a.interpolation)}let g6={enabled:!1,files:{},add:function(a,b){!1!==this.enabled&&(this.files[a]=b)},get:function(a){if(!1!==this.enabled)return this.files[a]},remove:function(a){delete this.files[a]},clear:function(){this.files={}}},g7=new class a{constructor(a,b,c){let d=this,e=!1,f=0,g=0,h,i=[];this.onStart=void 0,this.onLoad=a,this.onProgress=b,this.onError=c,this.itemStart=function(a){g++,!1===e&& void 0!==d.onStart&&d.onStart(a,f,g),e=!0},this.itemEnd=function(a){f++,void 0!==d.onProgress&&d.onProgress(a,f,g),f===g&&(e=!1,void 0!==d.onLoad&&d.onLoad())},this.itemError=function(a){void 0!==d.onError&&d.onError(a)},this.resolveURL=function(a){return h?h(a):a},this.setURLModifier=function(a){return h=a,this},this.addHandler=function(a,b){return i.push(a,b),this},this.removeHandler=function(a){let b=i.indexOf(a);return -1!==b&&i.splice(b,2),this},this.getHandler=function(a){for(let b=0,c=i.length;b<c;b+=2){let d=i[b],e=i[b+1];if(d.global&&(d.lastIndex=0),d.test(a))return e}return null}}};class g8{constructor(a){this.manager=void 0!==a?a:g7,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(a,b){let c=this;return new Promise(function(d,e){c.load(a,d,b,e)})}parse(){}setCrossOrigin(a){return this.crossOrigin=a,this}setWithCredentials(a){return this.withCredentials=a,this}setPath(a){return this.path=a,this}setResourcePath(a){return this.resourcePath=a,this}setRequestHeader(a){return this.requestHeader=a,this}}let g9={};class ha extends g8{constructor(a){super(a)}load(a,b,c,d){void 0===a&&(a=""),void 0!==this.path&&(a=this.path+a),a=this.manager.resolveURL(a);let e=g6.get(a);if(void 0!==e)return this.manager.itemStart(a),setTimeout(()=>{b&&b(e),this.manager.itemEnd(a)},0),e;if(void 0!==g9[a]){g9[a].push({onLoad:b,onProgress:c,onError:d});return}g9[a]=[],g9[a].push({onLoad:b,onProgress:c,onError:d});let f=new Request(a,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),g=this.mimeType,h=this.responseType;fetch(f).then(b=>{if(200===b.status||0===b.status){if(0===b.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),"undefined"==typeof ReadableStream|| void 0===b.body|| void 0===b.body.getReader)return b;let c=g9[a],d=b.body.getReader(),e=b.headers.get("Content-Length"),f=e?parseInt(e):0,g=0!==f,h=0,i=new ReadableStream({start(a){b();function b(){d.read().then(({done:d,value:e})=>{if(d)a.close();else{h+=e.byteLength;let i=new ProgressEvent("progress",{lengthComputable:g,loaded:h,total:f});for(let j=0,k=c.length;j<k;j++){let l=c[j];l.onProgress&&l.onProgress(i)}a.enqueue(e),b()}})}}});return new Response(i)}throw Error(`fetch for "${b.url}" responded with ${b.status}: ${b.statusText}`)}).then(a=>{switch(h){case"arraybuffer":return a.arrayBuffer();case"blob":return a.blob();case"document":return a.text().then(a=>{let b=new DOMParser;return b.parseFromString(a,g)});case"json":return a.json();default:if(void 0===g)return a.text();{let b=/charset="?([^;"\s]*)"?/i,c=b.exec(g),d=c&&c[1]?c[1].toLowerCase():void 0,e=new TextDecoder(d);return a.arrayBuffer().then(a=>e.decode(a))}}}).then(b=>{g6.add(a,b);let c=g9[a];delete g9[a];for(let d=0,e=c.length;d<e;d++){let f=c[d];f.onLoad&&f.onLoad(b)}}).catch(b=>{let c=g9[a];if(void 0===c)throw this.manager.itemError(a),b;delete g9[a];for(let d=0,e=c.length;d<e;d++){let f=c[d];f.onError&&f.onError(b)}this.manager.itemError(a)}).finally(()=>{this.manager.itemEnd(a)}),this.manager.itemStart(a)}setResponseType(a){return this.responseType=a,this}setMimeType(a){return this.mimeType=a,this}}class hb extends g8{constructor(a){super(a)}load(a,b,c,d){void 0!==this.path&&(a=this.path+a),a=this.manager.resolveURL(a);let e=this,f=g6.get(a);if(void 0!==f)return e.manager.itemStart(a),setTimeout(function(){b&&b(f),e.manager.itemEnd(a)},0),f;let g=V("img");function h(){j(),g6.add(a,this),b&&b(this),e.manager.itemEnd(a)}function i(b){j(),d&&d(b),e.manager.itemError(a),e.manager.itemEnd(a)}function j(){g.removeEventListener("load",h,!1),g.removeEventListener("error",i,!1)}return g.addEventListener("load",h,!1),g.addEventListener("error",i,!1),"data:"!==a.slice(0,5)&& void 0!==this.crossOrigin&&(g.crossOrigin=this.crossOrigin),e.manager.itemStart(a),g.src=a,g}}class hc extends g8{constructor(a){super(a)}load(a,b,c,d){let e=new ca,f=new hb(this.manager);f.setCrossOrigin(this.crossOrigin),f.setPath(this.path);let g=0;function h(c){f.load(a[c],function(a){e.images[c]=a,6== ++g&&(e.needsUpdate=!0,b&&b(e))},void 0,d)}for(let i=0;i<a.length;++i)h(i);return e}}class hd extends g8{constructor(a){super(a)}load(a,b,c,d){let e=new ak,f=new hb(this.manager);return f.setCrossOrigin(this.crossOrigin),f.setPath(this.path),f.load(a,function(a){e.image=a,e.needsUpdate=!0,void 0!==b&&b(e)},c,d),e}}class he extends bi{constructor(a,b=1){super(),this.type="Light",this.color=new ae(a),this.intensity=b}dispose(){}copy(a){return super.copy(a),this.color.copy(a.color),this.intensity=a.intensity,this}toJSON(a){let b=super.toJSON(a);return b.object.color=this.color.getHex(),b.object.intensity=this.intensity,void 0!==this.groundColor&&(b.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(b.object.distance=this.distance),void 0!==this.angle&&(b.object.angle=this.angle),void 0!==this.decay&&(b.object.decay=this.decay),void 0!==this.penumbra&&(b.object.penumbra=this.penumbra),void 0!==this.shadow&&(b.object.shadow=this.shadow.toJSON()),b}}he.prototype.isLight=!0;(class a extends he{constructor(a,b,c){super(a,c),this.type="HemisphereLight",this.position.copy(bi.DefaultUp),this.updateMatrix(),this.groundColor=new ae(b)}copy(a){return he.prototype.copy.call(this,a),this.groundColor.copy(a.groundColor),this}}).prototype.isHemisphereLight=!0;let hf=new aV,hg=new aq,hh=new aq;class hi{constructor(a){this.camera=a,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new Q(512,512),this.map=null,this.mapPass=null,this.matrix=new aV,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new ci,this._frameExtents=new Q(1,1),this._viewportCount=1,this._viewports=[new al(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(a){let b=this.camera,c=this.matrix;hg.setFromMatrixPosition(a.matrixWorld),b.position.copy(hg),hh.setFromMatrixPosition(a.target.matrixWorld),b.lookAt(hh),b.updateMatrixWorld(),hf.multiplyMatrices(b.projectionMatrix,b.matrixWorldInverse),this._frustum.setFromProjectionMatrix(hf),c.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),c.multiply(b.projectionMatrix),c.multiply(b.matrixWorldInverse)}getViewport(a){return this._viewports[a]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(a){return this.camera=a.camera.clone(),this.bias=a.bias,this.radius=a.radius,this.mapSize.copy(a.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){let a={};return 0!==this.bias&&(a.bias=this.bias),0!==this.normalBias&&(a.normalBias=this.normalBias),1!==this.radius&&(a.radius=this.radius),(512!==this.mapSize.x||512!==this.mapSize.y)&&(a.mapSize=this.mapSize.toArray()),a.camera=this.camera.toJSON(!1).object,delete a.camera.matrix,a}}class hj extends hi{constructor(){super(new b8(50,1,.5,500)),this.focus=1}updateMatrices(a){let b=this.camera,c=2*F*a.angle*this.focus,d=this.mapSize.width/this.mapSize.height,e=a.distance||b.far;(c!==b.fov||d!==b.aspect||e!==b.far)&&(b.fov=c,b.aspect=d,b.far=e,b.updateProjectionMatrix()),super.updateMatrices(a)}copy(a){return super.copy(a),this.focus=a.focus,this}}hj.prototype.isSpotLightShadow=!0;class hk extends he{constructor(a,b,c=0,d=Math.PI/3,e=0,f=1){super(a,b),this.type="SpotLight",this.position.copy(bi.DefaultUp),this.updateMatrix(),this.target=new bi,this.distance=c,this.angle=d,this.penumbra=e,this.decay=f,this.shadow=new hj}get power(){return this.intensity*Math.PI}set power(a){this.intensity=a/Math.PI}dispose(){this.shadow.dispose()}copy(a){return super.copy(a),this.distance=a.distance,this.angle=a.angle,this.penumbra=a.penumbra,this.decay=a.decay,this.target=a.target.clone(),this.shadow=a.shadow.clone(),this}}hk.prototype.isSpotLight=!0;let hl=new aV,hm=new aq,hn=new aq;class ho extends hi{constructor(){super(new b8(90,1,.5,500)),this._frameExtents=new Q(4,2),this._viewportCount=6,this._viewports=[new al(2,1,1,1),new al(0,1,1,1),new al(3,1,1,1),new al(1,1,1,1),new al(3,0,1,1),new al(1,0,1,1)],this._cubeDirections=[new aq(1,0,0),new aq(-1,0,0),new aq(0,0,1),new aq(0,0,-1),new aq(0,1,0),new aq(0,-1,0)],this._cubeUps=[new aq(0,1,0),new aq(0,1,0),new aq(0,1,0),new aq(0,1,0),new aq(0,0,1),new aq(0,0,-1)]}updateMatrices(a,b=0){let c=this.camera,d=this.matrix,e=a.distance||c.far;e!==c.far&&(c.far=e,c.updateProjectionMatrix()),hm.setFromMatrixPosition(a.matrixWorld),c.position.copy(hm),hn.copy(c.position),hn.add(this._cubeDirections[b]),c.up.copy(this._cubeUps[b]),c.lookAt(hn),c.updateMatrixWorld(),d.makeTranslation(-hm.x,-hm.y,-hm.z),hl.multiplyMatrices(c.projectionMatrix,c.matrixWorldInverse),this._frustum.setFromProjectionMatrix(hl)}}ho.prototype.isPointLightShadow=!0;class hp extends he{constructor(a,b,c=0,d=1){super(a,b),this.type="PointLight",this.distance=c,this.decay=d,this.shadow=new ho}get power(){return 4*this.intensity*Math.PI}set power(a){this.intensity=a/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(a){return super.copy(a),this.distance=a.distance,this.decay=a.decay,this.shadow=a.shadow.clone(),this}}hp.prototype.isPointLight=!0;class hq extends hi{constructor(){super(new cv(-5,5,5,-5,.5,500))}}hq.prototype.isDirectionalLightShadow=!0;class hr extends he{constructor(a,b){super(a,b),this.type="DirectionalLight",this.position.copy(bi.DefaultUp),this.updateMatrix(),this.target=new bi,this.shadow=new hq}dispose(){this.shadow.dispose()}copy(a){return super.copy(a),this.target=a.target.clone(),this.shadow=a.shadow.clone(),this}}hr.prototype.isDirectionalLight=!0;class hs extends he{constructor(a,b){super(a,b),this.type="AmbientLight"}}hs.prototype.isAmbientLight=!0;(class a extends he{constructor(a,b,c=10,d=10){super(a,b),this.type="RectAreaLight",this.width=c,this.height=d}get power(){return this.intensity*this.width*this.height*Math.PI}set power(a){this.intensity=a/(this.width*this.height*Math.PI)}copy(a){return super.copy(a),this.width=a.width,this.height=a.height,this}toJSON(a){let b=super.toJSON(a);return b.object.width=this.width,b.object.height=this.height,b}}).prototype.isRectAreaLight=!0;class ht{constructor(){this.coefficients=[];for(let a=0;a<9;a++)this.coefficients.push(new aq)}set(a){for(let b=0;b<9;b++)this.coefficients[b].copy(a[b]);return this}zero(){for(let a=0;a<9;a++)this.coefficients[a].set(0,0,0);return this}getAt(a,b){let c=a.x,d=a.y,e=a.z,f=this.coefficients;return b.copy(f[0]).multiplyScalar(.282095),b.addScaledVector(f[1],.488603*d),b.addScaledVector(f[2],.488603*e),b.addScaledVector(f[3],.488603*c),b.addScaledVector(f[4],1.092548*(c*d)),b.addScaledVector(f[5],1.092548*(d*e)),b.addScaledVector(f[6],.315392*(3*e*e-1)),b.addScaledVector(f[7],1.092548*(c*e)),b.addScaledVector(f[8],.546274*(c*c-d*d)),b}getIrradianceAt(a,b){let c=a.x,d=a.y,e=a.z,f=this.coefficients;return b.copy(f[0]).multiplyScalar(.886227),b.addScaledVector(f[1],1.023328*d),b.addScaledVector(f[2],1.023328*e),b.addScaledVector(f[3],1.023328*c),b.addScaledVector(f[4],.858086*c*d),b.addScaledVector(f[5],.858086*d*e),b.addScaledVector(f[6],.743125*e*e-.247708),b.addScaledVector(f[7],.858086*c*e),b.addScaledVector(f[8],.429043*(c*c-d*d)),b}add(a){for(let b=0;b<9;b++)this.coefficients[b].add(a.coefficients[b]);return this}addScaledSH(a,b){for(let c=0;c<9;c++)this.coefficients[c].addScaledVector(a.coefficients[c],b);return this}scale(a){for(let b=0;b<9;b++)this.coefficients[b].multiplyScalar(a);return this}lerp(a,b){for(let c=0;c<9;c++)this.coefficients[c].lerp(a.coefficients[c],b);return this}equals(a){for(let b=0;b<9;b++)if(!this.coefficients[b].equals(a.coefficients[b]))return!1;return!0}copy(a){return this.set(a.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(a,b=0){let c=this.coefficients;for(let d=0;d<9;d++)c[d].fromArray(a,b+3*d);return this}toArray(a=[],b=0){let c=this.coefficients;for(let d=0;d<9;d++)c[d].toArray(a,b+3*d);return a}static getBasisAt(a,b){let c=a.x,d=a.y,e=a.z;b[0]=.282095,b[1]=.488603*d,b[2]=.488603*e,b[3]=.488603*c,b[4]=1.092548*c*d,b[5]=1.092548*d*e,b[6]=.315392*(3*e*e-1),b[7]=1.092548*c*e,b[8]=.546274*(c*c-d*d)}}ht.prototype.isSphericalHarmonics3=!0;class hu extends he{constructor(a=new ht,b=1){super(void 0,b),this.sh=a}copy(a){return super.copy(a),this.sh.copy(a.sh),this}fromJSON(a){return this.intensity=a.intensity,this.sh.fromArray(a.sh),this}toJSON(a){let b=super.toJSON(a);return b.object.sh=this.sh.toArray(),b}}hu.prototype.isLightProbe=!0;class hv{static decodeText(a){if("undefined"!=typeof TextDecoder)return new TextDecoder().decode(a);let b="";for(let c=0,d=a.length;c<d;c++)b+=String.fromCharCode(a[c]);try{return decodeURIComponent(escape(b))}catch(e){return b}}static extractUrlBase(a){let b=a.lastIndexOf("/");return -1===b?"./":a.slice(0,b+1)}static resolveURL(a,b){return"string"!=typeof a||""===a?"":(/^https?:\/\//i.test(b)&&/^\//.test(a)&&(b=b.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(a)||/^data:.*,.*$/i.test(a)||/^blob:.*$/i.test(a))?a:b+a}}class hw extends bK{constructor(){super(),this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(a){return super.copy(a),this.instanceCount=a.instanceCount,this}clone(){return new this.constructor().copy(this)}toJSON(){let a=super.toJSON(this);return a.instanceCount=this.instanceCount,a.isInstancedBufferGeometry=!0,a}}hw.prototype.isInstancedBufferGeometry=!0;class hx extends g8{constructor(a){super(a),"undefined"==typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),"undefined"==typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(a){return this.options=a,this}load(a,b,c,d){void 0===a&&(a=""),void 0!==this.path&&(a=this.path+a),a=this.manager.resolveURL(a);let e=this,f=g6.get(a);if(void 0!==f)return e.manager.itemStart(a),setTimeout(function(){b&&b(f),e.manager.itemEnd(a)},0),f;let g={};g.credentials="anonymous"===this.crossOrigin?"same-origin":"include",g.headers=this.requestHeader,fetch(a,g).then(function(a){return a.blob()}).then(function(a){return createImageBitmap(a,Object.assign(e.options,{colorSpaceConversion:"none"}))}).then(function(c){g6.add(a,c),b&&b(c),e.manager.itemEnd(a)}).catch(function(b){d&&d(b),e.manager.itemError(a),e.manager.itemEnd(a)}),e.manager.itemStart(a)}}hx.prototype.isImageBitmapLoader=!0;let hy,hz={getContext:function(){return void 0===hy&&(hy=new(window.AudioContext||window.webkitAudioContext)),hy},setContext:function(a){hy=a}};class hA extends g8{constructor(a){super(a)}load(a,b,c,d){let e=this,f=new ha(this.manager);f.setResponseType("arraybuffer"),f.setPath(this.path),f.setRequestHeader(this.requestHeader),f.setWithCredentials(this.withCredentials),f.load(a,function(c){try{let f=c.slice(0),g=hz.getContext();g.decodeAudioData(f,function(a){b(a)})}catch(h){d?d(h):console.error(h),e.manager.itemError(a)}},c,d)}}(class extends hu{constructor(a,b,c=1){super(void 0,c);let d=new ae().set(a),e=new ae().set(b),f=new aq(d.r,d.g,d.b),g=new aq(e.r,e.g,e.b),h=Math.sqrt(Math.PI);this.sh.coefficients[0].copy(f).add(g).multiplyScalar(h),this.sh.coefficients[1].copy(f).sub(g).multiplyScalar(h*Math.sqrt(.75))}}).prototype.isHemisphereLightProbe=!0,(class extends hu{constructor(a,b=1){super(void 0,b);let c=new ae().set(a);this.sh.coefficients[0].set(c.r,c.g,c.b).multiplyScalar(2*Math.sqrt(Math.PI))}}).prototype.isAmbientLightProbe=!0,new aV,new aV,new aV;new aq,new ap,new aq,new aq,new aq,new ap,new aq,new aq;class hB{constructor(a,b,c){this.binding=a,this.valueSize=c;let d,e,f;switch(b){case"quaternion":d=this._slerp,e=this._slerpAdditive,f=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(6*c),this._workIndex=5;break;case"string":case"bool":d=this._select,e=this._select,f=this._setAdditiveIdentityOther,this.buffer=Array(5*c);break;default:d=this._lerp,e=this._lerpAdditive,f=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*c)}this._mixBufferRegion=d,this._mixBufferRegionAdditive=e,this._setIdentity=f,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(a,b){let c=this.buffer,d=this.valueSize,e=a*d+d,f=this.cumulativeWeight;if(0===f){for(let g=0;g!==d;++g)c[e+g]=c[g];f=b}else{f+=b;let h=b/f;this._mixBufferRegion(c,e,0,h,d)}this.cumulativeWeight=f}accumulateAdditive(a){let b=this.buffer,c=this.valueSize,d=c*this._addIndex;0===this.cumulativeWeightAdditive&&this._setIdentity(),this._mixBufferRegionAdditive(b,d,0,a,c),this.cumulativeWeightAdditive+=a}apply(a){let b=this.valueSize,c=this.buffer,d=a*b+b,e=this.cumulativeWeight,f=this.cumulativeWeightAdditive,g=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,e<1){let h=b*this._origIndex;this._mixBufferRegion(c,d,h,1-e,b)}f>0&&this._mixBufferRegionAdditive(c,d,this._addIndex*b,1,b);for(let i=b,j=b+b;i!==j;++i)if(c[i]!==c[i+b]){g.setValue(c,d);break}}saveOriginalState(){let a=this.binding,b=this.buffer,c=this.valueSize,d=c*this._origIndex;a.getValue(b,d);for(let e=c,f=d;e!==f;++e)b[e]=b[d+e%c];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){let a=3*this.valueSize;this.binding.setValue(this.buffer,a)}_setAdditiveIdentityNumeric(){let a=this._addIndex*this.valueSize,b=a+this.valueSize;for(let c=a;c<b;c++)this.buffer[c]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){let a=this._origIndex*this.valueSize,b=this._addIndex*this.valueSize;for(let c=0;c<this.valueSize;c++)this.buffer[b+c]=this.buffer[a+c]}_select(a,b,c,d,e){if(d>=.5)for(let f=0;f!==e;++f)a[b+f]=a[c+f]}_slerp(a,b,c,d){ap.slerpFlat(a,b,a,b,a,c,d)}_slerpAdditive(a,b,c,d,e){let f=this._workIndex*e;ap.multiplyQuaternionsFlat(a,f,a,b,a,c),ap.slerpFlat(a,b,a,b,a,f,d)}_lerp(a,b,c,d,e){let f=1-d;for(let g=0;g!==e;++g){let h=b+g;a[h]=a[h]*f+a[c+g]*d}}_lerpAdditive(a,b,c,d,e){for(let f=0;f!==e;++f){let g=b+f;a[g]=a[g]+a[c+f]*d}}}let hC="\\[\\]\\.:\\/",hD=RegExp("["+hC+"]","g"),hE="[^"+hC+"]",hF="[^"+hC.replace("\\.","")+"]",hG=/((?:WC+[\/:])*)/.source.replace("WC",hE),hH=/(WCOD+)?/.source.replace("WCOD",hF),hI=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",hE),hJ=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",hE),hK=RegExp("^"+hG+hH+hI+hJ+"$"),hL=["material","materials","bones"];class hM{constructor(a,b,c){this.path=b,this.parsedPath=c||hM.parseTrackName(b),this.node=hM.findNode(a,this.parsedPath.nodeName)||a,this.rootNode=a,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(a,b,c){return a&&a.isAnimationObjectGroup?new hM.Composite(a,b,c):new hM(a,b,c)}static sanitizeNodeName(a){return a.replace(/\s/g,"_").replace(hD,"")}static parseTrackName(a){let b=hK.exec(a);if(null===b)throw Error("PropertyBinding: Cannot parse trackName: "+a);let c={nodeName:b[2],objectName:b[3],objectIndex:b[4],propertyName:b[5],propertyIndex:b[6]},d=c.nodeName&&c.nodeName.lastIndexOf(".");if(void 0!==d&& -1!==d){let e=c.nodeName.substring(d+1);-1!==hL.indexOf(e)&&(c.nodeName=c.nodeName.substring(0,d),c.objectName=e)}if(null===c.propertyName||0===c.propertyName.length)throw Error("PropertyBinding: can not parse propertyName from trackName: "+a);return c}static findNode(a,b){if(void 0===b||""===b||"."===b|| -1===b||b===a.name||b===a.uuid)return a;if(a.skeleton){let c=a.skeleton.getBoneByName(b);if(void 0!==c)return c}if(a.children){let d=function(a){for(let c=0;c<a.length;c++){let e=a[c];if(e.name===b||e.uuid===b)return e;let f=d(e.children);if(f)return f}return null},e=d(a.children);if(e)return e}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(a,b){a[b]=this.targetObject[this.propertyName]}_getValue_array(a,b){let c=this.resolvedProperty;for(let d=0,e=c.length;d!==e;++d)a[b++]=c[d]}_getValue_arrayElement(a,b){a[b]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(a,b){this.resolvedProperty.toArray(a,b)}_setValue_direct(a,b){this.targetObject[this.propertyName]=a[b]}_setValue_direct_setNeedsUpdate(a,b){this.targetObject[this.propertyName]=a[b],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(a,b){this.targetObject[this.propertyName]=a[b],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(a,b){let c=this.resolvedProperty;for(let d=0,e=c.length;d!==e;++d)c[d]=a[b++]}_setValue_array_setNeedsUpdate(a,b){let c=this.resolvedProperty;for(let d=0,e=c.length;d!==e;++d)c[d]=a[b++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(a,b){let c=this.resolvedProperty;for(let d=0,e=c.length;d!==e;++d)c[d]=a[b++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(a,b){this.resolvedProperty[this.propertyIndex]=a[b]}_setValue_arrayElement_setNeedsUpdate(a,b){this.resolvedProperty[this.propertyIndex]=a[b],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(a,b){this.resolvedProperty[this.propertyIndex]=a[b],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(a,b){this.resolvedProperty.fromArray(a,b)}_setValue_fromArray_setNeedsUpdate(a,b){this.resolvedProperty.fromArray(a,b),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(a,b){this.resolvedProperty.fromArray(a,b),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(a,b){this.bind(),this.getValue(a,b)}_setValue_unbound(a,b){this.bind(),this.setValue(a,b)}bind(){let a=this.node,b=this.parsedPath,c=b.objectName,d=b.propertyName,e=b.propertyIndex;if(a||(a=hM.findNode(this.rootNode,b.nodeName)||this.rootNode,this.node=a),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!a){console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");return}if(c){let f=b.objectIndex;switch(c){case"materials":if(!a.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!a.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}a=a.material.materials;break;case"bones":if(!a.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}a=a.skeleton.bones;for(let g=0;g<a.length;g++)if(a[g].name===f){f=g;break}break;default:if(void 0===a[c]){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}a=a[c]}if(void 0!==f){if(void 0===a[f]){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,a);return}a=a[f]}}let h=a[d];if(void 0===h){let i=b.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+i+"."+d+" but it wasn't found.",a);return}let j=this.Versioning.None;this.targetObject=a,void 0!==a.needsUpdate?j=this.Versioning.NeedsUpdate:void 0!==a.matrixWorldNeedsUpdate&&(j=this.Versioning.MatrixWorldNeedsUpdate);let k=this.BindingType.Direct;if(void 0!==e){if("morphTargetInfluences"===d){if(!a.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(a.geometry.isBufferGeometry){if(!a.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}void 0!==a.morphTargetDictionary[e]&&(e=a.morphTargetDictionary[e])}else{console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);return}}k=this.BindingType.ArrayElement,this.resolvedProperty=h,this.propertyIndex=e}else void 0!==h.fromArray&& void 0!==h.toArray?(k=this.BindingType.HasFromToArray,this.resolvedProperty=h):Array.isArray(h)?(k=this.BindingType.EntireArray,this.resolvedProperty=h):this.propertyName=d;this.getValue=this.GetterByBindingType[k],this.setValue=this.SetterByBindingTypeAndVersioning[k][j]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}hM.Composite=class{constructor(a,b,c){let d=c||hM.parseTrackName(b);this._targetGroup=a,this._bindings=a.subscribe_(b,d)}getValue(a,b){this.bind();let c=this._targetGroup.nCachedObjects_,d=this._bindings[c];void 0!==d&&d.getValue(a,b)}setValue(a,b){let c=this._bindings;for(let d=this._targetGroup.nCachedObjects_,e=c.length;d!==e;++d)c[d].setValue(a,b)}bind(){let a=this._bindings;for(let b=this._targetGroup.nCachedObjects_,c=a.length;b!==c;++b)a[b].bind()}unbind(){let a=this._bindings;for(let b=this._targetGroup.nCachedObjects_,c=a.length;b!==c;++b)a[b].unbind()}},hM.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},hM.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},hM.prototype.GetterByBindingType=[hM.prototype._getValue_direct,hM.prototype._getValue_array,hM.prototype._getValue_arrayElement,hM.prototype._getValue_toArray,],hM.prototype.SetterByBindingTypeAndVersioning=[[hM.prototype._setValue_direct,hM.prototype._setValue_direct_setNeedsUpdate,hM.prototype._setValue_direct_setMatrixWorldNeedsUpdate,],[hM.prototype._setValue_array,hM.prototype._setValue_array_setNeedsUpdate,hM.prototype._setValue_array_setMatrixWorldNeedsUpdate,],[hM.prototype._setValue_arrayElement,hM.prototype._setValue_arrayElement_setNeedsUpdate,hM.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate,],[hM.prototype._setValue_fromArray,hM.prototype._setValue_fromArray_setNeedsUpdate,hM.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate,]],(class{constructor(){this.uuid=G(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;let a={};this._indicesByUUID=a;for(let b=0,c=arguments.length;b!==c;++b)a[arguments[b].uuid]=b;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={},this.stats={objects:{get total(){return this._objects.length},get inUse(){return this.total-this.nCachedObjects_}},get bindingsPerObject(){return this._bindings.length}}}add(){let a=this._objects,b=this._indicesByUUID,c=this._paths,d=this._parsedPaths,e=this._bindings,f=e.length,g,h=a.length,i=this.nCachedObjects_;for(let j=0,k=arguments.length;j!==k;++j){let l=arguments[j],m=l.uuid,n=b[m];if(void 0===n){n=h++,b[m]=n,a.push(l);for(let o=0,p=f;o!==p;++o)e[o].push(new hM(l,c[o],d[o]))}else if(n<i){g=a[n];let q=--i,r=a[q];b[r.uuid]=n,a[n]=r,b[m]=q,a[q]=l;for(let s=0,t=f;s!==t;++s){let u=e[s],v=u[q],w=u[n];u[n]=v,void 0===w&&(w=new hM(l,c[s],d[s])),u[q]=w}}else a[n]!==g&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=i}remove(){let a=this._objects,b=this._indicesByUUID,c=this._bindings,d=c.length,e=this.nCachedObjects_;for(let f=0,g=arguments.length;f!==g;++f){let h=arguments[f],i=h.uuid,j=b[i];if(void 0!==j&&j>=e){let k=e++,l=a[k];b[l.uuid]=j,a[j]=l,b[i]=k,a[k]=h;for(let m=0,n=d;m!==n;++m){let o=c[m],p=o[k],q=o[j];o[j]=p,o[k]=q}}}this.nCachedObjects_=e}uncache(){let a=this._objects,b=this._indicesByUUID,c=this._bindings,d=c.length,e=this.nCachedObjects_,f=a.length;for(let g=0,h=arguments.length;g!==h;++g){let i=arguments[g],j=i.uuid,k=b[j];if(void 0!==k){if(delete b[j],k<e){let l=--e,m=a[l],n=--f,o=a[n];b[m.uuid]=k,a[k]=m,b[o.uuid]=l,a[l]=o,a.pop();for(let p=0,q=d;p!==q;++p){let r=c[p],s=r[l],t=r[n];r[k]=s,r[l]=t,r.pop()}}else{let u=--f,v=a[u];u>0&&(b[v.uuid]=k),a[k]=v,a.pop();for(let w=0,x=d;w!==x;++w){let y=c[w];y[k]=y[u],y.pop()}}}}this.nCachedObjects_=e}subscribe_(a,b){let c=this._bindingsIndicesByPath,d=c[a],e=this._bindings;if(void 0!==d)return e[d];let f=this._paths,g=this._parsedPaths,h=this._objects,i=h.length,j=this.nCachedObjects_,k=Array(i);d=e.length,c[a]=d,f.push(a),g.push(b),e.push(k);for(let l=j,m=h.length;l!==m;++l){let n=h[l];k[l]=new hM(n,a,b)}return k}unsubscribe_(a){let b=this._bindingsIndicesByPath,c=b[a];if(void 0!==c){let d=this._paths,e=this._parsedPaths,f=this._bindings,g=f.length-1,h=f[g],i=a[g];b[i]=c,f[c]=h,f.pop(),e[c]=e[g],e.pop(),d[c]=d[g],d.pop()}}}).prototype.isAnimationObjectGroup=!0;class hN{constructor(a,b,c=null,d=b.blendMode){this._mixer=a,this._clip=b,this._localRoot=c,this.blendMode=d;let e=b.tracks,f=e.length,g=Array(f),h={endingStart:2400,endingEnd:2400};for(let i=0;i!==f;++i){let j=e[i].createInterpolant(null);g[i]=j,j.settings=h}this._interpolantSettings=h,this._interpolants=g,this._propertyBindings=Array(f),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=2201,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(a){return this._startTime=a,this}setLoop(a,b){return this.loop=a,this.repetitions=b,this}setEffectiveWeight(a){return this.weight=a,this._effectiveWeight=this.enabled?a:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(a){return this._scheduleFading(a,0,1)}fadeOut(a){return this._scheduleFading(a,1,0)}crossFadeFrom(a,b,c){if(a.fadeOut(b),this.fadeIn(b),c){let d=this._clip.duration,e=a._clip.duration,f=e/d,g=d/e;a.warp(1,f,b),this.warp(g,1,b)}return this}crossFadeTo(a,b,c){return a.crossFadeFrom(this,b,c)}stopFading(){let a=this._weightInterpolant;return null!==a&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(a)),this}setEffectiveTimeScale(a){return this.timeScale=a,this._effectiveTimeScale=this.paused?0:a,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(a){return this.timeScale=this._clip.duration/a,this.stopWarping()}syncWith(a){return this.time=a.time,this.timeScale=a.timeScale,this.stopWarping()}halt(a){return this.warp(this._effectiveTimeScale,0,a)}warp(a,b,c){let d=this._mixer,e=d.time,f=this.timeScale,g=this._timeScaleInterpolant;null===g&&(g=d._lendControlInterpolant(),this._timeScaleInterpolant=g);let h=g.parameterPositions,i=g.sampleValues;return h[0]=e,h[1]=e+c,i[0]=a/f,i[1]=b/f,this}stopWarping(){let a=this._timeScaleInterpolant;return null!==a&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(a)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(a,b,c,d){if(!this.enabled){this._updateWeight(a);return}let e=this._startTime;if(null!==e){let f=(a-e)*c;if(f<0||0===c)return;this._startTime=null,b=c*f}b*=this._updateTimeScale(a);let g=this._updateTime(b),h=this._updateWeight(a);if(h>0){let i=this._interpolants,j=this._propertyBindings;if(2501===this.blendMode)for(let k=0,l=i.length;k!==l;++k)i[k].evaluate(g),j[k].accumulateAdditive(h);else for(let m=0,n=i.length;m!==n;++m)i[m].evaluate(g),j[m].accumulate(d,h)}}_updateWeight(a){let b=0;if(this.enabled){b=this.weight;let c=this._weightInterpolant;if(null!==c){let d=c.evaluate(a)[0];b*=d,a>c.parameterPositions[1]&&(this.stopFading(),0===d&&(this.enabled=!1))}}return this._effectiveWeight=b,b}_updateTimeScale(a){let b=0;if(!this.paused){b=this.timeScale;let c=this._timeScaleInterpolant;if(null!==c){let d=c.evaluate(a)[0];b*=d,a>c.parameterPositions[1]&&(this.stopWarping(),0===b?this.paused=!0:this.timeScale=b)}}return this._effectiveTimeScale=b,b}_updateTime(a){let b=this._clip.duration,c=this.loop,d=this.time+a,e=this._loopCount,f=2202===c;if(0===a)return -1===e?d:f&&(1&e)==1?b-d:d;if(2200===c){-1===e&&(this._loopCount=0,this._setEndings(!0,!0,!1));handle_stop:{if(d>=b)d=b;else if(d<0)d=0;else{this.time=d;break handle_stop}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=d,this._mixer.dispatchEvent({type:"finished",action:this,direction:a<0?-1:1})}}else{if(-1===e&&(a>=0?(e=0,this._setEndings(!0,0===this.repetitions,f)):this._setEndings(0===this.repetitions,!0,f)),d>=b||d<0){let g=Math.floor(d/b);d-=b*g,e+=Math.abs(g);let h=this.repetitions-e;if(h<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,d=a>0?b:0,this.time=d,this._mixer.dispatchEvent({type:"finished",action:this,direction:a>0?1:-1});else{if(1===h){let i=a<0;this._setEndings(i,!i,f)}else this._setEndings(!1,!1,f);this._loopCount=e,this.time=d,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:g})}}else this.time=d;if(f&&(1&e)==1)return b-d}return d}_setEndings(a,b,c){let d=this._interpolantSettings;c?(d.endingStart=2401,d.endingEnd=2401):(a?d.endingStart=this.zeroSlopeAtStart?2401:2400:d.endingStart=2402,b?d.endingEnd=this.zeroSlopeAtEnd?2401:2400:d.endingEnd=2402)}_scheduleFading(a,b,c){let d=this._mixer,e=d.time,f=this._weightInterpolant;null===f&&(f=d._lendControlInterpolant(),this._weightInterpolant=f);let g=f.parameterPositions,h=f.sampleValues;return g[0]=e,h[0]=b,g[1]=e+a,h[1]=c,this}}(class extends A{constructor(a){super(),this._root=a,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(a,b){let c=a._localRoot||this._root,d=a._clip.tracks,e=d.length,f=a._propertyBindings,g=a._interpolants,h=c.uuid,i=this._bindingsByRootAndName,j=i[h];void 0===j&&(j={},i[h]=j);for(let k=0;k!==e;++k){let l=d[k],m=l.name,n=j[m];if(void 0!==n)++n.referenceCount,f[k]=n;else{if(void 0!==(n=f[k])){null===n._cacheIndex&&(++n.referenceCount,this._addInactiveBinding(n,h,m));continue}let o=b&&b._propertyBindings[k].binding.parsedPath;n=new hB(hM.create(c,m,o),l.ValueTypeName,l.getValueSize()),++n.referenceCount,this._addInactiveBinding(n,h,m),f[k]=n}g[k].resultBuffer=n.buffer}}_activateAction(a){if(!this._isActiveAction(a)){if(null===a._cacheIndex){let b=(a._localRoot||this._root).uuid,c=a._clip.uuid,d=this._actionsByClip[c];this._bindAction(a,d&&d.knownActions[0]),this._addInactiveAction(a,c,b)}let e=a._propertyBindings;for(let f=0,g=e.length;f!==g;++f){let h=e[f];0==h.useCount++&&(this._lendBinding(h),h.saveOriginalState())}this._lendAction(a)}}_deactivateAction(a){if(this._isActiveAction(a)){let b=a._propertyBindings;for(let c=0,d=b.length;c!==d;++c){let e=b[c];0== --e.useCount&&(e.restoreOriginalState(),this._takeBackBinding(e))}this._takeBackAction(a)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0,this.stats={actions:{get total(){return this._actions.length},get inUse(){return this._nActiveActions}},bindings:{get total(){return this._bindings.length},get inUse(){return this._nActiveBindings}},controlInterpolants:{get total(){return this._controlInterpolants.length},get inUse(){return this._nActiveControlInterpolants}}}}_isActiveAction(a){let b=a._cacheIndex;return null!==b&&b<this._nActiveActions}_addInactiveAction(a,b,c){let d=this._actions,e=this._actionsByClip,f=e[b];if(void 0===f)f={knownActions:[a],actionByRoot:{}},a._byClipCacheIndex=0,e[b]=f;else{let g=f.knownActions;a._byClipCacheIndex=g.length,g.push(a)}a._cacheIndex=d.length,d.push(a),f.actionByRoot[c]=a}_removeInactiveAction(a){let b=this._actions,c=b[b.length-1],d=a._cacheIndex;c._cacheIndex=d,b[d]=c,b.pop(),a._cacheIndex=null;let e=a._clip.uuid,f=this._actionsByClip,g=f[e],h=g.knownActions,i=h[h.length-1],j=a._byClipCacheIndex;i._byClipCacheIndex=j,h[j]=i,h.pop(),a._byClipCacheIndex=null;let k=g.actionByRoot,l=(a._localRoot||this._root).uuid;delete k[l],0===h.length&&delete f[e],this._removeInactiveBindingsForAction(a)}_removeInactiveBindingsForAction(a){let b=a._propertyBindings;for(let c=0,d=b.length;c!==d;++c){let e=b[c];0== --e.referenceCount&&this._removeInactiveBinding(e)}}_lendAction(a){let b=this._actions,c=a._cacheIndex,d=this._nActiveActions++,e=b[d];a._cacheIndex=d,b[d]=a,e._cacheIndex=c,b[c]=e}_takeBackAction(a){let b=this._actions,c=a._cacheIndex,d=--this._nActiveActions,e=b[d];a._cacheIndex=d,b[d]=a,e._cacheIndex=c,b[c]=e}_addInactiveBinding(a,b,c){let d=this._bindingsByRootAndName,e=this._bindings,f=d[b];void 0===f&&(f={},d[b]=f),f[c]=a,a._cacheIndex=e.length,e.push(a)}_removeInactiveBinding(a){let b=this._bindings,c=a.binding,d=c.rootNode.uuid,e=c.path,f=this._bindingsByRootAndName,g=f[d],h=b[b.length-1],i=a._cacheIndex;h._cacheIndex=i,b[i]=h,b.pop(),delete g[e],0===Object.keys(g).length&&delete f[d]}_lendBinding(a){let b=this._bindings,c=a._cacheIndex,d=this._nActiveBindings++,e=b[d];a._cacheIndex=d,b[d]=a,e._cacheIndex=c,b[c]=e}_takeBackBinding(a){let b=this._bindings,c=a._cacheIndex,d=--this._nActiveBindings,e=b[d];a._cacheIndex=d,b[d]=a,e._cacheIndex=c,b[c]=e}_lendControlInterpolant(){let a=this._controlInterpolants,b=this._nActiveControlInterpolants++,c=a[b];return void 0===c&&((c=new gW(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer)).__cacheIndex=b,a[b]=c),c}_takeBackControlInterpolant(a){let b=this._controlInterpolants,c=a.__cacheIndex,d=--this._nActiveControlInterpolants,e=b[d];a.__cacheIndex=d,b[d]=a,e.__cacheIndex=c,b[c]=e}clipAction(a,b,c){let d=b||this._root,e=d.uuid,f="string"==typeof a?g4.findByName(d,a):a,g=null!==f?f.uuid:a,h=this._actionsByClip[g],i=null;if(void 0===c&&(c=null!==f?f.blendMode:2500),void 0!==h){let j=h.actionByRoot[e];if(void 0!==j&&j.blendMode===c)return j;i=h.knownActions[0],null===f&&(f=i._clip)}if(null===f)return null;let k=new hN(this,f,b,c);return this._bindAction(k,i),this._addInactiveAction(k,g,e),k}existingAction(a,b){let c=b||this._root,d=c.uuid,e="string"==typeof a?g4.findByName(c,a):a,f=e?e.uuid:a,g=this._actionsByClip[f];return void 0!==g&&g.actionByRoot[d]||null}stopAllAction(){let a=this._actions,b=this._nActiveActions;for(let c=b-1;c>=0;--c)a[c].stop();return this}update(a){a*=this.timeScale;let b=this._actions,c=this._nActiveActions,d=this.time+=a,e=Math.sign(a),f=this._accuIndex^=1;for(let g=0;g!==c;++g){let h=b[g];h._update(d,a,e,f)}let i=this._bindings,j=this._nActiveBindings;for(let k=0;k!==j;++k)i[k].apply(f);return this}setTime(a){this.time=0;for(let b=0;b<this._actions.length;b++)this._actions[b].time=0;return this.update(a)}getRoot(){return this._root}uncacheClip(a){let b=this._actions,c=a.uuid,d=this._actionsByClip,e=d[c];if(void 0!==e){let f=e.knownActions;for(let g=0,h=f.length;g!==h;++g){let i=f[g];this._deactivateAction(i);let j=i._cacheIndex,k=b[b.length-1];i._cacheIndex=null,i._byClipCacheIndex=null,k._cacheIndex=j,b[j]=k,b.pop(),this._removeInactiveBindingsForAction(i)}delete d[c]}}uncacheRoot(a){let b=a.uuid,c=this._actionsByClip;for(let d in c){let e=c[d].actionByRoot,f=e[b];void 0!==f&&(this._deactivateAction(f),this._removeInactiveAction(f))}let g=this._bindingsByRootAndName,h=g[b];if(void 0!==h)for(let i in h){let j=h[i];j.restoreOriginalState(),this._removeInactiveBinding(j)}}uncacheAction(a,b){let c=this.existingAction(a,b);null!==c&&(this._deactivateAction(c),this._removeInactiveAction(c))}}).prototype._controlInterpolantsResultBuffer=new Float32Array(1);class hO{constructor(a){"string"==typeof a&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),a=arguments[1]),this.value=a}clone(){return new hO(void 0===this.value.clone?this.value:this.value.clone())}}(class extends eA{constructor(a,b,c=1){super(a,b),this.meshPerAttribute=c}copy(a){return super.copy(a),this.meshPerAttribute=a.meshPerAttribute,this}clone(a){let b=super.clone(a);return b.meshPerAttribute=this.meshPerAttribute,b}toJSON(a){let b=super.toJSON(a);return b.isInstancedInterleavedBuffer=!0,b.meshPerAttribute=this.meshPerAttribute,b}}).prototype.isInstancedInterleavedBuffer=!0,(class{constructor(a,b,c,d,e){this.buffer=a,this.type=b,this.itemSize=c,this.elementSize=d,this.count=e,this.version=0}set needsUpdate(a){!0===a&&this.version++}setBuffer(a){return this.buffer=a,this}setType(a,b){return this.type=a,this.elementSize=b,this}setItemSize(a){return this.itemSize=a,this}setCount(a){return this.count=a,this}}).prototype.isGLBufferAttribute=!0;function hP(a,b,c,d){if(a.layers.test(b.layers)&&a.raycast(b,c),!0===d){let e=a.children;for(let f=0,g=e.length;f<g;f++)hP(e[f],b,c,!0)}}class hQ{constructor(a=1,b=0,c=0){return this.radius=a,this.phi=b,this.theta=c,this}set(a,b,c){return this.radius=a,this.phi=b,this.theta=c,this}copy(a){return this.radius=a.radius,this.phi=a.phi,this.theta=a.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(a){return this.setFromCartesianCoords(a.x,a.y,a.z)}setFromCartesianCoords(a,b,c){return this.radius=Math.sqrt(a*a+b*b+c*c),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(a,c),this.phi=Math.acos(H(b/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}let hR=new Q;class hS{constructor(a=new Q(Infinity,Infinity),b=new Q(-1/0,-1/0)){this.min=a,this.max=b}set(a,b){return this.min.copy(a),this.max.copy(b),this}setFromPoints(a){this.makeEmpty();for(let b=0,c=a.length;b<c;b++)this.expandByPoint(a[b]);return this}setFromCenterAndSize(a,b){let c=hR.copy(b).multiplyScalar(.5);return this.min.copy(a).sub(c),this.max.copy(a).add(c),this}clone(){return new this.constructor().copy(this)}copy(a){return this.min.copy(a.min),this.max.copy(a.max),this}makeEmpty(){return this.min.x=this.min.y=Infinity,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(a){return this.isEmpty()?a.set(0,0):a.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(a){return this.isEmpty()?a.set(0,0):a.subVectors(this.max,this.min)}expandByPoint(a){return this.min.min(a),this.max.max(a),this}expandByVector(a){return this.min.sub(a),this.max.add(a),this}expandByScalar(a){return this.min.addScalar(-a),this.max.addScalar(a),this}containsPoint(a){return!(a.x<this.min.x)&&!(a.x>this.max.x)&&!(a.y<this.min.y)&&!(a.y>this.max.y)}containsBox(a){return this.min.x<=a.min.x&&a.max.x<=this.max.x&&this.min.y<=a.min.y&&a.max.y<=this.max.y}getParameter(a,b){return b.set((a.x-this.min.x)/(this.max.x-this.min.x),(a.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(a){return!(a.max.x<this.min.x)&&!(a.min.x>this.max.x)&&!(a.max.y<this.min.y)&&!(a.min.y>this.max.y)}clampPoint(a,b){return b.copy(a).clamp(this.min,this.max)}distanceToPoint(a){let b=hR.copy(a).clamp(this.min,this.max);return b.sub(a).length()}intersect(a){return this.min.max(a.min),this.max.min(a.max),this}union(a){return this.min.min(a.min),this.max.max(a.max),this}translate(a){return this.min.add(a),this.max.add(a),this}equals(a){return a.min.equals(this.min)&&a.max.equals(this.max)}}hS.prototype.isBox2=!0;let hT=new aq,hU=new aq,hV=(new aq,new aq),hW=new aV,hX=new aV;function hY(a){let b=[];!0===a.isBone&&b.push(a);for(let c=0;c<a.children.length;c++)b.push.apply(b,hY(a.children[c]));return b}new aq,new ae,new ae,new aq,new aq,new aq;let hZ=new aq;new b7;new at,new aq;let h$=new ArrayBuffer(4),h_=(new Float32Array(h$),new Uint32Array(h$),new Uint32Array(512)),h0=new Uint32Array(512);for(let h1=0;h1<256;++h1){let h2=h1-127;h2< -27?(h_[h1]=0,h_[256|h1]=32768,h0[h1]=24,h0[256|h1]=24):h2< -14?(h_[h1]=1024>> -h2-14,h_[256|h1]=1024>> -h2-14|32768,h0[h1]=-h2-1,h0[256|h1]=-h2-1):h2<=15?(h_[h1]=h2+15<<10,h_[256|h1]=h2+15<<10|32768,h0[h1]=13,h0[256|h1]=13):h2<128?(h_[h1]=31744,h_[256|h1]=64512,h0[h1]=24,h0[256|h1]=24):(h_[h1]=31744,h_[256|h1]=64512,h0[h1]=13,h0[256|h1]=13)}let h3=new Uint32Array(2048),h4=new Uint32Array(64),h5=new Uint32Array(64);for(let h6=1;h6<1024;++h6){let h7=h6<<13,h8=0;for(;(8388608&h7)==0;)h7<<=1,h8-=8388608;h7&=-8388609,h8+=947912704,h3[h6]=h7|h8}for(let h9=1024;h9<2048;++h9)h3[h9]=939524096+(h9-1024<<13);for(let ia=1;ia<31;++ia)h4[ia]=ia<<23;h4[31]=1199570944,h4[32]=2147483648;for(let ib=33;ib<63;++ib)h4[ib]=2147483648+(ib-32<<23);h4[63]=3347054592;for(let ic=1;ic<64;++ic)32!==ic&&(h5[ic]=1024);fq.create=function(a,b){return console.log("THREE.Curve.create() has been deprecated"),a.prototype=Object.create(fq.prototype),a.prototype.constructor=a,a.prototype.getPoint=b,a},fK.prototype.fromPoints=function(a){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(a)},(class extends fh{constructor(a=10,b=10,c=4473924,d=8947848){c=new ae(c),d=new ae(d);let e=b/2,f=a/b,g=a/2,h=[],i=[];for(let j=0,k=0,l=-g;j<=b;j++,l+=f){h.push(-g,0,l,g,0,l),h.push(l,0,-g,l,0,g);let m=j===e?c:d;m.toArray(i,k),k+=3,m.toArray(i,k),k+=3,m.toArray(i,k),k+=3,m.toArray(i,k),k+=3}let n=new bK;n.setAttribute("position",new bC(h,3)),n.setAttribute("color",new bC(i,3));let o=new e8({vertexColors:!0,toneMapped:!1});super(n,o),this.type="GridHelper"}}).prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")},(class extends fh{constructor(a){let b=hY(a),c=new bK,d=[],e=[],f=new ae(0,0,1),g=new ae(0,1,0);for(let h=0;h<b.length;h++){let i=b[h];i.parent&&i.parent.isBone&&(d.push(0,0,0),d.push(0,0,0),e.push(f.r,f.g,f.b),e.push(g.r,g.g,g.b))}c.setAttribute("position",new bC(d,3)),c.setAttribute("color",new bC(e,3));let j=new e8({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(c,j),this.type="SkeletonHelper",this.isSkeletonHelper=!0,this.root=a,this.bones=b,this.matrix=a.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(a){let b=this.bones,c=this.geometry,d=c.getAttribute("position");hX.copy(this.root.matrixWorld).invert();for(let e=0,f=0;e<b.length;e++){let g=b[e];g.parent&&g.parent.isBone&&(hW.multiplyMatrices(hX,g.matrixWorld),hV.setFromMatrixPosition(hW),d.setXYZ(f,hV.x,hV.y,hV.z),hW.multiplyMatrices(hX,g.parent.matrixWorld),hV.setFromMatrixPosition(hW),d.setXYZ(f+1,hV.x,hV.y,hV.z),f+=2)}c.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(a)}}).prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")},g8.prototype.extractUrlBase=function(a){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),hv.extractUrlBase(a)},g8.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}},hS.prototype.center=function(a){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(a)},hS.prototype.empty=function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},hS.prototype.isIntersectionBox=function(a){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(a)},hS.prototype.size=function(a){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(a)},at.prototype.center=function(a){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(a)},at.prototype.empty=function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},at.prototype.isIntersectionBox=function(a){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(a)},at.prototype.isIntersectionSphere=function(a){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(a)},at.prototype.size=function(a){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(a)},a3.prototype.toVector3=function(){console.error("THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead")},aM.prototype.empty=function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()},ci.prototype.setFromMatrix=function(a){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(a)},(class{constructor(a=new aq,b=new aq){this.start=a,this.end=b}set(a,b){return this.start.copy(a),this.end.copy(b),this}copy(a){return this.start.copy(a.start),this.end.copy(a.end),this}getCenter(a){return a.addVectors(this.start,this.end).multiplyScalar(.5)}delta(a){return a.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(a,b){return this.delta(b).multiplyScalar(a).add(this.start)}closestPointToPointParameter(a,b){hT.subVectors(a,this.start),hU.subVectors(this.end,this.start);let c=hU.dot(hU),d=hU.dot(hT),e=d/c;return b&&(e=H(e,0,1)),e}closestPointToPoint(a,b,c){let d=this.closestPointToPointParameter(a,b);return this.delta(c).multiplyScalar(d).add(this.start)}applyMatrix4(a){return this.start.applyMatrix4(a),this.end.applyMatrix4(a),this}equals(a){return a.start.equals(this.start)&&a.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}).prototype.center=function(a){return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),this.getCenter(a)},R.prototype.flattenToArrayOffset=function(a,b){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(a,b)},R.prototype.multiplyVector3=function(a){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),a.applyMatrix3(this)},R.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},R.prototype.applyToBufferAttribute=function(a){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),a.applyMatrix3(this)},R.prototype.applyToVector3Array=function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")},R.prototype.getInverse=function(a){return console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(a).invert()},aV.prototype.extractPosition=function(a){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(a)},aV.prototype.flattenToArrayOffset=function(a,b){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(a,b)},aV.prototype.getPosition=function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),new aq().setFromMatrixColumn(this,3)},aV.prototype.setRotationFromQuaternion=function(a){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(a)},aV.prototype.multiplyToArray=function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},aV.prototype.multiplyVector3=function(a){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),a.applyMatrix4(this)},aV.prototype.multiplyVector4=function(a){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),a.applyMatrix4(this)},aV.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},aV.prototype.rotateAxis=function(a){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),a.transformDirection(this)},aV.prototype.crossVector=function(a){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),a.applyMatrix4(this)},aV.prototype.translate=function(){console.error("THREE.Matrix4: .translate() has been removed.")},aV.prototype.rotateX=function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},aV.prototype.rotateY=function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},aV.prototype.rotateZ=function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},aV.prototype.rotateByAxis=function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},aV.prototype.applyToBufferAttribute=function(a){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),a.applyMatrix4(this)},aV.prototype.applyToVector3Array=function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},aV.prototype.makeFrustum=function(a,b,c,d,e,f){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(a,b,d,c,e,f)},aV.prototype.getInverse=function(a){return console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(a).invert()},cf.prototype.isIntersectionLine=function(a){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(a)},ap.prototype.multiplyVector3=function(a){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),a.applyQuaternion(this)},ap.prototype.inverse=function(){return console.warn("THREE.Quaternion: .inverse() has been renamed to invert()."),this.invert()},aU.prototype.isIntersectionBox=function(a){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(a)},aU.prototype.isIntersectionPlane=function(a){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(a)},aU.prototype.isIntersectionSphere=function(a){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(a)},bt.prototype.area=function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()},bt.prototype.barycoordFromPoint=function(a,b){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(a,b)},bt.prototype.midpoint=function(a){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(a)},bt.prototypenormal=function(a){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(a)},bt.prototype.plane=function(a){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(a)},bt.barycoordFromPoint=function(a,b,c,d,e){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),bt.getBarycoord(a,b,c,d,e)},bt.normal=function(a,b,c,d){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),bt.getNormal(a,b,c,d)},fW.prototype.extractAllPoints=function(a){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(a)},fW.prototype.extrude=function(a){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new gu(this,a)},fW.prototype.makeGeometry=function(a){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new gA(this,a)},Q.prototype.fromAttribute=function(a,b,c){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(a,b,c)},Q.prototype.distanceToManhattan=function(a){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(a)},Q.prototype.lengthManhattan=function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},aq.prototype.setEulerFromRotationMatrix=function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},aq.prototype.setEulerFromQuaternion=function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},aq.prototype.getPositionFromMatrix=function(a){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(a)},aq.prototype.getScaleFromMatrix=function(a){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(a)},aq.prototype.getColumnFromMatrix=function(a,b){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(b,a)},aq.prototype.applyProjection=function(a){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(a)},aq.prototype.fromAttribute=function(a,b,c){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(a,b,c)},aq.prototype.distanceToManhattan=function(a){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(a)},aq.prototype.lengthManhattan=function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},al.prototype.fromAttribute=function(a,b,c){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(a,b,c)},al.prototype.lengthManhattan=function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},bi.prototype.getChildByName=function(a){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(a)},bi.prototype.renderDepth=function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},bi.prototype.translate=function(a,b){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(b,a)},bi.prototype.getWorldRotation=function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")},bi.prototype.applyMatrix=function(a){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(a)},Object.defineProperties(bi.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(a){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=a}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}}),b0.prototype.setDrawMode=function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")},Object.defineProperties(b0.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),0},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}}),eZ.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")},b8.prototype.setLens=function(a,b){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),void 0!==b&&(this.filmGauge=b),this.setFocalLength(a)},Object.defineProperties(he.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(a){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=a}},shadowCameraLeft:{set:function(a){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=a}},shadowCameraRight:{set:function(a){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=a}},shadowCameraTop:{set:function(a){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=a}},shadowCameraBottom:{set:function(a){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=a}},shadowCameraNear:{set:function(a){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=a}},shadowCameraFar:{set:function(a){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=a}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(a){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=a}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(a){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=a}},shadowMapHeight:{set:function(a){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=a}}}),Object.defineProperties(bz.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),35048===this.usage},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(35048)}}}),bz.prototype.setDynamic=function(a){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===a?35048:35044),this},bz.prototype.copyIndicesArray=function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},bz.prototype.setArray=function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},bK.prototype.addIndex=function(a){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(a)},bK.prototype.addAttribute=function(a,b){return(console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),b&&b.isBufferAttribute||b&&b.isInterleavedBufferAttribute)?"index"===a?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(b),this):this.setAttribute(a,b):(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(a,new bz(arguments[1],arguments[2])))},bK.prototype.addDrawCall=function(a,b,c){void 0!==c&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(a,b)},bK.prototype.clearDrawCalls=function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},bK.prototype.computeOffsets=function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},bK.prototype.removeAttribute=function(a){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(a)},bK.prototype.applyMatrix=function(a){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(a)},Object.defineProperties(bK.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}}),eA.prototype.setDynamic=function(a){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===a?35048:35044),this},eA.prototype.setArray=function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},gu.prototype.getArrays=function(){console.error("THREE.ExtrudeGeometry: .getArrays() has been removed.")},gu.prototype.addShapeList=function(){console.error("THREE.ExtrudeGeometry: .addShapeList() has been removed.")},gu.prototype.addShape=function(){console.error("THREE.ExtrudeGeometry: .addShape() has been removed.")},ez.prototype.dispose=function(){console.error("THREE.Scene: .dispose() has been removed.")},hO.prototype.onUpdate=function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this},Object.defineProperties(bv.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new ae}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(a){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===a}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(a){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=a}},vertexTangents:{get:function(){console.warn("THREE."+this.type+": .vertexTangents has been removed.")},set:function(){console.warn("THREE."+this.type+": .vertexTangents has been removed.")}}}),Object.defineProperties(b6.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(a){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=a}}}),ew.prototype.clearTarget=function(a,b,c,d){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(a),this.clear(b,c,d)},ew.prototype.animate=function(a){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(a)},ew.prototype.getCurrentRenderTarget=function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},ew.prototype.getMaxAnisotropy=function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},ew.prototype.getPrecision=function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},ew.prototype.resetGLState=function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},ew.prototype.supportsFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},ew.prototype.supportsHalfFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},ew.prototype.supportsStandardDerivatives=function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},ew.prototype.supportsCompressedTextureS3TC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},ew.prototype.supportsCompressedTexturePVRTC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},ew.prototype.supportsBlendMinMax=function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},ew.prototype.supportsVertexTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},ew.prototype.supportsInstancedArrays=function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},ew.prototype.enableScissorTest=function(a){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(a)},ew.prototype.initMaterial=function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},ew.prototype.addPrePlugin=function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},ew.prototype.addPostPlugin=function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},ew.prototype.updateShadowMap=function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},ew.prototype.setFaceCulling=function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")},ew.prototype.allocTextureUnit=function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")},ew.prototype.setTexture=function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")},ew.prototype.setTexture2D=function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")},ew.prototype.setTextureCube=function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")},ew.prototype.getActiveMipMapLevel=function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()},Object.defineProperties(ew.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(a){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=a}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(a){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=a}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(a){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=!0===a?v:3e3}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}},gammaFactor:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaFactor has been removed."),2},set:function(){console.warn("THREE.WebGLRenderer: .gammaFactor has been removed.")}}}),Object.defineProperties(el.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}}),Object.defineProperties(am.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(a){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=a}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(a){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=a}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(a){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=a}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(a){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=a}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(a){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=a}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(a){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=a}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(a){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=a}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(a){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=a}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(a){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=a}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(a){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=a}}}),(class extends bi{constructor(a){super(),this.type="Audio",this.listener=a,this.context=a.context,this.gain=this.context.createGain(),this.gain.connect(a.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(a){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=a,this.connect(),this}setMediaElementSource(a){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(a),this.connect(),this}setMediaStreamSource(a){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(a),this.connect(),this}setBuffer(a){return this.buffer=a,this.sourceType="buffer",this.autoplay&&this.play(),this}play(a=0){if(!0===this.isPlaying){console.warn("THREE.Audio: Audio is already playing.");return}if(!1===this.hasPlaybackControl){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+a;let b=this.context.createBufferSource();return b.buffer=this.buffer,b.loop=this.loop,b.loopStart=this.loopStart,b.loopEnd=this.loopEnd,b.onended=this.onEnded.bind(this),b.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=b,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(!1===this.hasPlaybackControl){console.warn("THREE.Audio: this Audio has no playback control.");return}return!0===this.isPlaying&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,!0===this.loop&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(){if(!1===this.hasPlaybackControl){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let a=1,b=this.filters.length;a<b;a++)this.filters[a-1].connect(this.filters[a]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let a=1,b=this.filters.length;a<b;a++)this.filters[a-1].disconnect(this.filters[a]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(a){return a||(a=[]),!0===this._connected?(this.disconnect(),this.filters=a.slice(),this.connect()):this.filters=a.slice(),this}setDetune(a){if(this.detune=a,void 0!==this.source.detune)return!0===this.isPlaying&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(a){return this.setFilters(a?[a]:[])}setPlaybackRate(a){if(!1===this.hasPlaybackControl){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=a,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(a){if(!1===this.hasPlaybackControl){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=a,!0===this.isPlaying&&(this.source.loop=this.loop),this}setLoopStart(a){return this.loopStart=a,this}setLoopEnd(a){return this.loopEnd=a,this}getVolume(){return this.gain.gain.value}setVolume(a){return this.gain.gain.setTargetAtTime(a,this.context.currentTime,.01),this}}).prototype.load=function(a){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");let b=this,c=new hA;return c.load(a,function(a){b.setBuffer(a)}),this},(class{constructor(a,b=2048){this.analyser=a.context.createAnalyser(),this.analyser.fftSize=b,this.data=new Uint8Array(this.analyser.frequencyBinCount),a.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let a=0,b=this.getFrequencyData();for(let c=0;c<b.length;c++)a+=b[c];return a/b.length}}).prototype.getData=function(){return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),this.getFrequencyData()},b9.prototype.updateCubeMap=function(a,b){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(a,b)},b9.prototype.clear=function(a,b,c,d){return console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear()."),this.renderTarget.clear(a,b,c,d)},ag.crossOrigin=void 0,ag.loadTexture=function(a,b,c,d){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");let e=new hd;e.setCrossOrigin(this.crossOrigin);let f=e.load(a,c,void 0,d);return b&&(f.mapping=b),f},ag.loadTextureCube=function(a,b,c,d){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");let e=new hc;e.setCrossOrigin(this.crossOrigin);let f=e.load(a,c,void 0,d);return b&&(f.mapping=b),f},ag.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},ag.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:"139"}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__="139")}}])